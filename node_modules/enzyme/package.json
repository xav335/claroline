{
  "_args": [
    [
      {
        "name": "enzyme",
        "raw": "enzyme@https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
        "rawSpec": "https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
        "type": "remote"
      },
      "/home/jenkins/workspace/release"
    ]
  ],
  "_from": "enzyme@>=2.4.1 <3.0.0",
  "_id": "enzyme@2.5.1",
  "_inCache": true,
  "_location": "/enzyme",
  "_phantomChildren": {},
  "_requested": {
    "name": "enzyme",
    "raw": "enzyme@https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
    "rawSpec": "https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
  "_shasum": "d7c8e2352c04c27fcf2523fb17bc7e0569352743",
  "_shrinkwrap": null,
  "_spec": "enzyme@https://registry.npmjs.org/enzyme/-/enzyme-2.5.1.tgz",
  "_where": "/home/jenkins/workspace/release",
  "author": {
    "email": "leland.richardson@airbnb.com",
    "name": "Leland Richardson"
  },
  "bugs": {
    "url": "https://github.com/airbnb/enzyme/issues"
  },
  "dependencies": {
    "cheerio": "^0.22.0",
    "is-subset": "^0.1.1",
    "lodash": "^4.15.0",
    "object-is": "^1.0.1",
    "object.assign": "^4.0.4",
    "object.values": "^1.0.3"
  },
  "description": "JavaScript Testing utilities for React",
  "devDependencies": {
    "babel-cli": "^6.16.0",
    "babel-core": "^6.17.0",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.5",
    "babel-preset-airbnb": "^2.1.1",
    "babel-register": "^6.16.3",
    "chai": "^3.5.0",
    "coveralls": "^2.11.14",
    "enzyme-example-jest": "^0.1.0",
    "enzyme-example-karma": "^0.1.1",
    "enzyme-example-karma-webpack": "^0.1.4",
    "enzyme-example-mocha": "^0.1.0",
    "enzyme-example-react-native": "^0.1.0",
    "eslint": "^3.8.0",
    "eslint-config-airbnb": "^12.0.0",
    "eslint-plugin-import": "^1.16.0",
    "eslint-plugin-jsx-a11y": "^2.2.3",
    "eslint-plugin-react": "^6.4.1",
    "gitbook-cli": "^1.0.1",
    "istanbul": "^1.0.0-alpha.2",
    "jsdom": "^6.1.0",
    "json-loader": "^0.5.4",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^1.0.1",
    "karma-firefox-launcher": "^1.0.0",
    "karma-mocha": "^1.1.1",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^1.7.0",
    "mocha": "^3.1.2",
    "rimraf": "^2.5.4",
    "sinon": "^1.17.6",
    "webpack": "^1.13.2"
  },
  "homepage": "https://github.com/airbnb/enzyme#readme",
  "keywords": [
    "javascript",
    "shallow rendering",
    "shallowRender",
    "test",
    "reactjs",
    "react",
    "flux",
    "testing",
    "test utils",
    "assertion helpers",
    "tdd",
    "mocha"
  ],
  "license": "MIT",
  "main": "build",
  "name": "enzyme",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "0.13.x || 0.14.x || ^15.0.0-0 || 15.x"
  },
  "readme": "Enzyme\n=======\n\n[![Join the chat at https://gitter.im/airbnb/enzyme](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/enzyme?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![npm Version](https://img.shields.io/npm/v/enzyme.svg)](https://www.npmjs.com/package/enzyme) [![License](https://img.shields.io/npm/l/enzyme.svg)](https://www.npmjs.com/package/enzyme) [![Build Status](https://travis-ci.org/airbnb/enzyme.svg)](https://travis-ci.org/airbnb/enzyme) [![Coverage Status](https://coveralls.io/repos/airbnb/enzyme/badge.svg?branch=master&service=github)](https://coveralls.io/github/airbnb/enzyme?branch=master)\n[![Discord Channel](https://img.shields.io/badge/discord-testing@reactiflux-738bd7.svg?style=flat-square)](https://discord.gg/0ZcbPKXt5bY8vNTA)\n\n\n\nEnzyme is a JavaScript Testing utility for React that makes it easier to assert, manipulate,\nand traverse your React Components' output.\n\nEnzyme's API is meant to be intuitive and flexible by mimicking jQuery's API for DOM manipulation\nand traversal.\n\nEnzyme is unopinionated regarding which test runner or assertion library you use, and should be\ncompatible with all major test runners and assertion libraries out there. The documentation and\nexamples for enzyme use [mocha](https://mochajs.org/) and [chai](http://chaijs.com/), but you\nshould be able to extrapolate to your framework of choice.\n\nIf you are interested in using enzyme with custom Chai.js assertions and convenience functions for\ntesting your React components, you can consider using [chai-enzyme](https://github.com/producthunt/chai-enzyme).\n\nIf you are interested in using enzyme with custom Jasmine/Jest assertions and convenience functions for\ntesting your React components, you can consider using [jasmine-enzyme](https://github.com/blainekasten/jasmine-enzyme).\n\n\n[Using Enzyme with Mocha](/docs/guides/mocha.md)\n\n[Using Enzyme with Karma](/docs/guides/karma.md)\n\n[Using Enzyme with Browserify](/docs/guides/browserify.md)\n\n[Using Enzyme with SystemJS](/docs/guides/systemjs.md)\n\n[Using Enzyme with WebPack](/docs/guides/webpack.md)\n\n[Using Enzyme with JSDOM](/docs/guides/jsdom.md)\n\n[Using Enzyme with React Native](/docs/guides/react-native.md)\n\n[Using Enzyme with Jest](/docs/guides/jest.md)\n\n[Using Enzyme with Lab](/docs/guides/lab.md)\n\n[Using Enzyme with Tape and AVA](/docs/guides/tape-ava.md)\n\n### [Installation](/docs/installation/README.md)\n\nTo get started with enzyme, you can simply install it with npm:\n\n```bash\nnpm i --save-dev enzyme\n```\n\nEnzyme is currently compatible with `React 15.x`, `React 0.14.x` and `React 0.13.x`. In order to\nachieve this compatibility, some dependencies cannot be explicitly listed in our `package.json`.\n\nIf you are using `React 0.14` or `React 15.x`, in addition to `enzyme`, you will have to ensure that\nyou also have the following npm modules installed if they were not already:\n\n```bash\nnpm i --save-dev react-addons-test-utils\nnpm i --save-dev react-dom\n```\n\n\nBasic Usage\n===========\n\n## [Shallow Rendering](/docs/api/shallow.md)\n\n```javascript\nimport React from 'react';\nimport { shallow } from 'enzyme';\nimport sinon from 'sinon';\n\nimport MyComponent from './MyComponent';\nimport Foo from './Foo';\n\ndescribe('<MyComponent />', () => {\n  it('renders three <Foo /> components', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find(Foo)).to.have.length(3);\n  });\n\n  it('renders an `.icon-star`', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find('.icon-star')).to.have.length(1);\n  });\n\n  it('renders children when passed in', () => {\n    const wrapper = shallow(\n      <MyComponent>\n        <div className=\"unique\" />\n      </MyComponent>\n    );\n    expect(wrapper.contains(<div className=\"unique\" />)).to.equal(true);\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = shallow(\n      <Foo onButtonClick={onButtonClick} />\n    );\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/shallow.md)\n\n\n\n## [Full DOM Rendering](/docs/api/mount.md)\n\n```javascript\nimport React from 'react';\nimport sinon from 'sinon';\nimport { mount } from 'enzyme';\n\nimport MyComponent from './MyComponent';\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('allows us to set props', () => {\n    const wrapper = mount(<Foo bar=\"baz\" />);\n    expect(wrapper.props().bar).to.equal('baz');\n    wrapper.setProps({ bar: 'foo' });\n    expect(wrapper.props().bar).to.equal('foo');\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = mount(\n      <Foo onButtonClick={onButtonClick} />\n    );\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n\n  it('calls componentDidMount', () => {\n    sinon.spy(Foo.prototype, 'componentDidMount');\n    const wrapper = mount(<Foo />);\n    expect(Foo.prototype.componentDidMount).to.have.property('callCount', 1);\n    Foo.prototype.componentDidMount.restore();\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/mount.md)\n\n\n## [Static Rendered Markup](/docs/api/render.md)\n\n```javascript\nimport React from 'react';\nimport { render } from 'enzyme';\n\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('renders three `.foo-bar`s', () => {\n    const wrapper = render(<Foo />);\n    expect(wrapper.find('.foo-bar').length).to.equal(3);\n  });\n\n  it('renders the title', () => {\n    const wrapper = render(<Foo title=\"unique\" />);\n    expect(wrapper.text()).to.contain('unique');\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/render.md)\n\n\n### Future\n\n[Enzyme Future](/docs/future.md)\n\n\n### Contributing\n\nSee the [Contributors Guide](/CONTRIBUTING.md)\n\n### In the wild\n\nOrganizations and projects using `enzyme` can list themselves [here](INTHEWILD.md).\n\n### License\n\n[MIT](/LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/airbnb/enzyme.git"
  },
  "scripts": {
    "build": "babel src --out-dir build",
    "check": "npm run lint && npm run test:all",
    "clean": "rimraf build",
    "docs:build": "npm run docs:prepare && gitbook build",
    "docs:clean": "rimraf _book",
    "docs:prepare": "gitbook install",
    "docs:publish": "npm run docs:clean && npm run docs:build && cd _book && git init && git commit --allow-empty -m 'update book' && git fetch git@github.com:airbnb/enzyme.git gh-pages && git checkout -b gh-pages && git add . && git commit -am 'update book' && git push git@github.com:airbnb/enzyme.git gh-pages --force",
    "docs:watch": "npm run docs:prepare && gitbook serve",
    "lint": "eslint --ext js,jsx src test",
    "postversion": "git push && git push --tags && npm run clean && npm run docs:publish",
    "prepublish": "npm run clean && npm run build",
    "pretest": "npm run lint",
    "preversion": "npm run clean && npm run check",
    "react:13": "npm run react:clean && npm i react@0.13",
    "react:14": "npm run react:clean && npm i react@0.14 react-dom@0.14 react-addons-test-utils@0.14",
    "react:15": "npm run react:clean && npm i react@15 react-dom@15 react-addons-test-utils@15",
    "react:clean": "rimraf node_modules/react node_modules/react-dom node_modules/react-addons-test-utils",
    "test": "npm run test:only",
    "test:all": "npm run react:13 && npm run test:only && npm run react:14 && npm run test:only && npm run react:15 && npm run test:only",
    "test:env": "sh ./example-test.sh",
    "test:karma": "karma start",
    "test:only": "mocha --recursive test --reporter dot",
    "test:single": "mocha --watch --reporter dot",
    "test:watch": "mocha --recursive test --watch --reporter dot",
    "travis": "babel-node ./node_modules/.bin/istanbul cover --report html _mocha -- test --recursive",
    "version": "npm run build"
  },
  "version": "2.5.1"
}
