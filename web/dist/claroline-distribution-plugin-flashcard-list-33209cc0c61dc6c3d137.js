webpackJsonp([28],{0:function(module,exports,__webpack_require__){"use strict";var _index=__webpack_require__(1);var _index2=_interopRequireDefault(_index);__webpack_require__(5);__webpack_require__(245);__webpack_require__(9);__webpack_require__(149);var _mainPartial=__webpack_require__(1694);var _mainPartial2=_interopRequireDefault(_mainPartial);var _studyPartial=__webpack_require__(1695);var _studyPartial2=_interopRequireDefault(_studyPartial);var _createNotePartial=__webpack_require__(1696);var _createNotePartial2=_interopRequireDefault(_createNotePartial);var _editNotePartial=__webpack_require__(1697);var _editNotePartial2=_interopRequireDefault(_editNotePartial);var _listNotePartial=__webpack_require__(1698);var _listNotePartial2=_interopRequireDefault(_listNotePartial);var _editNoteTypePartial=__webpack_require__(1699);var _editNoteTypePartial2=_interopRequireDefault(_editNoteTypePartial);var _editDefaultParamPartial=__webpack_require__(1700);var _editDefaultParamPartial2=_interopRequireDefault(_editDefaultParamPartial);var _editUserParamPartial=__webpack_require__(1701);var _editUserParamPartial2=_interopRequireDefault(_editUserParamPartial);var _FlashCardCtrl=__webpack_require__(1702);var _FlashCardCtrl2=_interopRequireDefault(_FlashCardCtrl);var _CreateNoteCtrl=__webpack_require__(1703);var _CreateNoteCtrl2=_interopRequireDefault(_CreateNoteCtrl);var _EditNoteCtrl=__webpack_require__(1704);var _EditNoteCtrl2=_interopRequireDefault(_EditNoteCtrl);var _ListNoteCtrl=__webpack_require__(1705);var _ListNoteCtrl2=_interopRequireDefault(_ListNoteCtrl);var _EditNoteTypeCtrl=__webpack_require__(1706);var _EditNoteTypeCtrl2=_interopRequireDefault(_EditNoteTypeCtrl);var _StudyCtrl=__webpack_require__(1707);var _StudyCtrl2=_interopRequireDefault(_StudyCtrl);var _EditDefaultParamCtrl=__webpack_require__(1708);var _EditDefaultParamCtrl2=_interopRequireDefault(_EditDefaultParamCtrl);var _EditUserParamCtrl=__webpack_require__(1709);var _EditUserParamCtrl2=_interopRequireDefault(_EditUserParamCtrl);var _FlashCardService=__webpack_require__(1710);var _FlashCardService2=_interopRequireDefault(_FlashCardService);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}_index2.default.module("FlashCardModule",["ui.bootstrap","ngRoute","ClarolineAPI","FormBuilder"]).service("FlashCardService",["$http",_FlashCardService2.default]).factory("FlashCardModal",["$uibModal",function($modal){return{open:function open(template){return $modal.open({template:template})}}}]).controller("FlashCardCtrl",["FlashCardService",_FlashCardCtrl2.default]).controller("StudyCtrl",["FlashCardService",_StudyCtrl2.default]).controller("CreateNoteCtrl",["FlashCardService","$location",_CreateNoteCtrl2.default]).controller("EditNoteCtrl",["FlashCardService","$routeParams","$location",_EditNoteCtrl2.default]).controller("ListNoteCtrl",["FlashCardService","ClarolineAPIService",_ListNoteCtrl2.default]).controller("EditNoteTypeCtrl",["FlashCardService","$routeParams","$location",_EditNoteTypeCtrl2.default]).controller("EditDefaultParamCtrl",["FlashCardService","$routeParams","$location",_EditDefaultParamCtrl2.default]).controller("EditUserParamCtrl",["FlashCardService","$routeParams","$location",_EditUserParamCtrl2.default]).filter("trans",function(){return function(string){var domain=arguments.length>1&&arguments[1]!==undefined?arguments[1]:"platform";return window.Translator.trans(string,domain)}}).config(["$routeProvider",function($routeProvider){$routeProvider.when("/",{template:_mainPartial2.default,bindToController:true,controller:"FlashCardCtrl",controllerAs:"vm"}).when("/study",{template:_studyPartial2.default,bindToController:true,controller:"StudyCtrl",controllerAs:"vm"}).when("/create_note",{template:_createNotePartial2.default,bindToController:true,controller:"CreateNoteCtrl",controllerAs:"vm"}).when("/edit_note/:id",{template:_editNotePartial2.default,bindToController:true,controller:"EditNoteCtrl",controllerAs:"vm"}).when("/list_notes",{template:_listNotePartial2.default,bindToController:true,controller:"ListNoteCtrl",controllerAs:"vm"}).when("/edit_note_type/:id",{template:_editNoteTypePartial2.default,bindToController:true,controller:"EditNoteTypeCtrl",controllerAs:"vm"}).when("/edit_default_param",{template:_editDefaultParamPartial2.default,bindToController:true,controller:"EditDefaultParamCtrl",controllerAs:"vm"}).when("/edit_user_param",{template:_editUserParamPartial2.default,bindToController:true,controller:"EditUserParamCtrl",controllerAs:"vm"}).otherwise({redirectTo:"/"})}])},134:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var NotBlank=function(){function NotBlank(){(0,_classCallCheck3.default)(this,NotBlank)}(0,_createClass3.default)(NotBlank,[{key:"validate",value:function validate(el){return!(el===undefined||el===""||el===null)}},{key:"getErrorMessage",value:function getErrorMessage(el){return Translator.trans("value_not_blank",{},"validators")}}]);return NotBlank}();exports.default=NotBlank},1694:function(module,exports){module.exports='<div class="panel-body" >\n\n  <div class="progress learning-progress"\n       data-ng-if="vm.nbrTotalCards > 0">\n    <div class="progress-bar"\n         role="progessbar"\n         aria-valuenow="{{ vm.nbrRevisedCards }}"\n         aria-valuemax="{{ vm.nbrTotalCards }}"\n         style="width: {{ vm.nbrRevisedCards / vm.nbrTotalCards * 100 }}%">\n      {{ vm.RevisedCards }}\n    </div>\n  </div>\n  <div class="learing-progress-text text-center"\n       data-ng-if="vm.nbrTotalCards > 0">\n    {{ vm.nbrRevisedCards }} / {{ vm.nbrTotalCards }}\n  </div>\n  <div class="alert alert-info"\n       data-ng-if="vm.nbrTotalCards == 0">\n    <i class="fa fa-info-circle"></i>\n    {{ \'info.deck_empty\'|trans:\'flashcard\' }}\n  </div>\n\n\n  <h1 class="today-title text-center">{{ \'today\'|trans }}</h1>\n\n  <div class="today"\n       data-ng-if="vm.learningCards.length > 0 || \n       vm.newCards.length > 0">\n    <table>\n      <tr>\n        <td>{{ \'new_cards\'|trans:\'flashcard\' }} :</td>\n        <td>{{ vm.newCards.length }}</td>\n      </tr>\n      <tr>\n        <td>{{ \'card_to_review\'|trans:\'flashcard\' }} :</td>\n        <td>{{ vm.learningCards.length }}</td>\n      </tr>\n    </table>\n  </div>\n\n  <div class="alert alert-info"\n       data-ng-if="vm.learningCards.length == 0 &&\n       vm.newCards.length == 0">\n    <i class="fa fa-info-circle"></i>\n    {{ \'info.no_cards_today\'|trans:\'flashcard\' }}\n  </div>\n\n</div>\n\n<div class="panel-footer text-center">\n\n  <a class="btn btn-default"\n     data-ng-if="!vm.canEdit"\n     href="#/edit_default_param?nexturl=/">\n    {{ \'default_parameters\'|trans:\'flashcard\' }}\n  </a>\n  <a class="btn btn-default"\n     href="#/edit_user_param?nexturl=/">\n    {{ \'parameters\'|trans:\'flashcard\' }}\n  </a>\n  <a class="btn btn-default"\n     href="#/list_notes">\n    {{ \'cards.list\'|trans:\'flashcard\' }}\n  </a>\n  <a class="btn btn-default"\n     data-ng-if="!vm.canEdit"\n     href="#/edit_note_type/new?nexturl=/">\n    {{ \'note_types.add\'|trans:\'flashcard\' }}\n  </a>\n  <a class="btn btn-default"\n     data-ng-if="!vm.canEdit"\n     href="#/create_note">\n    {{ \'cards.add\'|trans:\'flashcard\' }}\n  </a>\n  <a class="btn btn-primary"\n     href="#/study">\n    {{ \'study.begin\'|trans:\'flashcard\' }}\n  </a>\n\n</div>\n'},1695:function(module,exports){module.exports='<div class="panel-body"\n     ng-class="vm.fullscreenClass">\n  <button class="btn btn-default btn-fullscreen"\n          data-ng-click="vm.toggleFullscreen()">\n    <i class="fa"\n       ng-class="vm.fullscreenClassButton"></i>\n  </button>\n\n\n  <div class="text-center"\n       data-ng-if="vm.currentCard">\n    <div ng-repeat="question in vm.questions">\n      <!-- Display Generic value -->\n      <div ng-if="question.type == \'generic\'">\n        <span class="h2">{{ question.field_label.name }} : </span>\n        <span class="h2">{{ question.value }}</span>\n      </div>\n      <!-- Display Text value -->\n      <div ng-if="question.type == \'text\'">\n        <span class="h2">{{ question.field_label.name }} : </span>\n        <span class="h2">{{ question.value }}</span>\n      </div>\n      <!-- Display Image value -->\n      <div ng-if="question.type == \'image\'"\n           class="row">\n        <div class="col-xs-offset-4 col-xs-4">\n        <span class="h2">{{ question.field_label.name }} : </span>\n        <img class="img-responsive img-thumbnail"\n             style="width: 80%"\n             ng-src="{{ question.value }}"\n             alt="{{ question.alt}}" />\n        </div>\n      </div>\n    </div>\n    <hr/>\n    <div ng-repeat="answer in vm.answers">\n      <!-- Display Generic value -->\n      <div ng-if="answer.type == \'generic\'">\n        <span class="h2">{{ answer.field_label.name }} : </span>\n        <span class="h2">{{ answer.value }}</span>\n      </div>\n      <!-- Display Text value -->\n      <div ng-if="answer.type == \'text\'">\n        <span class="h2">{{ answer.field_label.name }} : </span>\n        <span class="h2">{{ answer.value }}</span>\n      </div>\n      <!-- Display Image value -->\n      <div ng-if="answer.type == \'image\'"\n           class="row">\n        <div class="col-xs-offset-4 col-xs-4">\n        <span class="h2">{{ answer.field_label.name }} : </span>\n        <img class="img-responsive img-thumbnail"\n             style="width: 80%"\n             ng-src="{{ answer.value }}"\n             alt="{{ answer.alt}}" />\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class="alert alert-info"\n       data-ng-show="!vm.currentCard">\n    <i class="fa fa-info-circle"></i>\n    {{ \'info.no_cards_today\'|trans:\'flashcard\' }}\n  </div>\n\n</div>\n\n<div class="panel-footer text-center"\n     ng-class="vm.fullscreenClassFooter">\n\n  <a class="btn btn-default"\n     href="#/">\n    {{ \'study.stop\'|trans:\'flashcard\' }}\n  </a>\n  <button class="btn btn-primary"\n          data-ng-click="vm.showAnswers()"\n          data-ng-if="vm.answers.length == 0 && vm.currentCard">\n    {{ \'answer.show\'|trans:\'flashcard\' }}\n  </button>\n  <button class="btn btn-default"\n          data-ng-click="vm.cancelLastStudy()"\n          data-ng-if="vm.answers.length == 0 && vm.currentCard &&\n          vm.revisedCards.length != 0">\n    {{ \'study.cancelLastStudy\'|trans:\'flashcard\' }}\n  </button>\n  <button class="btn btn-danger"\n          data-ng-click="vm.validAnswer(0)"\n          data-ng-if="vm.answers.length > 0">\n    {{ \'answer.again\'|trans:\'flashcard\' }}\n  </button>\n  <button class="btn btn-warning"\n          data-ng-click="vm.validAnswer(1)"\n          data-ng-if="vm.answers.length > 0">\n    {{ \'answer.hard\'|trans:\'flashcard\' }}\n  </button>\n  <button class="btn btn-success"\n          data-ng-click="vm.validAnswer(2)"\n          data-ng-if="vm.answers.length > 0">\n    {{ \'answer.good\'|trans:\'flashcard\' }}\n  </button>\n  <button class="btn btn-info"\n          data-ng-click="vm.validAnswer(3)"\n          data-ng-if="vm.answers.length > 0">\n    {{ \'answer.easy\'|trans:\'flashcard\' }}\n  </button>\n\n</div>\n'},1696:function(module,exports){module.exports='<form name="createNoteForm" novalidate>\n\n  <div class="panel-body" >\n\n    <div class="alert alert-danger"\n         data-ng-if="vm.errorMessage !== null">\n      <i class="fa fa-warning"></i>\n      {{ vm.errorMessage|trans:\'flashcard\' }}\n      <ul>\n        <li data-ng-repeat="error in vm.errors track by error.line">\n          {{ error.message|trans:\'flashcard\' }}\n          <span data-ng-if="error.line">\n            ({{ \'errors.line\'|trans:\'flashcard\' }} {{ error.line }})\n          </span>\n        </li>\n      </ul>\n    </div>\n    <div class="form-group"\n         data-ng-class="{ \'has-error\':\n         (createNoteForm.$submitted || createNoteForm.user.$dirty) &&\n         !createNoteForm.user.$valid }">\n      <form-field field="vm.noteTypeField" \n        ng-model="vm.idNoteTypeChoosen"\n        ng-click="vm.updateNoteTypeChoosen()"></form-field>\n      <p class="help-block"\n         data-ng-if="(createNoteForm.$submitted || createNoteForm.user.$dirty) &&\n         createNoteForm.user.$error.required">\n        {{ \'errors.not_blank\'|trans:\'results\' }}\n      </p>\n      <p class="help-block"\n         data-ng-if="(createNoteForm.$submitted || createNoteForm.user.$dirty) &&\n         createNoteForm.user.$error.validUser">\n        {{ \'errors.unknown_user\'|trans:\'results\' }}\n      </p>\n    </div>\n    <div class="form-group"\n         data-ng-if="vm.noteTypeChoosen"\n         data-ng-repeat="fieldLabel in vm.noteTypeChoosen.field_labels">\n      <h3>{{ fieldLabel.name }}</h3>\n      <label for="field-{{ fieldLabel.id }}-type">\n        {{ \'field.type\'|trans:\'flashcard\'}}\n      </label>\n      <select id="field-{{ fieldLabel.id }}-type"\n              class="form-control"\n              data-ng-model="vm.fieldValues[$index].type"\n              required>\n        <option \n          data-ng-repeat="type in vm.fieldTypes"\n          value="{{ type }}">\n          {{ type }}\n        </option>\n      </select>\n\n      <!-- For type Text -->\n      <div data-ng-if="vm.fieldValues[$index].type == \'text\'">\n        <label for="field-{{ fieldLabel.id }}-value">\n          {{ \'field.value\'|trans:\'flashcard\' }} {{ fieldLabel.name }}\n        </label>\n        <input id="field-{{ fieldLabel.id }}-value"\n               type="text"\n               name="field-{{ fieldLabel.id }}-value"\n               class="form-control"\n               data-ng-model="vm.fieldValues[$index].value"\n               required />\n        <p class="help-block"\n           data-ng-if="(createNoteForm.$submitted ||\n           createNoteForm.fieldValues[$index].value.$dirty) &&\n           createNoteForm.fieldValues[$index].value.$error.required">\n          {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n        </p>\n      </div>\n\n      <!-- For type Image -->\n      <div data-ng-if="vm.fieldValues[$index].type == \'image\'">\n        <label for="field-{{ fieldLabel.id }}-value">\n          {{ \'field.image.src\'|trans:\'flashcard\' }}\n        </label>\n        <input id="field-{{ fieldLabel.id }}-value"\n               type="text"\n               name="field-{{ fieldLabel.id }}-value"\n               class="form-control"\n               data-ng-model="vm.fieldValues[$index].value"\n               required />\n        <p class="help-block"\n           data-ng-if="(createNoteForm.$submitted ||\n           createNoteForm.fieldValues[$index].value.$dirty) &&\n           createNoteForm.fieldValues[$index].value.$error.required">\n          {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n        </p>\n        <label for="field-{{ fieldLabel.id }}-alt">\n          {{ \'field.image.alt\'|trans:\'flashcard\' }}\n        </label>\n        <input id="field-{{ fieldLabel.id }}-alt"\n               type="text"\n               name="field-{{ fieldLabel.id }}-alt"\n               class="form-control"\n               data-ng-model="vm.fieldValues[$index].alt"\n               required />\n        <p class="help-block"\n           data-ng-if="(createNoteForm.$submitted ||\n           createNoteForm.fieldValues[$index].alt.$dirty) &&\n           createNoteForm.fieldValues[$index].alt.$error.required">\n          {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n        </p>\n      </div>\n\n    </div>\n\n  </div>\n\n  <div class="panel-footer" data-ng-if="!vm.canEdit">\n    <button type="submit"\n      class="btn btn-primary"\n      data-ng-disabled="!createNoteForm.$valid"\n      data-ng-click="vm.createNote(createNoteForm)">\n      {{ \'create\'|trans }}\n    </button>\n    <a class="btn btn-default"\n       href="#/">\n      {{ \'cancel\'|trans }}\n    </a>\n\n  </div>\n\n</form>\n'},1697:function(module,exports){module.exports='<form name="editNoteForm" novalidate>\n\n  <div class="panel-body" >\n\n    <div class="alert alert-danger"\n         data-ng-if="vm.errorMessage !== null">\n      <i class="fa fa-warning"></i>\n      {{ vm.errorMessage|trans:\'flashcard\' }}\n      <ul>\n        <li data-ng-repeat="error in vm.errors track by error.line">\n          {{ error.message|trans:\'flashcard\' }}\n          <span data-ng-if="error.line">\n            ({{ \'errors.line\'|trans:\'flashcard\' }} {{ error.line }})\n          </span>\n        </li>\n      </ul>\n    </div>\n    <div class="form-group"\n         data-ng-if="vm.note !== undefined"\n         data-ng-repeat="fieldValue in vm.note.field_values">\n      <label for="field-{{ fieldValue.field_label.id }}-value">{{ fieldValue.field_label.name }}</label>\n      <input id="field-{{ fieldValue.field_label.id }}-value"\n             type="text"\n             name="field-{{ fieldValue.field_label.id }}-value"\n             class="form-control"\n             data-ng-model="fieldValue.value"\n             required />\n      <p class="help-block"\n         data-ng-if="(editNoteForm.$submitted ||\n         editNoteForm.fieldValues.$dirty) &&\n         editNoteForm.fieldValues.$error.required">\n        {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n      </p>\n    </div>\n\n  </div>\n\n  <div class="panel-footer" data-ng-if="!vm.canEdit">\n\n    <button type="submit"\n            class="btn btn-primary"\n            data-ng-disabled="!editNoteForm.$valid"\n            data-ng-click="vm.editNote(editNoteForm)">\n      {{ \'save\'|trans }}\n    </button>\n    <a class="btn btn-default"\n       href="#{{ vm.nexturl }}">\n      {{ \'cancel\'|trans }}\n    </a>\n\n  </div>\n\n</form>\n'},1698:function(module,exports){module.exports='<div class="panel-body" >\n\n  <div class="col-xs-12"\n       data-ng-repeat="(i, notes) in vm.sortedNotes">\n    <table class="table table-condensed table-bordered"\n           data-ng-if="notes.length > 0">\n      <thead>\n        <tr>\n          <th class="col-xs-{{ vm.colWidth[i][f] }}"\n              data-ng-repeat="(f, fieldValue) in notes[0].field_values.sort(vm.compareFieldValuesById)">\n            {{ fieldValue.field_label.name }}\n          </th>\n          <th class="col-xs-2 text-center">\n            {{ \'actions\'|trans }}\n          </th>\n        </tr>\n      </thead>\n    </table>\n    <div data-ng-repeat="(j, note) in notes">\n      <table class="col-md-12 table table-condensed table-bordered">\n        <tbody>\n          <tr>\n            <td class="col-xs-{{ vm.colWidth[i][f] }} text-center"\n                style="vertical-align: middle"\n                data-ng-repeat="(f, fieldValue) in note.field_values.sort(vm.compareFieldValuesById)">\n              <!-- Generic value -->\n              <span data-ng-if="fieldValue.type == \'generic\'">\n                {{ fieldValue.value }}\n              </span>\n              <!-- Text value -->\n              <span data-ng-if="fieldValue.type == \'text\'">\n                {{ fieldValue.value }}\n              </span>\n              <!-- Image value -->\n              <img data-ng-if="fieldValue.type == \'image\'"\n                   class="img-responsive img-thumbnail"\n                   style="width: 80%"\n                   ng-src="{{ fieldValue.value }}"\n                   alt="{{ fieldValue.alt}}" />\n            </td>\n            <td class="col-xs-2 text-center">\n              <a href="#/edit_note/{{ note.id }}?nexturl=/list_notes"\n                 class="btn btn-default"\n                 aria-label="{{ \'edit\'|trans }}"\n                 data-ng-if="!vm.canEdit"\n                 data-uib-tooltip="{{ \'edit\'|trans }}"\n                 data-ng-click="">\n                <i class="fa fa-pencil"></i>\n              </a>\n              <button class="btn btn-default"\n                      aria-label="{{ \'delete\'|trans }}"\n                      data-uib-tooltip="{{ \'delete\'|trans }}"\n                      data-ng-if="!vm.canEdit"\n                      data-ng-click="vm.confirmDeleteNote(note)">\n                <i class="fa fa-trash-o"></i>\n              </button>\n              <button class="btn btn-default"\n                      aria-label="{{ \'show\'|trans }}"\n                      data-uib-tooltip="{{ \'show\'|trans }}"\n                      data-ng-click="\n                        vm.isCardShown[i][j] = !vm.isCardShown[i][j]">\n                <i class="fa fa-list"></i>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <table class="col-md-offset-1 col-md-11 table-condensed table-bordered"\n             style="margin-bottom: 20px"\n             data-ng-if="vm.isCardShown[i][j]">\n        <thead>\n          <tr>\n            <th class="col-xs-5"\n                colspan="\n                  {{ vm.maxColspan(note) }}">\n              {{ \'questions\'|trans:\'flashcard\' }}\n            </th>\n            <th class="col-xs-5"\n                colspan="\n                  {{ vm.maxColspan(note) }}">\n              {{ \'answers\'|trans:\'flashcard\' }}\n            </th>\n            <th class="col-xs-2 text-center">\n              {{ \'actions\'|trans }}\n            </th>\n        </thead>\n        <tbody>\n          <tr data-ng-repeat="card in note.cards">\n            <td colspan="{{ vm.maxColspan(note) / card.card_type.questions.length }}"\n                data-ng-repeat="\n                question in vm.getQuestionsFromCard(note, card)">\n              <!-- Generic value -->\n              <span data-ng-if="question.type == \'generic\'">\n                {{ question.value }}\n              </span>\n              <!-- Text value -->\n              <span data-ng-if="question.type == \'text\'">\n                {{ question.value }}\n              </span>\n              <!-- Image value -->\n              <img data-ng-if="question.type == \'image\'"\n                   class="img-responsive img-thumbnail"\n                   style="width: 80%"\n                   ng-src="{{ question.value }}"\n                   alt="{{ question.alt}}" />\n            </td>\n            <td colspan="{{ vm.maxColspan(note) / card.card_type.answers.length }}"\n                data-ng-repeat="\n                answer in vm.getAnswersFromCard(note, card)">\n              <!-- Generic value -->\n              <span data-ng-if="answer.type == \'generic\'">\n                {{ answer.value }}\n              </span>\n              <!-- Text value -->\n              <span data-ng-if="answer.type == \'text\'">\n                {{ answer.value }}\n              </span>\n              <!-- Image value -->\n              <img data-ng-if="answer.type == \'image\'"\n                   class="img-responsive img-thumbnail"\n                   style="width: 80%"\n<<<<<<< HEAD\n                   src="{{ answer.value }}"\n=======\n                   ng-src="{{ answer.value }}"\n>>>>>>> master\n                   alt="{{ answer.alt}}" />\n            </td>\n            <td class="col-xs-2 text-center"\n                data-ng-if="!vm.isNew(card)">\n              <button class="btn btn-default"\n                      aria-label="{{ \'card.suspend\'|trans:\'flashcard\' }}"\n                      data-uib-tooltip="{{ \'card.suspend\'|trans:\'flashcard\' }}"\n                      data-ng-if="!vm.isSuspend(card)"\n                      data-ng-click="vm.suspendCard(card, 1)">\n                <i class="fa fa-hand-stop-o"></i>\n              </button>\n              <button class="btn btn-default"\n                      aria-label="{{ \'card.unsuspend\'|trans:\'flashcard\' }}"\n                      data-uib-tooltip="{{ \'card.unsuspend\'|trans:\'flashcard\' }}"\n                      data-ng-if="vm.isSuspend(card)"\n                      data-ng-click="vm.suspendCard(card, 0)">\n                <i class="fa fa-thumbs-o-up"></i>\n              </button>\n              <button class="btn btn-default"\n                      aria-label="{{ \'card.repeat\'|trans:\'flashcard\' }}"\n                      data-uib-tooltip="{{ \'card.repeat\'|trans:\'flashcard\' }}"\n                      data-ng-click="vm.resetCard(card)">\n                <i class="fa fa-repeat"></i>\n              </button>\n            </td>\n            <td class="col-xs-2 text-center"\n                data-ng-if="vm.isNew(card)">\n              {{ \'card.is_new\'|trans:\'flashcard\' }}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div class="alert alert-info"\n       data-ng-if="vm.deck.notes.length == 0">\n    <i class="fa fa-info-circle"></i>\n    {{ \'deck.empty\'|trans:\'flashcard\' }}\n  </div>\n\n</div>\n\n<div class="panel-footer">\n  <a href="#/"\n     class="btn btn-default">\n    {{ \'back\'|trans }}\n  </a>\n</div>\n'},1699:function(module,exports){module.exports='<form name="editNoteTypeForm" novalidate>\n\n  <div class="panel-body" >\n\n    <div class="alert alert-danger"\n         data-ng-if="vm.errorMessage !== null">\n      <i class="fa fa-warning"></i>\n      {{ vm.errorMessage|trans:\'flashcard\' }}\n      <ul>\n        <li data-ng-repeat="error in vm.errors track by error.line">\n          {{ error.message|trans:\'flashcard\' }}\n          <span data-ng-if="error.line">\n            ({{ \'errors.line\'|trans:\'flashcard\' }} {{ error.line }})\n          </span>\n        </li>\n      </ul>\n    </div>\n\n    <h2>{{ \'note_type\'|trans:\'flashcard\' }}</h2>\n\n    <div class="form-group"\n         data-ng-class="{ \'has-error\': (editNoteTypeForm.$submitted ||\n         editNoteTypeForm.noteTypeName.$dirty) &&\n         editNoteTypeForm.noteTypeName.$invalid }">\n      <label for="noteTypeName">{{ \'name\'|trans }}</label>\n      <input id="noteTypeName"\n             type="text"\n             name="noteTypeName"\n             class="form-control"\n             data-ng-model="vm.noteType.name"\n             required />\n      <p class="help-block"\n         data-ng-if="(editNoteTypeForm.$submitted ||\n         editNoteTypeForm.noteTypeName.$dirty) &&\n         editNoteTypeForm.noteTypeName.$error.required">\n        {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n      </p>\n    </div>\n\n    <div data-ng-if="vm.noteType !== undefined">\n      <label>{{ \'field.names\'|trans:\'flashcard\' }}</label>\n      <div class="form-group"\n           data-ng-repeat="(i, fieldLabel) in vm.noteType.field_labels"\n           data-ng-class="{ \'has-error\': fieldNameForm.fieldName.$invalid }">\n        <div class="input-group"\n             data-ng-form="fieldNameForm">\n          <input id="fieldName"\n                 type="text"\n                 name="fieldName"\n                 class="form-control"\n                 data-ng-model="fieldLabel.name"\n                 data-ng-init="vm.fieldNameForm[i] = fieldNameForm"\n                 data-ng-change="vm.verifyUniqueFieldName()"\n                 required />\n          <span class="input-group-btn">\n            <button class="btn btn-danger"\n                    data-ng-click="vm.removeFieldLabel(i)">\n              <i class="fa fa-close"></i>\n            </button>\n          </span>\n        </div>\n        <p class="help-block"\n           data-ng-if="(fieldNameForm.$submitted ||\n           fieldNameForm.fieldName.$dirty) &&\n           fieldNameForm.fieldName.$error.required">\n          {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n        </p>\n        <p class="help-block"\n           data-ng-if="fieldNameForm.fieldName.$error.unique">\n          {{ \'errors.not_unique\'|trans:\'flashcard\' }}\n        </p>\n      </div>\n      <button class="btn btn-primary"\n              data-ng-click="vm.addFieldLabel()">\n        <i class="fa fa-plus"></i>\n        {{ \'field.add\'|trans:\'flashcard\' }}\n      </button>\n    </div>\n\n    <h2>{{ \'card_types\'|trans:\'flashcard\' }}</h2>\n\n    <table class="table table-condensed table-bordered">\n      <thead>\n        <tr>\n          <th class="col-xs-3">{{ \'name\'|trans }}</th>\n          <th class="col-xs-4">{{ \'questions\'|trans:\'flashcard\' }}</th>\n          <th class="col-xs-4">{{ \'answers\'|trans:\'flashcard\' }}</th>\n          <th class="col-xs-1 text-center">{{ \'actions\'|trans }}</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr data-ng-repeat="(i, cardType) in vm.noteType.card_types"\n            data-ng-form="cardTypeForm">\n          <td data-ng-class="{ \'has-error\': (cardTypeForm.$submitted ||\n              cardTypeForm.cardTypeName.$dirty) &&\n              cardTypeForm.cardTypeName.$invalid }">\n            <input id="cardTypeName"\n                   type="text"\n                   name="cardTypeName"\n                   class="form-control"\n                   data-ng-model="cardType.name"\n                   required />\n            <p class="help-block"\n               data-ng-if="(cardTypeForm.$submitted ||\n               cardTypeForm.cardTypeName.$dirty) &&\n               cardTypeForm.cardTypeName.$error.required">\n            {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n            </p>\n          </td>\n\n          <td>\n            <div class="checkbox"\n                 data-ng-repeat="(f, fieldLabel) in vm.noteType.field_labels"\n                 data-ng-form="questionsForm">\n              <label>\n                <input type="checkbox"\n                       name="questions"\n                       data-ng-checked="vm.questionsChecked[i][f]"\n                       data-ng-disabled="vm.answersChecked[i][f]"\n                       data-ng-init="vm.questionsForm[i] = questionsForm"\n                       data-ng-click="vm.clickQuestion(i, f, fieldLabel)"/>\n                {{ fieldLabel.name }}\n              </label>\n            </div>\n            <p class="help-block"\n               data-ng-if="questionsForm.$error.atLeastOne">\n            {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n            </p>\n          </td>\n          <td>\n            <div class="checkbox"\n                 data-ng-repeat="(f, fieldLabel) in vm.noteType.field_labels"\n                 data-ng-form="answersForm">\n              <label>\n                <input type="checkbox"\n                       name="answers"\n                       data-ng-checked="vm.answersChecked[i][f]"\n                       data-ng-disabled="vm.questionsChecked[i][f]"\n                       data-ng-init="vm.answersForm[i] = answersForm"\n                       data-ng-click="vm.clickAnswer(i, f, fieldLabel)"/>\n                {{ fieldLabel.name }}\n              </label>\n            </div>\n            <p class="help-block"\n               data-ng-if="answersForm.$error.atLeastOne">\n            {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n            </p>\n          </td>\n\n          <td class="text-center">\n            <button class="btn btn-default"\n                    aria-label="{{ \'card_type.create_reverse\'|trans:\'flashcard\' }}"\n                    data-uib-tooltip="{{ \'card_type.create_reverse\'|trans }}"\n                    data-ng-click="vm.addReverseCardType(i)">\n              <i class="fa fa-exchange"></i>\n            </button>\n            <button class="btn btn-default"\n                    aria-label="{{ \'delete\'|trans }}"\n                    data-uib-tooltip="{{ \'delete\'|trans }}"\n                    data-ng-click="vm.removeCardType(i)">\n              <i class="fa fa-trash-o"></i>\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n\n    <button class="btn btn-primary"\n            data-ng-click="vm.addCardType()">\n      <i class="fa fa-plus"></i>\n      {{ \'card_type.add\'|trans:\'flashcard\' }}\n    </button>\n\n  </div>\n\n\n  <div class="panel-footer">\n\n    <button type="submit"\n            class="btn btn-primary"\n            data-ng-disabled="editNoteTypeForm.$invalid"\n            data-ng-click="vm.editNoteType(editNoteTypeForm)">\n      {{ \'save\'|trans }}\n    </button>\n    <a class="btn btn-default"\n       href="#{{ vm.nexturl }}">\n      {{ \'cancel\'|trans }}\n    </a>\n\n  </div>\n\n</form>\n';
},1700:function(module,exports){module.exports='<form name="editDefaultParamForm" novalidate>\n\n  <div class="panel-body" >\n  \n    <div class="alert alert-danger"\n         data-ng-if="vm.errorMessage !== null">\n      <i class="fa fa-warning"></i>\n      {{ vm.errorMessage|trans:\'flashcard\' }}\n      <ul>\n        <li data-ng-repeat="error in vm.errors track by error.line">\n          {{ error.message|trans:\'flashcard\' }}\n          <span data-ng-if="error.line">\n            ({{ \'errors.line\'|trans:\'flashcard\' }} {{ error.line }})\n          </span>\n        </li>\n      </ul>\n    </div>\n    <div class="form-group">\n      <label for="newCardDay">{{ \'param.new_card_day\'|trans:\'flashcard\' }}</label>\n      <input id="newCardDay"\n             type="number"\n             min="1"\n             name="newCardDay"\n             class="form-control"\n             data-ng-model="vm.deck.new_card_day_default"\n             required />\n      <p class="help-block"\n         data-ng-if="(editDefaultParamForm.$submitted ||\n         editDefaultParamForm.fieldValues.$dirty) &&\n         editDefaultParamForm.fieldValues.$error.required">\n        {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n      </p>\n    </div>\n    <form-field field="vm.themeField" \n                ng-model="vm.deck.theme"></form-field>\n\n  </div>\n\n  <div class="panel-footer" data-ng-if="!vm.canEdit">\n\n    <button type="submit"\n            class="btn btn-primary"\n            data-ng-disabled="!editDefaultParamForm.$valid"\n            data-ng-click="vm.editDefaultParam(editDefaultParamForm)">\n      {{ \'save\'|trans }}\n    </button>\n    <a class="btn btn-default"\n       href="#{{ vm.nexturl }}">\n      {{ \'cancel\'|trans }}\n    </a>\n\n  </div>\n\n</form>\n'},1701:function(module,exports){module.exports='<form name="editUserParamForm" novalidate>\n\n  <div class="panel-body" >\n  \n    <div class="alert alert-danger"\n         data-ng-if="vm.errorMessage !== null">\n      <i class="fa fa-warning"></i>\n      {{ vm.errorMessage|trans:\'flashcard\' }}\n      <ul>\n        <li data-ng-repeat="error in vm.errors track by error.line">\n          {{ error.message|trans:\'flashcard\' }}\n          <span data-ng-if="error.line">\n            ({{ \'errors.line\'|trans:\'flashcard\' }} {{ error.line }})\n          </span>\n        </li>\n      </ul>\n    </div>\n    <div class="form-group">\n      <label for="newCardDay">{{ \'param.new_card_day\'|trans:\'flashcard\' }}</label>\n      <input id="newCardDay"\n             type="number"\n             min="1"\n             name="newCardDay"\n             class="form-control"\n             data-ng-model="vm.deck.new_card_day_default"\n             required />\n      <p class="help-block"\n         data-ng-if="(editUserParamForm.$submitted ||\n         editUserParamForm.fieldValues.$dirty) &&\n         editUserParamForm.fieldValues.$error.required">\n        {{ \'errors.not_blank\'|trans:\'flashcard\' }}\n      </p>\n    </div>\n    <form-field field="vm.themeField" \n                ng-model="vm.userPref.theme"></form-field>\n\n  </div>\n\n  <div class="panel-footer" data-ng-if="!vm.canEdit">\n\n    <button type="submit"\n            class="btn btn-primary"\n            data-ng-disabled="!editUserParamForm.$valid"\n            data-ng-click="vm.editUserParam(editUserParamForm)">\n      {{ \'save\'|trans }}\n    </button>\n    <a class="btn btn-default"\n       href="#{{ vm.nexturl }}">\n      {{ \'cancel\'|trans }}\n    </a>\n\n  </div>\n\n</form>\n'},1702:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var FlashCardCtrl=function FlashCardCtrl(service){var _this=this;(0,_classCallCheck3.default)(this,FlashCardCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.newCards=[];this.learingCards=[];this.nbrTotalCards=0;this.nbrRevisedCards=0;this._service=service;service.countCards(this.deck).then(function(d){return _this.nbrTotalCards=d.data});service.countCardLearning(this.deck).then(function(d){return _this.nbrRevisedCards=d.data});service.findNewCardToLearn(this.deck).then(function(d){return _this.newCards=d.data});service.findCardToLearn(this.deck).then(function(d){return _this.learningCards=d.data})};exports.default=FlashCardCtrl},1703:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);var _NotBlank=__webpack_require__(134);var _NotBlank2=_interopRequireDefault(_NotBlank);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var CreateNoteCtrl=function(){function CreateNoteCtrl(service,$location){var _this=this;(0,_classCallCheck3.default)(this,CreateNoteCtrl);this.deck=service.getDeck();this.$location=$location;this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.noteTypes=[];this.idNoteTypeChoosen=0;this.noteTypeChoosen=null;this.noteTypeField=["type","select",{values:[],label:"note_type",choice_name:"name",choice_value:"id",validators:[new _NotBlank2.default]}];this.fieldValues=[];this.newCards=[];this.fieldTypes=["text","image"];this.errorMessage=null;this.errors=[];this._service=service;service.findAllNoteType().then(function(d){_this.noteTypes=d.data;_this.noteTypeField[2].values=d.data})}(0,_createClass3.default)(CreateNoteCtrl,[{key:"createNote",value:function createNote(form){var _this2=this;if(form.$valid){var fields=[];var fieldLabel=null;for(var i=0;i<this.fieldValues.length;i++){fieldLabel=this.noteTypeChoosen.field_labels[i];fields[i]={id:fieldLabel.id,fieldValue:this.fieldValues[i]}}this._service.createNote(this.noteTypeChoosen,fields).then(function(d){_this2.deck.notes.push(d.data);_this2.newCards=_this2._service.findNewCardToLearn(_this2.deck);_this2.$location.path("/")},function(d){_this2.errorMessage="errors.note.creation_failure";_this2.errors=d.data});this._resetForm(form)}}},{key:"updateNoteTypeChoosen",value:function updateNoteTypeChoosen(){var _this3=this;if(this.idNoteTypeChoosen!=0){this.noteTypes.forEach(function(element){if(_this3.idNoteTypeChoosen==element.id){_this3.noteTypeChoosen=element}})}}},{key:"_resetForm",value:function _resetForm(form){this.errorMessage=null;this.errors=[];this.fieldValues=[];form.$setPristine();form.$setUntouched()}}]);return CreateNoteCtrl}();exports.default=CreateNoteCtrl},1704:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var EditNoteCtrl=function(){function EditNoteCtrl(service,$routeParams,$location){var _this=this;(0,_classCallCheck3.default)(this,EditNoteCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.note=null;this.nexturl=$routeParams.nexturl;this.errorMessage=null;this.errors=[];this._service=service;this.$location=$location;service.findNote($routeParams.id).then(function(d){return _this.note=d.data})}(0,_createClass3.default)(EditNoteCtrl,[{key:"editNote",value:function editNote(form){var _this2=this;if(form.$valid){this._service.editNote(this.note,this.note.field_values).then(function(d){_this2.note=d.data;_this2.$location.search("nexturl",null);_this2.$location.path(_this2.nexturl)},function(d){_this2.errorMessage="errors.note.edition_failure";_this2.errors=d.data})}}}]);return EditNoteCtrl}();exports.default=EditNoteCtrl},1705:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ListNoteCtrl=function(){function ListNoteCtrl(service,ClarolineAPIService){var _this=this;(0,_classCallCheck3.default)(this,ListNoteCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.noteTypes=[];this.sortedNotes=[];this.IsCardShown=[];this.colWidth=[];this.cardLearnings=[];this.errorMessage=null;this.errors=[];this._service=service;this._apiService=ClarolineAPIService;this._deleteNote=this._deleteNote.bind(this);service.findAllNoteType().then(function(d){_this.noteTypes=d.data;for(var i=0;i<_this.noteTypes.length;i++){_this.setColWidth(_this.noteTypes[i]);service.findNoteByNoteType(_this.noteTypes[i]).then(function(d){_this.sortedNotes.push(d.data);_this.IsCardShown.push(false)})}});service.findAllCardLearning(this.deck).then(function(d){return _this.cardLearnings=d.data})}(0,_createClass3.default)(ListNoteCtrl,[{key:"setColWidth",value:function setColWidth(noteType){var nbrField=noteType.field_labels.length;var width=Math.floor(10/nbrField);var cols=[];for(var i=0;i<nbrField-1;i++){cols.push(width)}cols.push(10-(nbrField-1)*width);this.colWidth.push(cols)}},{key:"maxColspan",value:function maxColspan(note){var nbr=1;for(var i=2;i<=note.field_values.length;i++){nbr*=i}return nbr}},{key:"compareFieldValuesById",value:function compareFieldValuesById(first,second){if(first.field_label.id<second.field_label.id){return-1}if(first.field_label.id>second.field_label.id){return 1}return 0}},{key:"getQuestionsFromCard",value:function getQuestionsFromCard(note,card){var question_labels=card.card_type.questions;var questions=[];for(var i=0;i<question_labels.length;i++){for(var j=0;j<note.field_values.length;j++){if(note.field_values[j].field_label.id==question_labels[i].id){questions.push(note.field_values[j])}}}return questions}},{key:"getAnswersFromCard",value:function getAnswersFromCard(note,card){var answer_labels=card.card_type.answers;var answers=[];for(var i=0;i<answer_labels.length;i++){for(var j=0;j<note.field_values.length;j++){if(note.field_values[j].field_label.id==answer_labels[i].id){answers.push(note.field_values[j])}}}return answers}},{key:"resetCard",value:function resetCard(card){this._service.resetCard(card).then(function(){for(var i=0;i<this.cardLearnings.length;i++){if(this.cardLearnings[i].card.id==card.id){this.cardLearnings.splice(i,1)}}})}},{key:"suspendCard",value:function suspendCard(card,suspend){this._service.suspendCard(card,suspend).then(function(){for(var i=0;i<this.cardLearnings.length;i++){if(this.cardLearnings[i].card.id==card.id){this.cardLearnings[i].painful=suspend}}})}},{key:"isSuspend",value:function isSuspend(card){for(var i=0;i<this.cardLearnings.length;i++){if(this.cardLearnings[i].card.id==card.id){return this.cardLearnings[i].painful}}return false}},{key:"isNew",value:function isNew(card){for(var i=0;i<this.cardLearnings.length;i++){if(this.cardLearnings[i].card.id==card.id){return false}}return true}},{key:"confirmDeleteNote",value:function confirmDeleteNote(note){var url=this.routing.generate("claroline_delete_note",{note:note.id});var note_str="<p>";var warning="";for(var i=0;i<note.field_values.length;i++){note_str+=note.field_values[i].field_label.name+": ";note_str+=note.field_values[i].value;if(i<note.field_values.length-1)note_str+="<br>"}note_str+="</p>";warning+='<div class="alert alert-warning" role="alert">';warning+='<span class="fa fa-warning" aria-hidden="true"></span> ';warning+=this.translate("note.warning");warning+="</div>";this._apiService.confirm({url:url},this._deleteNote,this.translate("note.delete"),note_str+warning)}},{key:"translate",value:function translate(key){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return window.Translator.trans(key,data,"flashcard")}},{key:"_deleteNote",value:function _deleteNote(data){var noteId=data;for(var i=0;i<this.sortedNotes.length;i++){for(var j=0;j<this.sortedNotes[i].length;j++){if(noteId==this.sortedNotes[i][j].id){this.sortedNotes[i].splice(j,1)}}}}}]);return ListNoteCtrl}();exports.default=ListNoteCtrl},1706:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var EditNoteTypeCtrl=function(){function EditNoteTypeCtrl(service,$routeParams,$location){var _this=this;(0,_classCallCheck3.default)(this,EditNoteTypeCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.noteType=null;this.nexturl=$routeParams.nexturl;this.questionsChecked=[];this.answersChecked=[];this.fieldNameForm=[];this.questionsForm=[];this.answersForm=[];this.errorMessage=null;this.errors=[];this._service=service;this.$location=$location;service.findNoteType($routeParams.id).then(function(d){_this.noteType=d.data;for(var i=0;i<_this.noteType.card_types.length;i++){_this.questionsChecked.push([]);_this.answersChecked.push([]);for(var j=0;j<_this.noteType.field_labels.length;j++){_this.questionsChecked[i][j]=_this._isFieldLabelInArray(_this.noteType.field_labels[j],_this.noteType.card_types[i].questions);_this.answersChecked[i][j]=_this._isFieldLabelInArray(_this.noteType.field_labels[j],_this.noteType.card_types[i].answers)}}})}(0,_createClass3.default)(EditNoteTypeCtrl,[{key:"addFieldLabel",value:function addFieldLabel(){this.noteType.field_labels.push({name:""});for(var i=0;i<this.noteType.card_types.length;i++){this.questionsChecked[i].push(false);this.answersChecked[i].push(false)}}},{key:"removeFieldLabel",value:function removeFieldLabel(pos){this.removeFieldLabelFromCardType(this.noteType.field_labels[pos]);for(var i=0;i<this.noteType.card_types.length;i++){this.questionsChecked[i].splice(pos,1);this.answersChecked[i].splice(pos,1)}this.noteType.field_labels.splice(pos,1)}},{key:"removeFieldLabelFromCardType",value:function removeFieldLabelFromCardType(fieldLabel){for(var i=0;i<this.noteType.card_types.length;i++){for(var j=0;j<this.noteType.card_types[i].questions.length;j++){if(this.noteType.card_types[i].questions[j].name==fieldLabel.name){this.noteType.card_types[i].questions.splice(j,1);this.questionsChecked[i].splice(j,1)}}for(var _j=0;_j<this.noteType.card_types[i].answers.length;_j++){if(this.noteType.card_types[i].answers[_j].name==fieldLabel.name){this.noteType.card_types[i].answers.splice(_j,1);this.answersChecked[i].splice(_j,1)}}}}},{key:"addCardType",value:function addCardType(){this.noteType.card_types.push({name:"",questions:[],answers:[]});this.questionsChecked.push([]);this.answersChecked.push([])}},{key:"addReverseCardType",value:function addReverseCardType(pos){this.noteType.card_types.push({name:"",questions:this.noteType.card_types[pos].answers,answers:this.noteType.card_types[pos].questions});this.questionsChecked.push(this.answersChecked[pos]);this.answersChecked.push(this.questionsChecked[pos])}},{key:"removeCardType",value:function removeCardType(pos){this.noteType.card_types.splice(pos,1);this.questionsChecked.splice(pos,1);this.answersChecked.splice(pos,1)}},{key:"clickQuestion",value:function clickQuestion(posCardType,posFieldLabel,fieldLabel){var cardTypes=this.noteType.card_types;if(this.questionsChecked[posCardType][posFieldLabel]){for(var i=0;i<cardTypes[posCardType].questions.length;i++){if(fieldLabel.name==cardTypes[posCardType].questions[i].name){cardTypes[posCardType].questions.splice(i,1)}}this.questionsChecked[posCardType][posFieldLabel]=false}else{cardTypes[posCardType].questions.push(fieldLabel);this.questionsChecked[posCardType][posFieldLabel]=true}this.questionsForm[posCardType].$setValidity("atLeastOne",cardTypes[posCardType].questions.length>0)}},{key:"clickAnswer",value:function clickAnswer(posCardType,posFieldLabel,fieldLabel){var cardTypes=this.noteType.card_types;if(this.answersChecked[posCardType][posFieldLabel]){for(var i=0;i<cardTypes[posCardType].answers.length;i++){if(fieldLabel.name==cardTypes[posCardType].answers[i].name){cardTypes[posCardType].answers.splice(i,1)}}this.answersChecked[posCardType][posFieldLabel]=false}else{cardTypes[posCardType].answers.push(fieldLabel);this.answersChecked[posCardType][posFieldLabel]=true}this.questionsForm[posCardType].$setValidity("atLeastOne",cardTypes[posCardType].answers.length>0)}},{key:"verifyUniqueFieldName",value:function verifyUniqueFieldName(){var fieldLabels=void 0,isNotUnique=void 0;fieldLabels=this.noteType.field_labels;isNotUnique=new Array(fieldLabels.length);for(var i=0;i<fieldLabels.length;i++){for(var j=i+1;j<fieldLabels.length;j++){if(!isNotUnique[i]){isNotUnique[i]=fieldLabels[i].name==fieldLabels[j].name}if(!isNotUnique[j]){isNotUnique[j]=fieldLabels[i].name==fieldLabels[j].name}}this.fieldNameForm[i].fieldName.$setValidity("unique",!isNotUnique[i])}}},{key:"editNoteType",value:function editNoteType(form){var _this2=this;if(form.$valid){this._service.editNoteType(this.noteType).then(function(d){_this2.note=d.data;_this2.$location.search("nexturl",null);_this2.$location.path(_this2.nexturl)},function(d){_this2.errorMessage="errors.note_type.creation_failure";_this2.errors=d.data})}}},{key:"_isFieldLabelInArray",value:function _isFieldLabelInArray(field_label,array){var result=false;for(var i=0;i<array.length&&!result;i++){result=array[i].name==field_label.name}return result}}]);return EditNoteTypeCtrl}();exports.default=EditNoteTypeCtrl},1707:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var StudyCtrl=function(){function StudyCtrl(service){var _this=this;(0,_classCallCheck3.default)(this,StudyCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.newCards=[];this.learningCards=[];this.revisedCards=[];this.sessionId=0;this.currentCard=false;this.currentCardIsNew=0;this.questions=[];this.answers=[];this.answerQuality=-1;this.fullscreenClass="";this.fullscreenClassButton="fa-expand";this.fullscreenClassFooter="";this._service=service;service.findNewCardToLearn(this.deck).then(function(d){_this.newCards=d.data;if(!_this.currentCard){_this.chooseCard()}});service.findCardToLearn(this.deck).then(function(d){_this.learningCards=d.data;if(!_this.currentCard){_this.chooseCard()}})}(0,_createClass3.default)(StudyCtrl,[{key:"createSession",value:function createSession(){var _this2=this;this._service.createSession().then(function(d){return _this2.session=d.data})}},{key:"chooseCard",value:function chooseCard(){var rand=Math.floor(Math.random()*2);this.questions=[];this.answers=[];if(this.newCards.length==0&&this.learningCards.length==0){this.currentCard=false}else{if(rand==0){if(this.newCards.length>0){rand=Math.floor(Math.random()*this.newCards.length);this.currentCard=this.newCards.splice(rand,1)[0];this.currentCardIsNew=1;this.showQuestions()}else{this.chooseCard()}}else{if(this.learningCards.length>0){rand=Math.floor(Math.random()*this.learningCards.length);this.currentCard=this.learningCards.splice(rand,1)[0];this.currentCardIsNew=0;this.showQuestions()}else{this.chooseCard()}}}}},{key:"showQuestions",value:function showQuestions(){this.questions=[];for(var i=0;i<this.currentCard.card_type.questions.length;i++){for(var j=0;j<this.currentCard.note.field_values.length;j++){if(this.currentCard.card_type.questions[i].id==this.currentCard.note.field_values[j].field_label.id){this.questions.push(this.currentCard.note.field_values[j])}}}}},{key:"showAnswers",value:function showAnswers(){this.answers=[];for(var i=0;i<this.currentCard.card_type.answers.length;i++){for(var j=0;j<this.currentCard.note.field_values.length;j++){if(this.currentCard.card_type.answers[i].id==this.currentCard.note.field_values[j].field_label.id){this.answers.push(this.currentCard.note.field_values[j])}}}}},{key:"validAnswer",value:function validAnswer(answerQuality){var _this3=this;this.answerQuality=answerQuality;this._service.studyCard(this.deck,this.sessionId,this.currentCard,answerQuality).then(function(d){_this3.sessionId=d.data});this.revisedCards.push(this.currentCard);this.chooseCard()}},{key:"cancelLastStudy",value:function cancelLastStudy(){var _this4=this;this._service.cancelLastStudy(this.deck,this.sessionId,this.revisedCards[this.revisedCards.length-1]).then(function(d){_this4.sessionId=d.data});if(this.currentCardIsNew){this.newCards.push(this.currentCard);this.currentCard=this.revisedCards.pop();this.currentCardIsNew=0}else{this.learningCards.push(this.currentCard);this.currentCard=this.revisedCards.pop()}this.showQuestions()}},{key:"toggleFullscreen",value:function toggleFullscreen(){if(this.fullscreenClass){this.fullscreenClass="";this.fullscreenClassButton="fa-expand";this.fullscreenClassFooter=""}else{this.fullscreenClass="fullscreen";this.fullscreenClassButton="fa-compress";this.fullscreenClassFooter="footer-fullscreen"}}}]);return StudyCtrl}();exports.default=StudyCtrl},1708:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);var _NotBlank=__webpack_require__(134);var _NotBlank2=_interopRequireDefault(_NotBlank);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var EditDefaultParamCtrl=function(){function EditDefaultParamCtrl(service,$routeParams,$location){var _this=this;(0,_classCallCheck3.default)(this,EditDefaultParamCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.nexturl=$routeParams.nexturl;this.themeField=["type","select",{values:[],label:"theme",choice_name:"name",choice_value:"value",validators:[new _NotBlank2.default]}];this.errorMessage=null;this.errors=[];this._service=service;this.$location=$location;service.getAllThemes().then(function(d){return _this.themeField[2].values=d.data})}(0,_createClass3.default)(EditDefaultParamCtrl,[{key:"editDefaultParam",value:function editDefaultParam(form){var _this2=this;if(form.$valid){this._service.editDefaultParam(this.deck,this.deck.new_card_day_default,this.deck.theme).then(function(d){_this2.deck=d.data;_this2.$location.search("nexturl",null);_this2.$location.path(_this2.nexturl)},function(d){_this2.errorMessage="errors.deck.edition_failure";_this2.errors=d.data})}}}]);return EditDefaultParamCtrl}();exports.default=EditDefaultParamCtrl},1709:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);var _NotBlank=__webpack_require__(134);var _NotBlank2=_interopRequireDefault(_NotBlank);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var EditUserParamCtrl=function(){function EditUserParamCtrl(service,$routeParams,$location){var _this=this;(0,_classCallCheck3.default)(this,EditUserParamCtrl);this.deck=service.getDeck();this.deckNode=service.getDeckNode();this.canEdit=service._canEdit;this.nexturl=$routeParams.nexturl;this.userPref={};this.themeField=["type","select",{values:[],label:"theme",choice_name:"name",choice_value:"value",validators:[new _NotBlank2.default]}];this.errorMessage=null;this.errors=[];this._service=service;this.$location=$location;service.getUserPreference(this.deck).then(function(d){return _this.userPref=d.data});service.getAllThemes().then(function(d){return _this.themeField[2].values=d.data})}(0,_createClass3.default)(EditUserParamCtrl,[{key:"editUserParam",value:function editUserParam(form){var _this2=this;if(form.$valid){this._service.editUserParam(this.deck,this.userPref.new_card_day,this.userPref.theme).then(function(d){_this2.deck=d.data;_this2.$location.search("nexturl",null);_this2.$location.path(_this2.nexturl)},function(d){_this2.errorMessage="errors.deck.edition_failure";_this2.errors=d.data})}}}]);return EditUserParamCtrl}();exports.default=EditUserParamCtrl},1710:function(module,exports,__webpack_require__){"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _classCallCheck2=__webpack_require__(13);var _classCallCheck3=_interopRequireDefault(_classCallCheck2);var _createClass2=__webpack_require__(14);var _createClass3=_interopRequireDefault(_createClass2);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var FlashCardService=function(){function FlashCardService($http){(0,_classCallCheck3.default)(this,FlashCardService);this.$http=$http;this._deck=FlashCardService._getGlobal("deck");this._deckNode=FlashCardService._getGlobal("deckNode");this._canEdit=FlashCardService._getGlobal("canEdit");this.routing=window.Routing}(0,_createClass3.default)(FlashCardService,[{key:"getDeck",value:function getDeck(){return this._deck}},{key:"getDeckNode",value:function getDeckNode(){return this._deckNode}},{key:"getNoteTypes",value:function getNoteTypes(){return this._noteTypes}},{key:"findAllNoteType",value:function findAllNoteType(){var url=this.routing.generate("claroline_getall_note_type");return this.$http.get(url)}},{key:"countCards",value:function countCards(deck){var url=this.routing.generate("claroline_count_cards",{deck:deck.id});return this.$http.get(url)}},{key:"findNewCardToLearn",value:function findNewCardToLearn(deck){var url=this.routing.generate("claroline_new_card_to_learn",{deck:deck.id});return this.$http.get(url)}},{key:"findCardToLearn",value:function findCardToLearn(deck){var url=this.routing.generate("claroline_card_to_review",{deck:deck.id});return this.$http.get(url)}},{key:"findAllCardLearning",value:function findAllCardLearning(deck){var url=this.routing.generate("claroline_getall_card_learning",{deck:deck.id});return this.$http.get(url)}},{key:"countCardLearning",value:function countCardLearning(deck){var url=this.routing.generate("claroline_count_card_learning",{deck:deck.id});return this.$http.get(url)}},{key:"createNote",value:function createNote(noteType,fields){var url=this.routing.generate("claroline_create_note",{deck:this._deck.id,noteType:noteType.id});return this.$http.post(url,{fields:fields})}},{key:"editNote",value:function editNote(note,fieldValues){var url=this.routing.generate("claroline_edit_note",{note:note.id});return this.$http.post(url,{fieldValues:fieldValues})}},{key:"findNote",value:function findNote(id){var url=this.routing.generate("claroline_get_note",{note:id});return this.$http.get(url)}},{key:"findNoteByNoteType",value:function findNoteByNoteType(noteType){var url=this.routing.generate("claroline_list_notes",{deck:this._deck.id,noteType:noteType.id});return this.$http.get(url)}},{key:"findNoteType",value:function findNoteType(id){var url=this.routing.generate("claroline_get_note_type",{noteTypeId:id});return this.$http.get(url)}},{key:"editNoteType",value:function editNoteType(noteType){var url=this.routing.generate("claroline_edit_note_type");return this.$http.post(url,{noteType:noteType})}},{key:"createSession",value:function createSession(){var url=this.routing.generate("claroline_create_session");return this.$http.get(url)}},{key:"studyCard",value:function studyCard(deck,sessionId,card,answerQuality){var url=this.routing.generate("claroline_study_card",{deck:deck.id,sessionId:sessionId,card:card.id,result:answerQuality});return this.$http.get(url)}},{key:"cancelLastStudy",value:function cancelLastStudy(deck,sessionId,card){var url=this.routing.generate("claroline_cancel_last_study",{deck:deck.id,sessionId:sessionId,card:card.id});return this.$http.get(url)}},{key:"suspendCard",value:function suspendCard(card,suspend){var url=this.routing.generate("claroline_suspend_card",{card:card.id,suspend:suspend});return this.$http.get(url)}},{key:"resetCard",value:function resetCard(card){var url=this.routing.generate("claroline_reset_card",{card:card.id});return this.$http.get(url)}},{key:"getAllThemes",value:function getAllThemes(){var url=this.routing.generate("claroline_get_all_themes");return this.$http.get(url)}},{key:"editDefaultParam",value:function editDefaultParam(deck,newCardDay,theme){var url=this.routing.generate("claroline_edit_default_param",{deck:deck.id});return this.$http.post(url,{newCardDay:newCardDay,theme:theme})}},{key:"editUserParam",value:function editUserParam(deck,newCardDay,theme){var url=this.routing.generate("claroline_edit_user_param",{deck:deck.id});return this.$http.post(url,{newCardDay:newCardDay,theme:theme})}},{key:"getUserPreference",value:function getUserPreference(deck){var url=this.routing.generate("claroline_get_user_pref",{deck:deck.id});return this.$http.get(url)}}],[{key:"_getGlobal",value:function _getGlobal(name){if(typeof window[name]==="undefined"){throw new Error("Expected "+name+" to be exposed in a window."+name+" variable")}return window[name]}}]);return FlashCardService}();exports.default=FlashCardService}});