<?php

namespace Icap\OAuthBundle\Controller;

/**
 * This code has been auto-generated by the JMSDiExtraBundle.
 *
 * Manual changes to it will be lost.
 */
class OauthController__JMSInjector
{
    public static function inject($container) {
        require_once '/var/www/claroline/app/cache/prod/jms_diextra/proxies/Icap-OAuthBundle-Controller-OauthController.php';
        $ta = new \JMS\AopBundle\Aop\InterceptorLoader($container, array('Icap\\OAuthBundle\\Controller\\OauthController' => array('formAction' => array(0 => 'security.access.method_interceptor'), 'submitFormAction' => array(0 => 'security.access.method_interceptor'))));
        $instance = new \EnhancedProxy878b27ff_45e677becb246709cf11537c5888ebd19bc45be4\__CG__\Icap\OAuthBundle\Controller\OauthController();
        $instance->__CGInterception__setLoader($ta);
        $refProperty = new \ReflectionProperty('Icap\\OAuthBundle\\Controller\\OauthController', 'configHandler');
        $refProperty->setAccessible(true);
        $refProperty->setValue($instance, $container->get('claroline.config.platform_config_handler', 1));
        $refProperty = new \ReflectionProperty('Icap\\OAuthBundle\\Controller\\OauthController', 'formFactory');
        $refProperty->setAccessible(true);
        $refProperty->setValue($instance, $container->get('form.factory', 1));
        $refProperty = new \ReflectionProperty('Icap\\OAuthBundle\\Controller\\OauthController', 'cacheManager');
        $refProperty->setAccessible(true);
        $refProperty->setValue($instance, $container->get('claroline.manager.cache_manager', 1));
        $refProperty = new \ReflectionProperty('Icap\\OAuthBundle\\Controller\\OauthController', 'oauthManager');
        $refProperty->setAccessible(true);
        $refProperty->setValue($instance, $container->get('icap.oauth.manager', 1));
        $refProperty = new \ReflectionProperty('Icap\\OAuthBundle\\Controller\\OauthController', 'translator');
        $refProperty->setAccessible(true);
        $refProperty->setValue($instance, $container->get('translator', 1));
        return $instance;
    }
}
