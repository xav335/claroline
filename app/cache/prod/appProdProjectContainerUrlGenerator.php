<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdProjectContainerUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdProjectContainerUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes;

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
        if (null === self::$declaredRoutes) {
            self::$declaredRoutes = array(
        'claro_security_login_check' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_logout' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_oauth_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\OauthController::oauthLoginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/auth_login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_oauth_login_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\OauthController::loginCheckAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/auth_login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_oauth_authorize_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\OauthController::authorizeFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/auth/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_oauth_authorize_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\OauthController::authorizeSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/auth/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_oauth_log' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\OauthController::logAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/oauth/v2/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_get_content_by_id_and_type' => array (  0 =>   array (    0 => 'content',    1 => 'type',    2 => 'father',  ),  1 =>   array (    'type' => 'home',    'father' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::contentAction',  ),  2 =>   array (    'content' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'father',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'content',    ),    3 =>     array (      0 => 'text',      1 => '/content',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_get_content_by_type' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_index' => array (  0 =>   array (  ),  1 =>   array (    'type' => 'home',    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_types_manager' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::typesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/types',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_publish_type' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::publishTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/publish/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_rename_type_form' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::renameContentFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/rename/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_rename_type' => array (  0 =>   array (    0 => 'type',    1 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::renameContentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/rename/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_change_template_form' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::changeTemplateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change/template/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_change_template' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::changeTemplateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change/template',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_move_content_form' => array (  0 =>   array (    0 => 'currentType',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::moveContentFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'currentType',    ),    1 =>     array (      0 => 'text',      1 => '/move/content',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_move_content' => array (  0 =>   array (    0 => 'content',    1 => 'type',    2 => 'page',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::moveContentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    3 =>     array (      0 => 'text',      1 => '/move/content',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_creator' => array (  0 =>   array (    0 => 'type',    1 => 'id',    2 => 'father',  ),  1 =>   array (    'father' => NULL,    'id' => NULL,    'content' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::creatorAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'father',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/content/creator',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_size' => array (  0 =>   array (    0 => 'id',    1 => 'size',    2 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::sizeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'size',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/content/size',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_graph' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::graphAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content/graph',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_region' => array (  0 =>   array (    0 => 'content',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::regionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    1 =>     array (      0 => 'text',      1 => '/content/region',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_create' => array (  0 =>   array (    0 => 'type',    1 => 'father',  ),  1 =>   array (    'type' => 'home',    'father' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'father',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/content/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_update' => array (  0 =>   array (    0 => 'content',    1 => 'size',    2 => 'type',  ),  1 =>   array (    'size' => NULL,    'type' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::updateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'size',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    3 =>     array (      0 => 'text',      1 => '/content/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_reorder' => array (  0 =>   array (    0 => 'type',    1 => 'a',    2 => 'b',    3 => 'father',  ),  1 =>   array (    'b' => NULL,    'father' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::reorderAction',  ),  2 =>   array (    'a' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'father',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'b',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'a',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    4 =>     array (      0 => 'text',      1 => '/content/reorder',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_delete' => array (  0 =>   array (    0 => 'content',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    1 =>     array (      0 => 'text',      1 => '/content/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_type_exist' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::typeExistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/content/typeexist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_createtype' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::createTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/content/createtype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_deletetype' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::deletetypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/content/deletetype',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_to_region' => array (  0 =>   array (    0 => 'region',    1 => 'content',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::contentToRegionAction',  ),  2 =>   array (    'content' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'content',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'region',    ),    2 =>     array (      0 => 'text',      1 => '/region',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_collapse' => array (  0 =>   array (    0 => 'content',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::collapseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    2 =>     array (      0 => 'text',      1 => '/content/collapse',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_can_generate_content' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::canGenerateContentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/cangeneratecontent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_menu_settings' => array (  0 =>   array (    0 => 'content',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::menuSettingsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'content',    ),    1 =>     array (      0 => 'text',      1 => '/content/menu/settings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_content_menu_save_settings' => array (  0 =>   array (    0 => 'menu',    1 => 'login',    2 => 'workspaces',    3 => 'locale',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\HomeController::saveMenuSettingsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'locale',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaces',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'login',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'menu',    ),    4 =>     array (      0 => 'text',      1 => '/content/menu/save/settings',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_locale_select' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\LocaleController::selectLangAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/locale/select',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_locale_change' => array (  0 =>   array (    0 => 'locale',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\LocaleController::changeLocale',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'locale',    ),    1 =>     array (      0 => 'text',      1 => '/locale/change',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_theme_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ThemeController::listAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/themes/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_theme_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ThemeController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/themes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_new_theme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ThemeController::formAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/themes/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_create_theme' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ThemeController::createThemeAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/themes/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_theme_confirm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',    'template' => 'ClarolineCoreBundle:Theme:confirm.html.twig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/theme/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_typeerror' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',    'template' => 'ClarolineCoreBundle:Home:typeerror.html.twig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content/typeerror',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_confirm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',    'template' => 'ClarolineCoreBundle:Home:confirm.html.twig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_content_link' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',    'template' => 'ClarolineCoreBundle:Home:link.html.twig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content/link',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_forgot_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::forgotPasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_send_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sendmail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_reset_password' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::resetPasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    2 =>     array (      0 => 'text',      1 => '/newpassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_new_password' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::newPasswordAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    1 =>     array (      0 => 'text',      1 => '/validatepassword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_validate_email' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::validateEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    1 =>     array (      0 => 'text',      1 => '/validate/email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_validate_email_send' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::sendEmailValidationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    1 =>     array (      0 => 'text',      1 => '/send/email/validation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_validate_email_hide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::hideEmailConformationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/hide/email/validation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_core_authentication_postauthentication' => array (  0 =>   array (    0 => 'format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::postAuthenticationAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'text',      1 => '/authenticate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'trigger_auth' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AuthenticationController::triggerAuthenticationAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    1 =>     array (      0 => 'text',      1 => '/trigger-auth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_log_view_details' => array (  0 =>   array (    0 => 'logId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\LogController::viewDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'logId',    ),    1 =>     array (      0 => 'text',      1 => '/log/view_details',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_log_update_workspace_widget_config' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\LogController::updateLogWorkspaceWidgetConfig',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/log/update_workspace_widget_config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_log_update_desktop_widget_config' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\LogController::updateLogDesktopWidgetConfig',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/log/update_desktop_widget_config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_logs_show' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\Tool\\WorkspaceController::logListAction',  ),  2 =>   array (    'workspaceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tool/logs',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_logs_show_paginated' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\Tool\\WorkspaceController::logListAction',  ),  2 =>   array (    'workspaceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/tool/logs',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_logs_by_user_show' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\Tool\\WorkspaceController::logByUserAction',  ),  2 =>   array (    'workspaceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tool/logs/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_logs_by_user_show_paginated' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\Tool\\WorkspaceController::logByUserAction',  ),  2 =>   array (    'workspaceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/tool/logs/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_logs_by_user_csv' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Log\\Tool\\WorkspaceController::logByUserCSVAction',  ),  2 =>   array (    'workspaceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tool/logs/user/csv',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_public_profile_view' => array (  0 =>   array (    0 => 'publicUrl',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::publicProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'publicUrl',    ),    1 =>     array (      0 => 'text',      1 => '/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_profile_view' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/profile/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_profile_edit' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::editProfileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/profile/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_password_edit' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::editPasswordAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/profile/password/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_public_url_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::editPublicUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/publicurl/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_public_url_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ProfileController::checkPublicUrlAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/publicurl/check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_registration_user_registration_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\RegistrationController::userRegistrationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_registration_register_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\RegistrationController::registerUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_register_user' => array (  0 =>   array (    0 => 'format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\RegistrationController::postUserRegistrationAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'text',      1 => '/register/new/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_security_activate_user' => array (  0 =>   array (    0 => 'hash',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\RegistrationController::activateUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hash',    ),    2 =>     array (      0 => 'text',      1 => '/register/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_open_tool' => array (  0 =>   array (    0 => 'toolName',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\DesktopController::openToolAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'toolName',    ),    1 =>     array (      0 => 'text',      1 => '/desktop/tool/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_open' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\DesktopController::openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/desktop/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_home_display' => array (  0 =>   array (    0 => 'tabId',  ),  1 =>   array (    'tabId' => -1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\HomeController::desktopHomeDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tabId',    ),    1 =>     array (      0 => 'text',      1 => '/tool/home/desktop/home/display/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_display_desktop_home_tab' => array (  0 =>   array (    0 => 'tabId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\HomeController::displayDesktopHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tabId',    ),    1 =>     array (      0 => 'text',      1 => '/tool/home/desktop/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_home_display' => array (  0 =>   array (    0 => 'workspace',    1 => 'tabId',  ),  1 =>   array (    'tabId' => -1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\HomeController::workspaceHomeDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tabId',    ),    1 =>     array (      0 => 'text',      1 => '/home/display/tab',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/tool/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_widget_instance_content' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\HomeController::getWidgetInstanceContentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/tool/home/widget/instance',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_parameters_menu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::desktopParametersMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/tools/parameters/menu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tool_properties' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::desktopConfigureToolAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/tools/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_tools_roles_edit' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::editToolsRolesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/tools/edit/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_tool_config' => array (  0 =>   array (    0 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::openDesktopToolConfig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    2 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_update_ordered_tool_order' => array (  0 =>   array (    0 => 'orderedTool',    1 => 'type',    2 => 'nextOrderedToolId',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::updateDesktopOrderedToolOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextOrderedToolId',    ),    1 =>     array (      0 => 'text',      1 => '/next',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/type',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    5 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/tools/order/update/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_options_edit_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::desktopParametersUserOptionsEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/user/options/edit/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_options_edit' => array (  0 =>   array (    0 => 'options',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\DesktopParametersController::desktopParametersUserOptionsEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'options',    ),    2 =>     array (      0 => 'text',      1 => '/desktop/tool/properties/user/options',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_list' => array (  0 =>   array (    0 => 'search',  ),  1 =>   array (    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_by_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWorkspacesByUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_by_user_picker' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWorkspacesByUserForPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/user/picker',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_list_workspaces_with_self_registration' => array (  0 =>   array (    0 => 'search',  ),  1 =>   array (    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWorkspacesWithSelfRegistrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/displayable/selfregistration/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_list_workspaces_with_self_unregistration' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWorkspacesWithSelfUnregistrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/displayable/selfunregistration/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_creation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::creationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/new/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_delete' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::deleteAction',  ),  2 =>   array (    'workspaceId' => '(?=.*[1-9].*$)\\d*',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '(?=.*[1-9].*$)\\d*',      3 => 'workspaceId',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_open_tool' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'toolName',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::openToolAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'toolName',    ),    1 =>     array (      0 => 'text',      1 => '/open/tool',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_home_tab_widget_list_picker' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'homeTabId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWidgetsForPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/picker',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabId',    ),    2 =>     array (      0 => 'text',      1 => '/tab',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_home_tab_widget_embed_picker' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'homeTabId',    2 => 'widgetId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::embedWidgetForPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/embed',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetId',    ),    2 =>     array (      0 => 'text',      1 => '/widget',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabId',    ),    4 =>     array (      0 => 'text',      1 => '/tab',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    6 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_hometab_embeded_widget' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'homeTabId',    2 => 'widgetId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::getEmbededWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/embeded',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetId',    ),    2 =>     array (      0 => 'text',      1 => '/widget',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabId',    ),    4 =>     array (      0 => 'text',      1 => '/tab',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    6 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_open' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_find_role_by_code' => array (  0 =>   array (    0 => 'code',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::findRoleByWorkspaceCodeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'code',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/search/role/code',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_add_user' => array (  0 =>   array (    0 => 'workspace',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::addUserAction',  ),  2 =>   array (    'workspaceId' => '(?=.*[1-9].*$)\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/add/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_add_user_queue' => array (  0 =>   array (    0 => 'workspace',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::addUserQueueAction',  ),  2 =>   array (    'workspaceId' => '(?=.*[1-9].*$)\\d*',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/queue',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/add/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_remove_user_from_queue' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::removeUserFromQueueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/registration/queue/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_list_pager' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceListByTagPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/list/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_list_with_self_reg_pager' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceListWithSelfRegByTagPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/list/self_reg/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_workspaces_list_pager' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceCompleteListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/list/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_non_personal_workspaces_list_pager' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'max' => 20,    'seach' => '',    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::nonPersonalWorkspacesListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/list/non/personal/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_personal_workspaces_list_pager' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'max' => 20,    'seach' => '',    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::personalWorkspacesListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/list/personal/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_workspaces_list_with_self_reg_pager' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceCompleteListWithSelfRegPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/list/workspaces/self_reg/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_delete_user' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::removeUserAction',  ),  2 =>   array (    'workspaceId' => '(?=.*[1-9].*$)\\d*',    '_method' => 'DELETE|GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/remove/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '(?=.*[1-9].*$)\\d*',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_list_registration_pager' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceListByTagRegistrationPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/registration/list/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_workspaces_list_registration_pager' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceCompleteListRegistrationPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/registration/list/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_non_personal_workspaces_list_registration_pager' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'max' => 20,    'seach' => '',    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::nonPersonalWorkspacesListRegistrationPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/registration/list/non/personal/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_personal_workspaces_list_registration_pager' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'max' => 20,    'seach' => '',    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::personalWorkspacesListRegistrationPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/registration/list/personal/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspaces_list_registration_pager_search' => array (  0 =>   array (    0 => 'search',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::workspaceSearchedListRegistrationPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/registration/list/workspaces/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_display_workspace_home_tab' => array (  0 =>   array (    0 => 'workspace',    1 => 'tabId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::displayWorkspaceHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tabId',    ),    1 =>     array (      0 => 'text',      1 => '/open/tool/home/tab',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_list_visible_workspace_home_tabs_picker' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::listWorkspaceVisibleHomeTabsForPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tabs/picker',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_update_favourite' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::updateWorkspaceFavourite',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update/favourite',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_export' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_import_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::importFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/import/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/import/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_all_workspaces_list_pager_for_resource_rights' => array (  0 =>   array (    0 => 'page',    1 => 'wsMax',    2 => 'resource',    3 => 'wsSearch',  ),  1 =>   array (    'page' => 1,    'wsMax' => 10,    'seach' => '',    'wsSearch' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceController::allWorkspacesListPagerForResourceRightsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wsSearch',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    3 =>     array (      0 => 'text',      1 => '/resource',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wsMax',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/workspaces/list/all/workspaces/pager/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_add_children' => array (  0 =>   array (    0 => 'tagId',    1 => 'childrenString',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::addAdminTagChildren',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'childrenString',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag/add/children',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_add_children' => array (  0 =>   array (    0 => 'tagId',    1 => 'childrenString',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::addTagChildren',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'childrenString',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tag/add/children',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::adminWorkspaceTagCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::adminWorkspaceTagCreateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::workspaceTagCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/tag/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::workspaceTagCreateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/tag/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_edit_form' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::adminWorkspaceTagEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_edit' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::adminWorkspaceTagEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_edit_form' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::workspaceTagEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_edit' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::workspaceTagEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_remove_child' => array (  0 =>   array (    0 => 'parentTagId',    1 => 'childTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::removeAdminTagHierarchy',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'childTagId',    ),    1 =>     array (      0 => 'text',      1 => '/remove/child',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parentTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_remove_child' => array (  0 =>   array (    0 => 'parentTagId',    1 => 'childTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::removeTagHierarchy',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'childTagId',    ),    1 =>     array (      0 => 'text',      1 => '/remove/child',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parentTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_check_children_pager' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::checkPotentialAdminWorkspaceTagChildrenPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/check/children/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_check_children_pager_search' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',    2 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::checkPotentialAdminWorkspaceTagChildrenPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/check/children/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_check_children_pager' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::checkPotentialWorkspaceTagChildrenPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/check/children/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_check_children_pager_search' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'page',    2 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::checkPotentialWorkspaceTagChildrenPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/check/children/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_remove_from_workspace' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::removeAdminWorkspaceTagFromWorkspace',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    1 =>     array (      0 => 'text',      1 => '/remove/workspace',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_remove_from_workspace' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::removeWorkspaceTagFromWorkspace',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    1 =>     array (      0 => 'text',      1 => '/remove/workspace',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_manage_admin_workspace_tag' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::manageAdminWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/admin/workspace/tag/manage/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_manage_admin_workspace_tag_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::manageAdminWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/admin/workspace/tag/manage/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_manage_workspace_tag' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::manageWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/workspace/tag/manage/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_manage_workspace_tag_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::manageWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/workspace/tag/manage/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_associate_admin_workspace_tags_to_workspaces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::associateMultipleAdminTagsToMultipleWorkspacesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/associate/admin/tags/to/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_associate_workspace_tags_to_workspaces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::associateMultipleTagsToMultipleWorkspacesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/associate/tags/to/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_organize' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::organizeAdminWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/organize/admin/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_organize' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::organizeWorkspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/organize/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_delete' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::deleteAdminWorkspaceTag',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tag_delete' => array (  0 =>   array (    0 => 'workspaceTagId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::deleteWorkspaceTag',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tag_link_workspace' => array (  0 =>   array (    0 => 'workspaceTagId',    1 => 'workspaceId',  ),  1 =>   array (    'workspaceId' => NULL,    'workspace' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::adminWorkspaceTagLinkWorkspaceAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    1 =>     array (      0 => 'text',      1 => '/link/workspace',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceTagId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_public_workspace_list_pager' => array (  0 =>   array (    0 => 'linkedWorkspaceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::renderPublicWorkspaceListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/public/list/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'linkedWorkspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_public_workspace_list_pager_search' => array (  0 =>   array (    0 => 'linkedWorkspaceId',    1 => 'page',    2 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceTagController::renderPublicWorkspaceListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/public/list/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'linkedWorkspaceId',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_edit_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::workspaceEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editform',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_edit' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::workspaceEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tool_config' => array (  0 =>   array (    0 => 'workspace',    1 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::openWorkspaceToolConfig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    2 =>     array (      0 => 'text',      1 => '/tool',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_subscription_url_generate' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::urlSubscriptionGenerateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/url/generate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_subscription_url_generate_anonymous' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::anonymousSubscriptionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/subscription/url/generate/anonymous',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_subscription_url_generate_user' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceParametersController::userSubscriptionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties/user/subscribe/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_tools_roles' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::workspaceToolsRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tools',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_order_tool_edit_form' => array (  0 =>   array (    0 => 'workspace',    1 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::workspaceOrderToolEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/editform',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    2 =>     array (      0 => 'text',      1 => '/tools',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_order_tool_edit' => array (  0 =>   array (    0 => 'workspace',    1 => 'workspaceOrderTool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::workspaceOrderToolEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceOrderTool',    ),    2 =>     array (      0 => 'text',      1 => '/tools',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_update_ordered_tool_order' => array (  0 =>   array (    0 => 'workspace',    1 => 'orderedTool',    2 => 'otherOrderedTool',    3 => 'mode',    4 => 'type',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::updateWorkspaceOrderedToolOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    3 =>     array (      0 => 'text',      1 => '/mode',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'otherOrderedTool',    ),    5 =>     array (      0 => 'text',      1 => '/with',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    7 =>     array (      0 => 'text',      1 => '/tools/order/update/tool',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    9 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_inverse_ordered_tool_right' => array (  0 =>   array (    0 => 'orderedTool',    1 => 'role',    2 => 'action',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::inverseWorkspaceOrderedToolRightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/inverse',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    2 =>     array (      0 => 'text',      1 => '/action',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    4 =>     array (      0 => 'text',      1 => '/role',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    6 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties/ordered/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_display_edit_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::workspaceDisplayEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/display/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_display_edit' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\WorkspaceToolsParametersController::workspaceDisplayEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/display/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tool/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_roles' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::configureRolePageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_role_create_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::createRoleFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_role_create' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::createRoleAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_role_remove' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::removeRoleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/role',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_role_edit_form' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::editRoleFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/role',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_role_edit' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::editRoleAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/role',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_remove_role_from_user' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',    2 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::removeUserFromRoleAction',  ),  2 =>   array (    '_method' => 'DELETE|GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/remove/role',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_unregistered_user_list' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'order',    4 => 'direction',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::unregisteredUserListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/users/unregistered/page',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    9 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_unregistered_user_list_search' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'search',    3 => 'max',    4 => 'order',    5 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::unregisteredUserListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    7 =>     array (      0 => 'text',      1 => '/search',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/users/unregistered/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_unregistered_group_list' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'order',    4 => 'direction',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::unregisteredGroupListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/groups/unregistered/page',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    9 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_unregistered_group_list_search' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'search',    3 => 'max',    4 => 'order',    5 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::unregisteredGroupListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    7 =>     array (      0 => 'text',      1 => '/search',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/groups/unregistered/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_unregistered_users_from_group_list' => array (  0 =>   array (    0 => 'workspace',    1 => 'group',    2 => 'page',    3 => 'max',    4 => 'orderedBy',    5 => 'order',    6 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'id',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::unregisteredUsersFromGroupListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    11 =>     array (      0 => 'text',      1 => '/users/unregistered/from/group',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    13 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_add_roles_to_users' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::addUsersToRolesAction',  ),  2 =>   array (    '_method' => 'PUT|GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/role/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_remove_role_from_group' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',    2 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::removeGroupFromRoleAction',  ),  2 =>   array (    '_method' => 'DELETE|GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/group',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/remove/role',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_add_roles_to_groups' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::addGroupsToRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/role/group',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_registered_user_list' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'order',    4 => 'direction',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::usersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/users/registered/page',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    9 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_registered_user_list_search' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'search',    3 => 'max',    4 => 'order',    5 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::usersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    7 =>     array (      0 => 'text',      1 => '/search',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/users/registered/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_registered_group_list' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'order',    4 => 'direction',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::groupsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/groups/registered/page',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    9 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_registered_group_list_search' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'search',    3 => 'max',    4 => 'order',    5 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::groupsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    7 =>     array (      0 => 'text',      1 => '/search',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/groups/registered/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_users_of_group_search' => array (  0 =>   array (    0 => 'workspace',    1 => 'group',    2 => 'page',    3 => 'search',    4 => 'max',    5 => 'order',    6 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::usersOfGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    6 =>     array (      0 => 'text',      1 => '/search',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    8 =>     array (      0 => 'text',      1 => '/page',    ),    9 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    10 =>     array (      0 => 'text',      1 => '/groups',    ),    11 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    12 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_users_of_group' => array (  0 =>   array (    0 => 'workspace',    1 => 'group',    2 => 'page',    3 => 'max',    4 => 'order',    5 => 'direction',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'search' => '',    'order' => 'id',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::usersOfGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    6 =>     array (      0 => 'text',      1 => '/page',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    8 =>     array (      0 => 'text',      1 => '/groups',    ),    9 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    10 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_usernames_from_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::retrieveUsernamesFromUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/users/usernames',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_names_from_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::retrieveNamesFromGroupsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/groups/names',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_names_from_workspaces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::retrieveNamesFromWorkspacesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/workspaces/names',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_pending' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::pendingUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/page',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    7 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/users/pending',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_pending_validation' => array (  0 =>   array (    0 => 'workspace',    1 => 'wksqueue',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::pendingUsersValidationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wksqueue',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/users/pending/validation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_pending_decline' => array (  0 =>   array (    0 => 'workspace',    1 => 'wksqueue',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::pendingUsersDeclineAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wksqueue',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/users/pending/decline',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_export_users' => array (  0 =>   array (    0 => 'format',    1 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::exportUsers',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    1 =>     array (      0 => 'text',      1 => '/workspace',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'format',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/export/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_users_tool_import_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::workspaceUsersToolImportFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/import/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_users_tool_import' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\RolesController::workspaceUsersToolImportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/import',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/roles/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_index' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/model/index',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_modal_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::showModelModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/model/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_create' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::createModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/model/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_model_delete' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::deleteModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_rename_form' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::renameModelModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rename/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_rename' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::renameModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rename',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_configure' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::configureModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_model_share_user_list' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::shareModelUserListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/share/index',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_user_list' => array (  0 =>   array (    0 => 'model',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::userListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspace/share/users/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_user_list_search' => array (  0 =>   array (    0 => 'model',    1 => 'page',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::userListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/workspace/share/users/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_group_list' => array (  0 =>   array (    0 => 'model',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::groupListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/workspace/share/groups/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_group_list_search' => array (  0 =>   array (    0 => 'model',    1 => 'page',    2 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::groupListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/workspace/share/groups/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    5 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_users_add' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::shareUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/share/users/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_share_groups_add' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::shareGroupsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/share/groups/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_remove_group' => array (  0 =>   array (    0 => 'model',    1 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::removeModeGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/group',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_remove_user' => array (  0 =>   array (    0 => 'model',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::removeModelUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_resource_copy_add' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::addNodesCopyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/copy/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_resource_link_add' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::addNodeLinkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/link/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_resource_remove' => array (  0 =>   array (    0 => 'resourceModel',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::removeResourceModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceModel',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/remove/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_homeTabs_list' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::listHomeTabsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/homeTabs/list',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_homeTabs_model_link' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::linkHomeTabsToModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/homeTabs/link',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_tab_remove' => array (  0 =>   array (    0 => 'model',    1 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::unlinkHomeTab',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unlink',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/homeTab',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    4 =>     array (      0 => 'text',      1 => '/workspaces/tools/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ws_model_roles_translation_keys_retrieve' => array (  0 =>   array (    0 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ModelController::retrieveRolesTranslationKeysFromWorkspaceModel',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve/roles/translation/keys',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/workspaces/tools/model/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_analytics_traffic' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceAnalyticsController::showTrafficAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/traffic',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace/analytics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_analytics_resources' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceAnalyticsController::showResourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resources',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace/analytics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_activities_evaluations_show' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceAnalyticsController::workspaceActivitiesEvaluationsShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/activities/evaluations',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace/analytics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_activities_past_evaluations_show' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'activityParametersId',    2 => 'userId',    3 => 'displayType',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceAnalyticsController::workspaceActivitiesPastEvaluationsShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'displayType',    ),    1 =>     array (      0 => 'text',      1 => '/past/evaluations/show',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    3 =>     array (      0 => 'text',      1 => '/user',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activityParametersId',    ),    5 =>     array (      0 => 'text',      1 => '/activity/parameters',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    7 =>     array (      0 => 'text',      1 => '/workspace/analytics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_manager_activity_evaluations_show' => array (  0 =>   array (    0 => 'activityId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\WorkspaceAnalyticsController::workspaceManagerActivityEvaluationsShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/evaluations/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activityId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace/analytics/workspace/manager/activity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AdministrationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_open_tool' => array (  0 =>   array (    0 => 'toolName',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\AdministrationController::openAdministrationToolAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'toolName',    ),    1 =>     array (      0 => 'text',      1 => '/admin/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_desktop_configuration_menu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::adminDesktopConfigMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/desktop/configuration/menu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_desktop_tools_configuration' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::adminDesktopConfigureToolAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/admin/desktop/tools/configure/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_ordered_tool_toggle_visibility' => array (  0 =>   array (    0 => 'orderedTool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::toggleVisibility',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/visibility/toggle',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ordered/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_ordered_tool_toggle_lock' => array (  0 =>   array (    0 => 'orderedTool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::toggleLock',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/locke/toggle',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    2 =>     array (      0 => 'text',      1 => '/admin/ordered/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_desktop_update_ordered_tool_order' => array (  0 =>   array (    0 => 'orderedTool',    1 => 'type',    2 => 'nextOrderedToolId',  ),  1 =>   array (    'type' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::updateOrderedToolOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextOrderedToolId',    ),    1 =>     array (      0 => 'text',      1 => '/next',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/type',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedTool',    ),    5 =>     array (      0 => 'text',      1 => '/admin/tools/order/update/admin/ordered/tool',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_desktop_home_lock_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::adminDesktopHomeLockManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/admin/desktop/home/lock/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_desktop_home_lock_change' => array (  0 =>   array (    0 => 'role',    1 => 'locked',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\DesktopConfigurationController::adminDesktopHomeLockChangeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/change',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'locked',    ),    2 =>     array (      0 => 'text',      1 => '/lock',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    4 =>     array (      0 => 'text',      1 => '/admin/admin/desktop/home/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_home_tabs_configuration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::adminHomeTabsConfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/desktop/hometabs/configuration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_home_tabs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminHomeTabsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tabs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_home_tab_creation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminHomeTabCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_admin_home_tab_creation' => array (  0 =>   array (    0 => 'homeTabType',  ),  1 =>   array (    'homeTabType' => 'desktop',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::postAdminHomeTabCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    2 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_home_tab_edition_form' => array (  0 =>   array (    0 => 'homeTabConfig',    1 => 'homeTabType',  ),  1 =>   array (    'homeTabType' => 'desktop',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminHomeTabEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_admin_home_tab_edition' => array (  0 =>   array (    0 => 'homeTabConfig',    1 => 'homeTabType',  ),  1 =>   array (    'homeTabType' => 'desktop',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::putAdminHomeTabEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_admin_home_tab' => array (  0 =>   array (    0 => 'homeTabConfig',    1 => 'homeTabType',  ),  1 =>   array (    'homeTabType' => 'desktop',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::deleteAdminHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_admin_home_tab_config_reorder' => array (  0 =>   array (    0 => 'homeTabType',    1 => 'homeTabConfig',    2 => 'nextHomeTabConfigId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::postAdminHomeTabConfigReorderAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextHomeTabConfigId',    ),    2 =>     array (      0 => 'text',      1 => '/next',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/home/tab',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    6 =>     array (      0 => 'text',      1 => '/admin/api/admin/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_widgets_display' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminWidgetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widgets/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_widget_instance_creation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminInstanceCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/widget/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_admin_widget_instance_creation' => array (  0 =>   array (    0 => 'homeTab',    1 => 'homeTabType',  ),  1 =>   array (    'homeTabType' => 'desktop',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::postAdminWidgetInstanceCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widget/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_admin_widget_instance_edition_form' => array (  0 =>   array (    0 => 'whtc',    1 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::getAdminWidgetInstanceEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/display',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'whtc',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_admin_widget_instance_edition' => array (  0 =>   array (    0 => 'whtc',    1 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::putAdminWidgetInstanceEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/display',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'whtc',    ),    4 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_admin_widget_home_tab_config' => array (  0 =>   array (    0 => 'widgetHomeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::deleteAdminWidgetHomeTabConfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetHomeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/admin/api/admin/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_admin_widget_display_update' => array (  0 =>   array (    0 => 'datas',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\HomeTabController::putAdminWidgetDisplayUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'datas',    ),    2 =>     array (      0 => 'text',      1 => '/admin/api/admin/widget/display',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_portal_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\PortalConfigurationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/portal/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_creation_form' => array (  0 =>   array (    0 => 'resourceType',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::creationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    1 =>     array (      0 => 'text',      1 => '/resource/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_create' => array (  0 =>   array (    0 => 'resourceType',    1 => 'parentId',    2 => 'published',  ),  1 =>   array (    'published' => 0,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::createAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'published',    ),    1 =>     array (      0 => 'text',      1 => '/published',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parentId',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    4 =>     array (      0 => 'text',      1 => '/resource/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_open' => array (  0 =>   array (    0 => 'resourceType',    1 => 'node',  ),  1 =>   array (    'resourceType' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    2 =>     array (      0 => 'text',      1 => '/resource/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_open_short' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    'resourceType' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::openAction',  ),  2 =>   array (    'node' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_publish' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::publishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/publish',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_unpublish' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::unpublishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/unpublish',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_move' => array (  0 =>   array (    0 => 'newParent',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::moveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newParent',    ),    1 =>     array (      0 => 'text',      1 => '/resource/move',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_action' => array (  0 =>   array (    0 => 'action',    1 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::customAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    2 =>     array (      0 => 'text',      1 => '/resource/custom',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_logs' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::logAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_logs_paginated' => array (  0 =>   array (    0 => 'node',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::logAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_logs_by_user' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::logByUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_logs_by_user_paginated' => array (  0 =>   array (    0 => 'node',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::logByUserAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    3 =>     array (      0 => 'text',      1 => '/resource/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_logs_by_user_csv' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::logByUserCSVAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/csv',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource/log',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_download' => array (  0 =>   array (    0 => 'forceArchive',  ),  1 =>   array (    'forceArchive' => false,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::downloadAction',  ),  2 =>   array (    'forceArchive' => '(true|false|0|1)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '(true|false|0|1)',      3 => 'forceArchive',    ),    1 =>     array (      0 => 'text',      1 => '/resource/download',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_directory' => array (  0 =>   array (    0 => 'nodeId',  ),  1 =>   array (    'nodeId' => 0,    'node' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::openDirectoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nodeId',    ),    1 =>     array (      0 => 'text',      1 => '/resource/directory',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_copy' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::copyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    1 =>     array (      0 => 'text',      1 => '/resource/copy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_filter' => array (  0 =>   array (    0 => 'nodeId',  ),  1 =>   array (    'node' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::filterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nodeId',    ),    1 =>     array (      0 => 'text',      1 => '/resource/filter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_create_shortcut' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::createShortcutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    2 =>     array (      0 => 'text',      1 => '/resource/shortcut',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_insert_at' => array (  0 =>   array (    0 => 'node',    1 => 'index',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::insertAt',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/at',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    3 =>     array (      0 => 'text',      1 => '/resource/sort',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_manager_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::managerParametersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/manager_parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_embed' => array (  0 =>   array (    0 => 'node',    1 => 'type',    2 => 'extension',    3 => 'openInNewTab',  ),  1 =>   array (    'openInNewTab' => '0',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::embedResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'openInNewTab',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'extension',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    4 =>     array (      0 => 'text',      1 => '/resource/embed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_change_zoom' => array (  0 =>   array (    0 => 'zoom',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::changeZoom',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'zoom',    ),    1 =>     array (      0 => 'text',      1 => '/resource/zoom',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_import_form' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::importFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/import/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_import' => array (  0 =>   array (    0 => 'directory',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/import',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'directory',    ),    2 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_manager_display_mode_register' => array (  0 =>   array (    0 => 'index',    1 => 'displayMode',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceController::resourceManagerDisplayModeRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'displayMode',    ),    2 =>     array (      0 => 'text',      1 => '/display/mode',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    4 =>     array (      0 => 'text',      1 => '/resource/resource/manager',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_icon_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceIconController::indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resource_icon/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_rename_form' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::renameFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/rename/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_rename' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::renameAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/rename',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_form_properties' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::propertiesFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/properties/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_edit_properties' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::changePropertiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/properties/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_icon_edit_form' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::iconEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icon/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource/node',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_icon_edit' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourcePropertiesController::iconEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icon/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource/node',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_right_form' => array (  0 =>   array (    0 => 'node',    1 => 'role',  ),  1 =>   array (    'role' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::rightFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/rights/form/role',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    3 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_rights_edit' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::editPermsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/rights/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    2 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_open_perms' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::openPermsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/resource/perms/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_right_creation_form' => array (  0 =>   array (    0 => 'node',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::rightCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/right/creation/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/role',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    4 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resource_rights_creation_edit' => array (  0 =>   array (    0 => 'node',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::editPermsCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/right/creation/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/role',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    4 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resources_rights_users_with_rights_form' => array (  0 =>   array (    0 => 'node',    1 => 'orderedBy',    2 => 'order',    3 => 'page',    4 => 'max',    5 => 'search',  ),  1 =>   array (    'search' => '',    'ordered' => 'firstName',    'order' => 'ASC',    'page' => 1,    'max' => 50,    'orderedBy' => 'firstName',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ResourceRightsController::resourcesRightsUsersWithRightsFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/form/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/page',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    7 =>     array (      0 => 'text',      1 => '/order',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    9 =>     array (      0 => 'text',      1 => '/rights/users/with/rights/ordered/by',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    11 =>     array (      0 => 'text',      1 => '/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_resource_rights_creation_form' => array (  0 =>   array (    0 => 'workspace',    1 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Tool\\ResourceManagerController::workspaceResourceRightsCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/rights/form/role',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/resource/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_text_edit_form' => array (  0 =>   array (    0 => 'text',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\TextController::editFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'text',    ),    1 =>     array (      0 => 'text',      1 => '/text/form/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_text_edit' => array (  0 =>   array (    0 => 'old',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\TextController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'old',    ),    1 =>     array (      0 => 'text',      1 => '/text/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_text_open' => array (  0 =>   array (    0 => 'text',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\TextController::openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'text',    ),    1 =>     array (      0 => 'text',      1 => '/text/open',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_display_workspaces_widget' => array (  0 =>   array (    0 => 'mode',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Widget\\MyWorkspacesWidgetController::displayMyWorkspacesWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/widget/workspaces/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resources_widget' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Widget\\ResourcesWidgetController::resourcesWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/widget/resources/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resources_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Widget\\ResourcesWidgetController::resourcesWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/widget/resources/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_resources_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Widget\\ResourcesWidgetController::resourcesWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    1 =>     array (      0 => 'text',      1 => '/widget/resources/widget/configure/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_simple_text_update_config' => array (  0 =>   array (    0 => 'widget',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Widget\\SimpleTextController::updateSimpleTextWidgetConfig',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widget',    ),    1 =>     array (      0 => 'text',      1 => '/widget/simple_text_update/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_mail_form' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\MailController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/mail/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_mail_send' => array (  0 =>   array (    0 => 'userId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\MailController::sendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/mail/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_edit' => array (  0 =>   array (    0 => 'resource',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    1 =>     array (      0 => 'text',      1 => '/activity/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_add' => array (  0 =>   array (    0 => 'activity',    1 => 'resource',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activity',    ),    2 =>     array (      0 => 'text',      1 => '/activity/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_remove_primary_resource' => array (  0 =>   array (    0 => 'activity',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::removePrimaryResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activity',    ),    1 =>     array (      0 => 'text',      1 => '/activity/removeprimary',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_remove_resource' => array (  0 =>   array (    0 => 'activity',    1 => 'resource',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::removeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activity',    ),    2 =>     array (      0 => 'text',      1 => '/activity/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_add_rule_to_activity' => array (  0 =>   array (    0 => 'activityParamsId',    1 => 'action',    2 => 'occurrence',    3 => 'result',    4 => 'activeFrom',    5 => 'activeUntil',    6 => 'resourceNodeId',  ),  1 =>   array (    'resourceNode' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::addRuleToActivity',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNodeId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activeUntil',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activeFrom',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'result',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'occurrence',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activityParamsId',    ),    7 =>     array (      0 => 'text',      1 => '/activity/activity/add/rule',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_get_rule_actions_from_resource_type' => array (  0 =>   array (    0 => 'resourceTypeName',  ),  1 =>   array (    'resourceTypeName' => NULL,    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::getRuleActionsFromResourceType',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceTypeName',    ),    1 =>     array (      0 => 'text',      1 => '/activity/activity/rule/actions/resource/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_display_activity_evaluation' => array (  0 =>   array (    0 => 'paramsId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::displayActivityEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'paramsId',    ),    1 =>     array (      0 => 'text',      1 => '/activity/activity/display/evaluation/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_evaluation_edit' => array (  0 =>   array (    0 => 'evaluationId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::editActivityEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'evaluationId',    ),    1 =>     array (      0 => 'text',      1 => '/activity/edit/activity/evaluation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_past_evaluation_edit' => array (  0 =>   array (    0 => 'pastEvaluationId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ActivityController::editActivityPastEvaluationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pastEvaluationId',    ),    1 =>     array (      0 => 'text',      1 => '/activity/edit/activity/past/evaluation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_activity_remove_resource_confirm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\TemplateController::templateAction',    'template' => 'ClarolineCoreBundle:Activity:remove.html.twig',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/activity/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_js_routing_js' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'fos_js_routing.controller:indexAction',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/js/routing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_file_get_media' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::streamMediaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/file/resource/media',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_file_upload_with_ajax' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::uploadWithAjaxAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    1 =>     array (      0 => 'text',      1 => '/file/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_file_upload_with_tinymce' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::uploadWithTinyMceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    1 =>     array (      0 => 'text',      1 => '/file/tinymce/upload',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_upload_modal' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::uploadModalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/file/uploadmodal',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_file_form' => array (  0 =>   array (    0 => 'file',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::updateFileFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'file',    ),    2 =>     array (      0 => 'text',      1 => '/file/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_file' => array (  0 =>   array (    0 => 'file',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\FileController::updateFileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'file',    ),    1 =>     array (      0 => 'text',      1 => '/file/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_search_in_workspace' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'search',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::userSearchInWorkspaceAction',  ),  2 =>   array (    'workspaceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/user/searchInWorkspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_picker' => array (  0 =>   array (    0 => 'pickerName',    1 => 'pickerTitle',    2 => 'mode',    3 => 'showAllUsers',    4 => 'showFilters',    5 => 'showId',    6 => 'showPicture',    7 => 'showUsername',    8 => 'showMail',    9 => 'showCode',    10 => 'showGroups',    11 => 'showPlatformRoles',    12 => 'attachName',  ),  1 =>   array (    'mode' => 'single',    'showAllUsers' => 0,    'showFilters' => 1,    'showId' => 0,    'showPicture' => 0,    'showUsername' => 1,    'showMail' => 0,    'showCode' => 0,    'showGroups' => 0,    'showPlatformRoles' => 0,    'attachName' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::userPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'attachName',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPlatformRoles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showGroups',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showCode',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showMail',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showUsername',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPicture',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showId',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showFilters',    ),    9 =>     array (      0 => 'text',      1 => '/filters',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showAllUsers',    ),    11 =>     array (      0 => 'text',      1 => '/show/all',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    13 =>     array (      0 => 'text',      1 => '/mode',    ),    14 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pickerTitle',    ),    15 =>     array (      0 => 'text',      1 => '/title',    ),    16 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pickerName',    ),    17 =>     array (      0 => 'text',      1 => '/user/user/picker/name',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_list_for_user_picker' => array (  0 =>   array (    0 => 'mode',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'showAllUsers',    6 => 'showId',    7 => 'showPicture',    8 => 'showUsername',    9 => 'showMail',    10 => 'showCode',    11 => 'showGroups',    12 => 'showPlatformRoles',    13 => 'attachName',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    'search' => '',    'mode' => 'single',    'showAllUsers' => 0,    'showId' => 0,    'showPicture' => 0,    'showUsername' => 1,    'showMail' => 0,    'showCode' => 0,    'showGroups' => 0,    'showPlatformRoles' => 0,    'attachName' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::usersListForUserPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'attachName',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPlatformRoles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showGroups',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showCode',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showMail',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showUsername',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPicture',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showId',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showAllUsers',    ),    9 =>     array (      0 => 'text',      1 => '/show/all',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    11 =>     array (      0 => 'text',      1 => '/order',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    13 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    14 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    15 =>     array (      0 => 'text',      1 => '/max',    ),    16 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    17 =>     array (      0 => 'text',      1 => '/page',    ),    18 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    19 =>     array (      0 => 'text',      1 => '/user/users/list/for/user/picker/mode',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_searched_users_list_for_user_picker' => array (  0 =>   array (    0 => 'mode',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',    6 => 'showAllUsers',    7 => 'showId',    8 => 'showPicture',    9 => 'showUsername',    10 => 'showMail',    11 => 'showCode',    12 => 'showGroups',    13 => 'showPlatformRoles',    14 => 'attachName',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    'search' => '',    'mode' => 'single',    'showAllUsers' => 0,    'showId' => 0,    'showPicture' => 0,    'showUsername' => 1,    'showMail' => 0,    'showCode' => 0,    'showGroups' => 0,    'showPlatformRoles' => 0,    'attachName' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::usersListForUserPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'attachName',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPlatformRoles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showGroups',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showCode',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showMail',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showUsername',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showPicture',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showId',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'showAllUsers',    ),    9 =>     array (      0 => 'text',      1 => '/show/all',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    11 =>     array (      0 => 'text',      1 => '/search',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    13 =>     array (      0 => 'text',      1 => '/order',    ),    14 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    15 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    16 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    17 =>     array (      0 => 'text',      1 => '/max',    ),    18 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    19 =>     array (      0 => 'text',      1 => '/page',    ),    20 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    21 =>     array (      0 => 'text',      1 => '/user/users/list/for/user/picker/mode',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_filters_list_for_user_picker' => array (  0 =>   array (    0 => 'filterType',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::filtersListForUserPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/for/user/picker',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filterType',    ),    2 =>     array (      0 => 'text',      1 => '/user/filters/list/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_roles_list_for_user_picker' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::workspaceRolesListForUserPickerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/list/for/user/picker',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/user/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_user_infos_request' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::userInfosRequestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/infos/request',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_infos_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\UserController::usersInfosRequestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/users/infos/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_general' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::generalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/general',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_appearance' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::appearanceFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/appearance',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_mail_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::mailIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_mail_server' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::mailServerFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/server',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_edit_parameters_mail_server' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::submitMailServerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/server/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_reset_mail_server' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::resetMailServerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/server/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_mail_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::registrationMailFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_edit_mail_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::submitRegistrationMailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/registration/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_mail_layout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::mailLayoutFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/layout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_edit_mail_layout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::submitMailLayoutAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/layout/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_mail_option_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::optionMailFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/layout/option/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_mail_submit_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::optionMailSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/mail/layout/option/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_edit_terms_of_service' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::termsOfServiceFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/terms',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_edit_terms_of_service_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::submitTermsOfServiceAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/terms/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_indexing' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::indexingFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/indexing',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_session' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::sessionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_session_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::submitSessionAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/session/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_oauth_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::oauthIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/oauth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_delete_logo' => array (  0 =>   array (    0 => 'file',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::deleteLogoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'file',    ),    1 =>     array (      0 => 'text',      1 => '/admin/parameters/delete/logo',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_maintenance' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::maintenancePageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/maintenance',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_start_maintenance' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::startMaintenanceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/maintenance/start',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_end_maintenance' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::endMaintenanceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/maintenance/end',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_maintenance_message_edit_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::maintenanceMessageEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/maintenance/message/edit/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_parameters_maintenance_message_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::maintenanceMessageEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/maintenance/message/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_list' => array (  0 =>   array (    0 => 'order',    1 => 'direction',  ),  1 =>   array (    'order' => 'clientName',    'direction' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    1 =>     array (      0 => 'text',      1 => '/direction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token/order',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_edit_form' => array (  0 =>   array (    0 => 'tokenId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tokenId',    ),    2 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_edit' => array (  0 =>   array (    0 => 'tokenId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tokenId',    ),    2 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_security_token_delete' => array (  0 =>   array (    0 => 'tokenId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::securityTokenDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tokenId',    ),    2 =>     array (      0 => 'text',      1 => '/admin/parameters/security/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_send_datas_confirm_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::sendDatasConfirmationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/send/datas/confirmation/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_send_datas_confirm' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::sendDatasConfirmAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/parameters/send/datas/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_send_datas' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\ParametersController::sendDatasAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/admin/parameters/send/datas/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspaces_management' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'order',    3 => 'direction',    4 => 'type',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    'type' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::managementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    3 =>     array (      0 => 'text',      1 => '/direction',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    5 =>     array (      0 => 'text',      1 => '/order',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/admin/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspaces_management_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',    2 => 'max',    3 => 'order',    4 => 'direction',    5 => 'type',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'order' => 'id',    'direction' => 'ASC',    'type' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::managementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'direction',    ),    3 =>     array (      0 => 'text',      1 => '/direction',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    5 =>     array (      0 => 'text',      1 => '/order',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    9 =>     array (      0 => 'text',      1 => '/search',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    11 =>     array (      0 => 'text',      1 => '/admin/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspaces_management_visibility' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::toggleWorkspaceVisibilityAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspaces/visibility',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspaces_management_registration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::toggleWorkspacePublicRegistrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspaces/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_delete_workspaces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::deleteWorkspacesAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspaces/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_import_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::importWorkspaceFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspaces/import/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspacesController::importWorkspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspaces/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_roles_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/roles/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_tools_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::toolsIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/roles/tools/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_add_tool_to_role' => array (  0 =>   array (    0 => 'role',    1 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::addRoleToToolAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    1 =>     array (      0 => 'text',      1 => '/tool',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/admin/roles/bind/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_remove_tool_from_role' => array (  0 =>   array (    0 => 'role',    1 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::removeRoleFromToolAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    1 =>     array (      0 => 'text',      1 => '/tool',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/admin/roles/unbind/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_create_platform_role_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::createPlatformRoleModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/roles/create/platform_role/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_create_platform_role' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::createPlatformRoleAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/roles/create/platform_role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_roles_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::roleListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/roles/roles/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_roles_remove' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::removeRoleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/admin/roles/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_role_initialize' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::initializeRoleLimitAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/admin/roles/initialize/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_role_increase_limit' => array (  0 =>   array (    0 => 'role',    1 => 'amount',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::increaseRoleMaxUsers',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'amount',    ),    1 =>     array (      0 => 'text',      1 => '/increase',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/admin/roles/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_role_name_edit' => array (  0 =>   array (    0 => 'role',    1 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::editRoleNameAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/edit/name',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/admin/roles/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'platform_role_workspace_creation_edit' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\RolesController::invertPersonalWorkspaceCreationAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/invert_workspace_creation',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'text',      1 => '/admin/roles/role',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_user_creation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::userCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_create_user' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/new/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_users_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_import_users_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::importFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_user_workspaces' => array (  0 =>   array (    0 => 'user',    1 => 'page',    2 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 50,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::userWorkspaceListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/workspaces/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/admin/users/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_import_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::importAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/import/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_export_users' => array (  0 =>   array (    0 => 'format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::export',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'text',      1 => '/admin/users/export/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_tool_config_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::personalWorkspaceToolConfigIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/workspace/personal/tool/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_personal_workspace_resource_rights' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::personalWorkspaceResourceRightsConfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/workspace/personal/resources/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_pws_activate_tool' => array (  0 =>   array (    0 => 'perm',    1 => 'role',    2 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::activatePersonalWorkspaceToolPermAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'perm',    ),    3 =>     array (      0 => 'text',      1 => '/admin/users/pws/tool/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_pws_remove_tool' => array (  0 =>   array (    0 => 'perm',    1 => 'role',    2 => 'tool',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::removePersonalWorkspaceToolPermAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tool',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'perm',    ),    3 =>     array (      0 => 'text',      1 => '/admin/users/pws/tool/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_pws_activate_rights_change' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::activatePersonalWorkspaceRightsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/admin/users/pws/rights/activate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_pws_deactivate_rights_change' => array (  0 =>   array (    0 => 'role',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::deactivatePersonalWorkspaceRightsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    1 =>     array (      0 => 'text',      1 => '/admin/users/pws/rights/deactivate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'import_profile_pics_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::importProfilePicsFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/import/profile/pics/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'import_profile_pics' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::importProfilePicsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/users/import/profile/pics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_user_action' => array (  0 =>   array (    0 => 'user',    1 => 'action',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::executeUserAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    1 =>     array (      0 => 'text',      1 => '/admin/action',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'admin_group_action' => array (  0 =>   array (    0 => 'group',    1 => 'action',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\UsersController::executeGroupAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    1 =>     array (      0 => 'text',      1 => '/admin/action',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/admin/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_logs_show' => array (  0 =>   array (  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\LogsController::logListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/logs/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_logs_show_paginated' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\LogsController::logListAction',  ),  2 =>   array (    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/logs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_analytics_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\AnalyticsController::analyticsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/analytics/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_analytics_connections' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\AnalyticsController::analyticsConnectionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/analytics/connections',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_analytics_resources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\AnalyticsController::analyticsResourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/analytics/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_analytics_top' => array (  0 =>   array (    0 => 'topType',  ),  1 =>   array (    'topType' => 'top_users_connections',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\AnalyticsController::analyticsTopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'topType',    ),    1 =>     array (      0 => 'text',      1 => '/admin/analytics/top',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_analytics_other_details' => array (  0 =>   array (    0 => 'item',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\AnalyticsController::analyticsItemAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'item',    ),    1 =>     array (      0 => 'text',      1 => '/admin/analytics/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_registration_management' => array (  0 =>   array (    0 => 'max',  ),  1 =>   array (    'search' => '',    'max' => 20,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::registrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/max',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_registration_management_search' => array (  0 =>   array (    0 => 'search',    1 => 'max',  ),  1 =>   array (    'max' => 20,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::registrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_registration_management_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::registrationManagementUserListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_registration_management_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::registrationManagementGroupListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_list_registration_pager' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::userListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/list/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_users_list_registration_pager_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::userListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/list/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_groups_list_registration_pager' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::groupListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/list/groups/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_groups_list_registration_pager_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::groupListPagerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/list/groups/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_subscribe_users_to_workspaces' => array (  0 =>   array (    0 => 'roleKey',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::subscribeMultipleUsersToMultipleWorkspacesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roleKey',    ),    1 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/workspaces/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_subscribe_groups_to_workspaces' => array (  0 =>   array (    0 => 'roleKey',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::subscribeMultipleGroupsToMultipleWorkspacesAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roleKey',    ),    1 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/workspaces/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_subscribe_users_to_one_workspace' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::subscribeMultipleUsersToOneWorkspaceAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/workspaces/roles/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_subscribe_groups_to_one_workspace' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::subscribeMultipleGroupsToOneWorkspaceAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/registration/management/workspaces/roles/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_users_unregistration_management' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'search' => '',    'page' => 1,    'max' => 50,    'orderedBy' => 'username',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::workspaceUsersUnregistrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/users/unregistration/management/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_workspace_groups_unregistration_management' => array (  0 =>   array (    0 => 'workspace',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'search' => '',    'page' => 1,    'max' => 50,    'orderedBy' => 'name',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::workspaceGroupsUnregistrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/groups/unregistration/management/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    11 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_unsubscribe_users_from_workspace' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::unsubscribeMultipleUsersFromWorkspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/unregistration/management/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_unsubscribe_groups_from_workspace' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WorkspaceRegistrationController::unsubscribeMultipleGroupsFromWorkspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/roles/groups',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/admin/workspace/registration/unregistration/management/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_facet_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\FacetController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/facet/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_facet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\FacetController::facetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/facet/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_profile_properties' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\FacetController::profilePropertiesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/facet/properties',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_claroline' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::listAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_clients' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::clientsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/clients',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_client_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::modalCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_form_edit' => array (  0 =>   array (    0 => 'client',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::modalEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/form/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_client_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::createClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/form/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_client_edit' => array (  0 =>   array (    0 => 'client',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::editClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/submit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    2 =>     array (      0 => 'text',      1 => '/admin/oauth/form/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_client_remove' => array (  0 =>   array (    0 => 'client',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::deleteClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/delete/client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_friend_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::requestFriendFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/request/friend/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_friend_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::requestFriendSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/oauth/request/friend/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_friend_remove' => array (  0 =>   array (    0 => 'friend',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::removeFriendRequest',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'friend',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/request/friend/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_pending_friend_remove' => array (  0 =>   array (    0 => 'friend',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::removePendingFriend',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'friend',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/request/pending/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_friend_new' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::newFriendRequestAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/request/friend/name',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_friends_accept' => array (  0 =>   array (    0 => 'friend',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::acceptFriendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'friend',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/friends/accept',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_receive_data' => array (  0 =>   array (    0 => 'id',    1 => 'secret',    2 => 'name',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::receiveOauthDataAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/name',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'secret',    ),    3 =>     array (      0 => 'text',      1 => '/secret',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/admin/oauth/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_client_hide' => array (  0 =>   array (    0 => 'client',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::hideClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'client',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/hide/client',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_authentication_form' => array (  0 =>   array (    0 => 'friend',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::friendAuthenticationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'friend',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/request/authentication/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oauth_request_authentication_submit' => array (  0 =>   array (    0 => 'friend',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OauthController::friendAuthenticationSubmitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'friend',    ),    1 =>     array (      0 => 'text',      1 => '/admin/oauth/request/authentication/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_organization_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\OrganizationController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/organization/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_i18n_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\InternationalizationController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/i18n/internationalization/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_i18n_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\InternationalizationController::submitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/i18n/internationalization/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_plugins' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\PluginController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/plugins/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_plugin_parameters' => array (  0 =>   array (    0 => 'pluginShortName',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\PluginController::pluginParametersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pluginShortName',    ),    1 =>     array (      0 => 'text',      1 => '/admin/plugins/plugin/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_connected_user' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\ApiController::connectedUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/connected_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_connected_roles' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\ApiController::connectedRolesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/connected_roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_users' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_user_role' => array (  0 =>   array (    0 => 'user',    1 => 'role',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::addUserRoleAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/roles',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_user_role' => array (  0 =>   array (    0 => 'user',    1 => 'role',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::removeUserRoleAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/roles',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_user_group' => array (  0 =>   array (    0 => 'user',    1 => 'group',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::addUserGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/groups',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_user_group' => array (  0 =>   array (    0 => 'user',    1 => 'group',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::removeUserGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/groups',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_users_password_initialize' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::usersPasswordInitializeAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/passwords/initializes/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_users_to_group' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::addUsersToGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/to/group/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_users_from_group' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::removeUsersFromGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/from/group/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_csv_remove_user' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::csvRemoveUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users/csv/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_disable_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::disableUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/disable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_enable_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::enableUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/enable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_csv_import_facets' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::csvImportFacetsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users/csv/facets',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_create_personal_workspace' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::createPersonalWorkspaceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/pws/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_search_users' => array (  0 =>   array (    0 => 'page',    1 => 'limit',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getSearchUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'limit',    ),    3 =>     array (      0 => 'text',      1 => '/limit',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getUserFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_user' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::postUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::putUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_public_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getPublicUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/public',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_user' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::deleteUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_users' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::deleteUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_users_roles' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::putRolesToUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/users/roles/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user_admin_actions' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::getUserAdminActionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/user/admin/action',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_personal_workspace' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\UserController::deletePersonalWorkspaceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/pws/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user_workspaces' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::getUserWorkspacesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/workspaces',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_connected_user_workspaces' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::getConnectedUserWorkspacesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace' => array (  0 =>   array (    0 => 'workspace',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::getWorkspaceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_additional_datas' => array (  0 =>   array (    0 => 'workspace',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::getWorkspaceAdditionalDatasAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/additional/datas',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/api/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_non_personal_workspaces' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::getNonPersonalWorkspacesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/non/personal/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_workspace' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::postWorkspaceUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_workspace' => array (  0 =>   array (    0 => 'workspace',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::deleteWorkspaceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_workspace' => array (  0 =>   array (    0 => 'workspace',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::putWorkspaceAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_workspace_owner' => array (  0 =>   array (    0 => 'workspace',    1 => 'user',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceController::putWorkspaceOwnerAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/owners',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    4 =>     array (      0 => 'text',      1 => '/api/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_profile_facets' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\ProfileController::getFacetsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/facets',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_profile_links' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\ProfileController::getProfileLinksAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/links',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_profile_fields' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\ProfileController::putFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/fields',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/api/profile',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_move_facet_down' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::moveFacetDownAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/down',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'facet',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_move_facet_up' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::moveFacetUpAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/up',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'facet',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_facets' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::getFacetsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/facets',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_facet' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::createFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/facet/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_facet' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::editFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'facet',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_facet' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::deleteFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'facet',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_facet_roles' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::setFacetRolesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/roles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'facet',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_panel_facet' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::createFacetPanelAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/panel/create',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'facet',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_facet_field_choice' => array (  0 =>   array (    0 => 'field',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::createFieldOptionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/choice',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'field',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet/panel/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_facet_field_choice' => array (  0 =>   array (    0 => 'choice',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::deleteFieldOptionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'choice',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet/field/choice',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_panel_facet' => array (  0 =>   array (    0 => 'panel',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::editFacetPanelAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'panel',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet/panel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_panel_facet' => array (  0 =>   array (    0 => 'panel',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::deletePanelFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'panel',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet/panel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_field_facet' => array (  0 =>   array (    0 => 'panel',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::createFieldFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/field/create',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'panel',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet/panel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_field_facet' => array (  0 =>   array (    0 => 'field',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::editFieldFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'field',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet/panel/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_field_facet' => array (  0 =>   array (    0 => 'field',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::deleteFieldFacetAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'field',    ),    2 =>     array (      0 => 'text',      1 => '/api/facet/panel/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_panel_roles' => array (  0 =>   array (    0 => 'panel',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::putPanelRoleAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/roles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'panel',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet/panel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_profile_preferences' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::getProfilePreferencesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/facet/profile/preferences',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_profile_preferences' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::putProfilePreferencesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/facet/profile/preferences',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_panels_order' => array (  0 =>   array (    0 => 'facet',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::orderPanelsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/panels/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'facet',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_fields_order' => array (  0 =>   array (    0 => 'panel',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::orderFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/fields/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'panel',    ),    3 =>     array (      0 => 'text',      1 => '/api/facet/panel',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_invert_user_properties_edition' => array (  0 =>   array (    0 => 'property',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\FacetController::invertPropertiesEditableAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/invert',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'property',    ),    3 =>     array (      0 => 'text',      1 => '/api/property',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_group_role' => array (  0 =>   array (    0 => 'group',    1 => 'role',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::addGroupRoleAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/roles',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    5 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_group_role' => array (  0 =>   array (    0 => 'group',    1 => 'role',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::removeGroupRoleAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'role',    ),    3 =>     array (      0 => 'text',      1 => '/roles',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    5 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_group_members_import' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::importMembersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/import/members',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_groups' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_group' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_group' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::postGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_group' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::putGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_group' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::deleteGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_groups' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::deleteGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_search_groups' => array (  0 =>   array (    0 => 'page',    1 => 'limit',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getSearchGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'limit',    ),    3 =>     array (      0 => 'text',      1 => '/limit',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/api/groups/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_group_searchable_fields' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupSearchableFieldsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/group/searchable/fields',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_group_create_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupCreateFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/group/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_group_edit_form' => array (  0 =>   array (    0 => 'group',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupEditFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit/form',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/api/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_group_admin_actions' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\GroupController::getGroupAdminActionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/group/admin/actions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_organization' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::postOrganizationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_organization' => array (  0 =>   array (    0 => 'organization',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::deleteOrganizationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'organization',    ),    2 =>     array (      0 => 'text',      1 => '/api/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_organizations' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::getOrganizationsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_organization_list' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::getOrganizationListAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/organization/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_organization_edit_form' => array (  0 =>   array (    0 => 'organization',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::getOrganizationEditFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit/form',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'organization',    ),    3 =>     array (      0 => 'text',      1 => '/api/organization',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_organization' => array (  0 =>   array (    0 => 'organization',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\OrganizationController::putOrganizationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'organization',    ),    2 =>     array (      0 => 'text',      1 => '/api/organizations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_locations' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::getLocationsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/locations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_location_create_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::getLocationCreateFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/location/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_location_edit_form' => array (  0 =>   array (    0 => 'location',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::getLocationEditFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/edit/form',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'location',    ),    3 =>     array (      0 => 'text',      1 => '/api/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_location' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::postLocationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/locations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_location' => array (  0 =>   array (    0 => 'location',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::putLocationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'location',    ),    2 =>     array (      0 => 'text',      1 => '/api/locations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_location' => array (  0 =>   array (    0 => 'location',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Organization\\LocationController::deleteLocationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'location',    ),    2 =>     array (      0 => 'text',      1 => '/api/locations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_parameters' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\ParametersController::postParametersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_enable_plugin' => array (  0 =>   array (    0 => 'plugin',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\PluginController::enablePluginAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/enable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'plugin',    ),    3 =>     array (      0 => 'text',      1 => '/api/plugin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_disable_plugin' => array (  0 =>   array (    0 => 'plugin',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\PluginController::disablePluginAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/disable',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'plugin',    ),    3 =>     array (      0 => 'text',      1 => '/api/plugin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_plugins' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\PluginController::getPluginsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/plugins',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_year_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\YearController::getCreateYearFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/year/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_years' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\YearController::getYearsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/years',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_year' => array (  0 =>   array (    0 => 'organization',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\YearController::postYearAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'organization',    ),    2 =>     array (      0 => 'text',      1 => '/api/years',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_leave_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\LeaveController::getCreateLeaveFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/leave/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_leaves' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\LeaveController::getLeavesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/leaves',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_period_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\PeriodController::getCreatePeriodFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/period/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_periods' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\PeriodController::getPeriodsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/periods',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_schedule_template_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\ScheduleTemplateController::getCreateScheduleTemplateFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/schedule/template/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_schedule_templates' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\ScheduleTemplateController::getScheduleTemplatesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/schedule/templates',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_time_slot_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\TimeSlotController::getCreateTimeSlotFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/time/slot/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_time_slots' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\TimeSlotController::getTimeSlotsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/time/slots',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_create_event_form' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\EventController::getCreateEventFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/create/event/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_events' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Calendar\\EventController::getEventsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/events',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_submit_resource_form' => array (  0 =>   array (    0 => 'resourceType',    1 => 'parent',    2 => 'encoding',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Resource\\ResourceController::submitResourceFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/submit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'encoding',    ),    3 =>     array (      0 => 'text',      1 => '/encoding',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    5 =>     array (      0 => 'text',      1 => '/parent',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    7 =>     array (      0 => 'text',      1 => '/api/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_resource_form' => array (  0 =>   array (    0 => 'resourceType',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Resource\\ResourceController::getResourceFormAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/form',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    3 =>     array (      0 => 'text',      1 => '/api/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_resource_node' => array (  0 =>   array (    0 => 'resourceNode',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Resource\\ResourceController::getResourceNodeAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/node',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    3 =>     array (      0 => 'text',      1 => '/api/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_platform_roles' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\RoleController::getPlatformRolesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/roles/platform',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_platform_roles_admin_excluded' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\User\\RoleController::getPlatformRolesAdminExcludedAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/roles/platform/exclude/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_available_locales' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\LocaleController::getAvailableLocalesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/api/locales/available',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_my_contacts_tool_index' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',    4 => 'search',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    'search' => '',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::myContactsToolIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/contact/my/contacts/tool/index/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_show_all_my_contacts' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::showAllMyContactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/contact/show/all/my/contacts/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_show_contacts_by_category' => array (  0 =>   array (    0 => 'category',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::showCategoryContactsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/contacts/page',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    9 =>     array (      0 => 'text',      1 => '/contact/show/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_show_all_visible_users' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',  ),  1 =>   array (    'page' => 1,    'max' => 50,    'orderedBy' => 'lastName',    'order' => 'ASC',    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::showAllVisibleUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    5 =>     array (      0 => 'text',      1 => '/max',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    7 =>     array (      0 => 'text',      1 => '/contact/show/all/visible/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contacts_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::contactsAddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/contacts/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_delete' => array (  0 =>   array (    0 => 'contact',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::contactDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contact',    ),    2 =>     array (      0 => 'text',      1 => '/contact/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contacts_add_to_category' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::contactsAddToCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/contact/contacts/add/to/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_options_configure_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::optionsConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/options/configure/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_options_configure' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::optionsConfigureAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/options/configure',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoryCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/category/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoryCreateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact/category/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_edit_form' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoryEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/contact/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_edit' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoryEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/contact/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_delete' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoryDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/contact/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_categories_transfer_form' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoriesTransferFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/categories/transfer/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/contact/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_categories_transfer' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::categoriesTransferAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/categories/transfer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/contact/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_contact_category_remove' => array (  0 =>   array (    0 => 'user',    1 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\ContactController::contactCategoryRemoveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/category',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/contact/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_portal_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\PortalController::indexAction',  ),  2 =>   array (    '_method' => 'GET|HEAD',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/portal/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_portal_index_2' => array (  0 =>   array (    0 => 'path',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\PortalController::indexAction',  ),  2 =>   array (    'path' => '((?!api).)*',    '_method' => 'GET|HEAD',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '((?!api).)*',      3 => 'path',    ),    1 =>     array (      0 => 'text',      1 => '/portal',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_portal_api_get' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\PortalController::getPortalAction',  ),  2 =>   array (    '_method' => 'GET|HEAD',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/portal/api/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_portal_api_search' => array (  0 =>   array (    0 => 'resourceType',  ),  1 =>   array (    'resourceType' => 'all',    '_controller' => 'Claroline\\CoreBundle\\Controller\\PortalController::searchPortalAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceType',    ),    1 =>     array (      0 => 'text',      1 => '/portal/api/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_widgets_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WidgetController::widgetsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/widget/widgets/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_widget_edit_form' => array (  0 =>   array (    0 => 'widget',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WidgetController::widgetEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widget',    ),    2 =>     array (      0 => 'text',      1 => '/admin/widget/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_widget_edit' => array (  0 =>   array (    0 => 'widget',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\Administration\\WidgetController::widgetEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widget',    ),    2 =>     array (      0 => 'text',      1 => '/admin/widget/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_desktop_options' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getDesktopOptionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/desktop/home/options',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_desktop_home_tabs' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getDesktopHomeTabsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/desktop/home/tabs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_desktop_home_edition_mode_toggle' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putDesktopHomeEditionModeToggleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/desktop/home/edition/mode/toggle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_admin_home_tab_visibility_toggle' => array (  0 =>   array (    0 => 'htc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putAdminHomeTabVisibilityToggleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/visibility/toggle',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'htc',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/admin/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user_home_tab_creation_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getUserHomeTabCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_user_home_tab_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::postUserHomeTabCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_user_home_tab_edition_form' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getUserHomeTabEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_user_home_tab_edition' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putUserHomeTabEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_user_home_tab' => array (  0 =>   array (    0 => 'htc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::deleteUserHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'htc',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_pinned_workspace_home_tab' => array (  0 =>   array (    0 => 'htc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::deletePinnedWorkspaceHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'htc',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/pinned/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_desktop_home_tab_config_reorder' => array (  0 =>   array (    0 => 'homeTabConfig',    1 => 'nextHomeTabConfigId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::postDesktopHomeTabConfigReorderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextHomeTabConfigId',    ),    2 =>     array (      0 => 'text',      1 => '/next',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_desktop_widgets_display' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getDesktopWidgetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widgets/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_widget_instance_creation_form' => array (  0 =>   array (    0 => 'htc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getWidgetInstanceCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widget/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'htc',    ),    2 =>     array (      0 => 'text',      1 => '/api/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_widget_instance_edition_form' => array (  0 =>   array (    0 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getWidgetInstanceEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/api/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_widget_instance_content_configuration_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::getWidgetInstanceContentConfigurationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/content/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/api/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_desktop_widget_instance_creation' => array (  0 =>   array (    0 => 'htc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::postDesktopWidgetInstanceCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widget/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'htc',    ),    2 =>     array (      0 => 'text',      1 => '/api/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_widget_instance_edition' => array (  0 =>   array (    0 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putWidgetInstanceEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/api/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_desktop_widget_home_tab_config_visibility_change' => array (  0 =>   array (    0 => 'widgetHomeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putDesktopWidgetHomeTabConfigVisibilityChangeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/visibility/change',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetHomeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_desktop_widget_home_tab_config' => array (  0 =>   array (    0 => 'widgetHomeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::deleteDesktopWidgetHomeTabConfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetHomeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_desktop_widget_display_update' => array (  0 =>   array (    0 => 'datas',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Desktop\\DesktopHomeController::putDesktopWidgetDisplayUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'datas',    ),    2 =>     array (      0 => 'text',      1 => '/api/desktop/widget/display',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_home_tabs' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceHomeTabsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/tabs',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_home_tab_creation_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceHomeTabCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/tab/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_workspace_home_tab_creation' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::postWorkspaceHomeTabCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/home/tab/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_home_tab_edition_form' => array (  0 =>   array (    0 => 'homeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceHomeTabEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_workspace_home_tab_edition' => array (  0 =>   array (    0 => 'homeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::putWorkspaceHomeTabEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_workspace_home_tab' => array (  0 =>   array (    0 => 'homeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::deleteWorkspaceHomeTabAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_workspace_home_tab_config_reorder' => array (  0 =>   array (    0 => 'homeTabConfig',    1 => 'nextHomeTabConfigId',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::postAdminHomeTabConfigReorderAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reorder',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextHomeTabConfigId',    ),    2 =>     array (      0 => 'text',      1 => '/next',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    4 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_workspace_home_tab_bookmark' => array (  0 =>   array (    0 => 'homeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::postWorkspaceHomeTabBookmarkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/bookmark',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_widgets_display' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceWidgetsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widgets/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_widget_instance_creation_form' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceInstanceCreationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widget/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_workspace_widget_instance_creation' => array (  0 =>   array (    0 => 'homeTab',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::postWorkspaceWidgetInstanceCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/widget/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'homeTab',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_widget_instance_edition_form' => array (  0 =>   array (    0 => 'whtc',    1 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::getWorkspaceWidgetInstanceEditionFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/display',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'whtc',    ),    4 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_workspace_widget_instance_edition' => array (  0 =>   array (    0 => 'whtc',    1 => 'wdc',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::putWorkspaceWidgetInstanceEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'wdc',    ),    2 =>     array (      0 => 'text',      1 => '/display',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'whtc',    ),    4 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_workspace_widget_home_tab_config' => array (  0 =>   array (    0 => 'widgetHomeTabConfig',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::deleteAdminWidgetHomeTabConfigAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetHomeTabConfig',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/home/tab/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_workspace_widget_display_update' => array (  0 =>   array (    0 => 'datas',  ),  1 =>   array (    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Workspace\\WorkspaceHomeController::putWorkspaceWidgetDisplayUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'datas',    ),    2 =>     array (      0 => 'text',      1 => '/api/workspace/widget/display',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_id_secret' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\ClientController::getIdsecretAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/client/public',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_token_expired' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\CoreBundle\\Controller\\API\\Admin\\ClientController::getExpiredAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/client/expired',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_set_task_as_not_done' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::setTaskAsNotDone',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/as-not-done',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/set-task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_set_task_as_done' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::setTaskAsDone',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/as-done',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/set-task',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_invitation_action' => array (  0 =>   array (    0 => 'event',    1 => 'action',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::invitationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/accept/invitation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_delete_event' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_resize' => array (  0 =>   array (    0 => 'event',    1 => 'day',    2 => 'minute',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::resizeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'minute',    ),    1 =>     array (      0 => 'text',      1 => '/minute',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'day',    ),    3 =>     array (      0 => 'text',      1 => '/day',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    5 =>     array (      0 => 'text',      1 => '/agenda/resize/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_move' => array (  0 =>   array (    0 => 'event',    1 => 'day',    2 => 'minute',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::moveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'minute',    ),    1 =>     array (      0 => 'text',      1 => '/minute',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'day',    ),    3 =>     array (      0 => 'text',      1 => '/day',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    5 =>     array (      0 => 'text',      1 => '/agenda/move/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_export' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::exportWorkspaceEventIcsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\AgendaController::exportDesktopEventIcsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::desktopShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_add_event_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::addEventModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/add/event/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::addEvent',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_update_event_form' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::updateEventModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/desktop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_update' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/desktop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_guest_update' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::guestUpdateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/guest/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/desktop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_delete_guest_event' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::guestDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/desktop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_desktop_agenda_widget' => array (  0 =>   array (    0 => 'order',  ),  1 =>   array (    'order' => NULL,    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::widgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/agenda/desktop/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_import_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::importEventsModalForm',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/import/modal/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_agenda_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\DesktopAgendaController::importsEventsIcsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agenda/desktop/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_show' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/show',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_import_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::importEventsModalForm',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/import/modal/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_import' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::importsEventsIcsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/import',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_add_event_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::addEventModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/event/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_add_event' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::addEventAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_update_event_form' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::updateEventModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_workspace_agenda_update' => array (  0 =>   array (    0 => 'event',  ),  1 =>   array (    '_controller' => 'Claroline\\AgendaBundle\\Controller\\WorkspaceAgendaController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/update',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'event',    ),    2 =>     array (      0 => 'text',      1 => '/agenda/workspaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_agenda_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::getReservationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/agenda/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_add_reservation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::addReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_change_reservation_form' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::changeReservationFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/change/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_change_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::changeReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/change',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_move' => array (  0 =>   array (    0 => 'id',    1 => 'minutes',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::moveReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'minutes',    ),    1 =>     array (      0 => 'text',      1 => '/move',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_resize_reservation' => array (  0 =>   array (    0 => 'id',    1 => 'minutes',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::resizeReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'minutes',    ),    1 =>     array (      0 => 'text',      1 => '/resize',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/reservation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_delete_reservation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::deleteReservationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_get_resource_info' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'id' => NULL,    'resource' => NULL,    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationController::getResourceInfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/get-resource-info',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_admin_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_add_new_resource_type' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    'name' => '',    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::addNewResourceTypeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/add/resource-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_modify_resource_type_name' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::changeResourceTypeNameAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/change/resource-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_delete_resource_type' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::deleteResourceTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/delete/resource-type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_add_new_resource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::addResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/add/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_modification_resource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::modifyResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/modify/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_delete_resource' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::deleteResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/reservation/delete/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_update_resource_roles' => array (  0 =>   array (    0 => 'id',    1 => 'rolesList',  ),  1 =>   array (    'rolesList' => '',    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::updateResourceRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rolesList',    ),    1 =>     array (      0 => 'text',      1 => '/roles',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/reservation/update/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_import_resources_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::importResourcesModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_reservation_export_resources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\ReservationBundle\\Controller\\ReservationAdminController::exportResourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reservation/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_image' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\ImagePlayerBundle\\Controller\\ImagePlayerController::fileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/clarolineimageplayerbundle/image',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_form_for_user' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::formForUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/form/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_form_for_group' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::formForGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/form/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_form_for_workspace' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::formForWorkspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/form/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_send' => array (  0 =>   array (    0 => 'parentId',  ),  1 =>   array (    'parentId' => 0,    'parent' => NULL,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::sendAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parentId',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/send',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_received' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listReceivedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/received/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_received_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listReceivedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/received/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_sent' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listSentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/sent/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_sent_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listSentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/sent/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_removed' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listRemovedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/removed/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_list_removed_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::listRemovedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/removed/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_show' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    'message' => 0,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/show',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_soft_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::softDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/message/remove',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/message/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_restore_from_trash' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::restoreFromTrashAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/message/restore',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_mark_as_read' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::markAsReadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/mark_as_read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_users' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableUsersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/contactable/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_users_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableUsersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/contactable/users/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_notification' => array (  0 =>   array (    0 => 'isNotified',  ),  1 =>   array (    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::setMailNotificationAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'isNotified',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/notification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_groups' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableGroupsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/contactable/groups/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_groups_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableGroupsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/contactable/groups/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_workspaces' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableWorkspacesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/message/message/contactable/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_contactable_workspaces_search' => array (  0 =>   array (    0 => 'page',    1 => 'search',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\MessageBundle\\Controller\\MessageController::contactableWorkspacesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/message/message/contactable/workspaces/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_received_message' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\MessageBundle\\Controller\\API\\MessageController::getReceivedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/message/api/received',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_sent_message' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\MessageBundle\\Controller\\API\\MessageController::getSentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/message/api/sent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_removed_message' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\MessageBundle\\Controller\\API\\MessageController::getRemovedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/message/api/removed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_categories' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::openAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/category',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    2 =>     array (      0 => 'text',      1 => '/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_subjects' => array (  0 =>   array (    0 => 'category',    1 => 'page',    2 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::subjectsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/subjects/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    5 =>     array (      0 => 'text',      1 => '/forum/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_form_subject_creation' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::subjectFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/forum/form/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_form_category_creation' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::categoryFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    1 =>     array (      0 => 'text',      1 => '/forum/form/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_create_category' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::createCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    1 =>     array (      0 => 'text',      1 => '/forum/category/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_create_subject' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::createSubjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/forum/subject/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_messages' => array (  0 =>   array (    0 => 'subject',    1 => 'page',    2 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::messagesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/messages/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    5 =>     array (      0 => 'text',      1 => '/forum/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_create_message' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::createMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/create/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_message_form' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editMessageFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    2 =>     array (      0 => 'text',      1 => '/forum/edit/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_message' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/forum/edit/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_category_form' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editCategoryFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/forum/edit/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_category' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editCategoryAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/forum/edit/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_delete_category' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::deleteCategory',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    1 =>     array (      0 => 'text',      1 => '/forum/delete/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_search' => array (  0 =>   array (    0 => 'forum',    1 => 'search',    2 => 'page',  ),  1 =>   array (    'page' => 1,    'search' => '',    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/search',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    5 =>     array (      0 => 'text',      1 => '/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_subject_form' => array (  0 =>   array (    0 => 'subjectId',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editSubjectFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subjectId',    ),    2 =>     array (      0 => 'text',      1 => '/forum/edit/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_edit_subject' => array (  0 =>   array (    0 => 'subjectId',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::editSubjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/submit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subjectId',    ),    2 =>     array (      0 => 'text',      1 => '/forum/edit/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_delete_message' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::deleteMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/forum/delete/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_subscribe' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::subscribeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    1 =>     array (      0 => 'text',      1 => '/forum/subscribe/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_unsubscribe' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::unsubscribeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    1 =>     array (      0 => 'text',      1 => '/forum/unsubscribe/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_delete_subject' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::deleteSubjectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/delete/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_move_form' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::moveSubjectFormAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/move/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    2 =>     array (      0 => 'text',      1 => '/forum/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_move_form' => array (  0 =>   array (    0 => 'message',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::moveMessageFormAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/move/form/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    3 =>     array (      0 => 'text',      1 => '/forum/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_message_move' => array (  0 =>   array (    0 => 'message',    1 => 'newSubject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::moveMessageAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newSubject',    ),    1 =>     array (      0 => 'text',      1 => '/move',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    3 =>     array (      0 => 'text',      1 => '/forum/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_move' => array (  0 =>   array (    0 => 'subject',    1 => 'newCategory',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::moveSubjectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newCategory',    ),    1 =>     array (      0 => 'text',      1 => '/move',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    3 =>     array (      0 => 'text',      1 => '/forum/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_stick' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::stickSubjectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/stick/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_unstick' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::unstickSubjectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/unstick/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_close' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::closeSubjectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/close/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_subject_open' => array (  0 =>   array (    0 => 'subject',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::openSubjectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'subject',    ),    1 =>     array (      0 => 'text',      1 => '/forum/open/subject',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_reply_message_form' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::replyMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/forum/reply/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_quote_message_form' => array (  0 =>   array (    0 => 'message',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::quoteMessageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/forum/quote/message',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_activate_global_notifications' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::activateGlobalNotificationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notifications/activate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    2 =>     array (      0 => 'text',      1 => '/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_forum_disable_global_notifications' => array (  0 =>   array (    0 => 'forum',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\ForumController::disableGlobalNotificationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/notifications/disable',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'forum',    ),    2 =>     array (      0 => 'text',      1 => '/forum',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_forum_last_message_widget_configure' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\ForumBundle\\Controller\\WidgetController::updateLastMessagesForumWidgetConfig',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/forum/widget/listmessages',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_admin_tags_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\AdminTagController::adminTagsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/admin/tags/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_admin_tags_display' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',    4 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'name',    'order' => 'ASC',    '_controller' => 'Claroline\\TagBundle\\Controller\\AdminTagController::adminTagsDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/admin/tags/display/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_admin_tag_delete' => array (  0 =>   array (    0 => 'tag',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\AdminTagController::adminTagDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tag',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/admin/tag',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_admin_tagged_object_delete' => array (  0 =>   array (    0 => 'taggedObject',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\AdminTagController::adminTaggedObjectDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'taggedObject',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/admin/tagged/object',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resource_tag_form' => array (  0 =>   array (    0 => 'resourceNode',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourceTagFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resource_tag' => array (  0 =>   array (    0 => 'resourceNode',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_group_tag_form' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::groupTagFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_group_tag' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::groupTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_user_tag_form' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::userTagFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_user_tag' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::userTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_workspace_tag_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::workspaceTagFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_workspace_tag' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::workspaceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resources_widget' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourcesTagsWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resources/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resources_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourcesTagsWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resources/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resources_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourcesTagsWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resources/widget/configure/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resource_from_widget_open' => array (  0 =>   array (    0 => 'resourceNode',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::resourceFromWidgetOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resources/widget/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_tag_resource_tag_delete' => array (  0 =>   array (    0 => 'resourceNode',    1 => 'tag',  ),  1 =>   array (    '_controller' => 'Claroline\\TagBundle\\Controller\\TagController::tagDeleteFromResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'tag',    ),    2 =>     array (      0 => 'text',      1 => '/tag',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinetagbundle/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_configuration_menu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportConfigurationMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/configuration/menu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_contacts_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportContactsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/contacts/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_contacts_add' => array (  0 =>   array (    0 => 'contactIds',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportContactsAddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contactIds',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/contacts',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_contact_remove' => array (  0 =>   array (    0 => 'contactId',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportContactRemoveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'contactId',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_tabs' => array (  0 =>   array (    0 => 'type',    1 => 'supportName',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTabsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'supportName',    ),    1 =>     array (      0 => 'text',      1 => '/tabs/active',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_new' => array (  0 =>   array (    0 => 'type',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'creationDate',    'order' => 'DESC',    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportNewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/new/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    11 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_level' => array (  0 =>   array (    0 => 'type',    1 => 'level',    2 => 'page',    3 => 'max',    4 => 'orderedBy',    5 => 'order',    6 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'creationDate',    'order' => 'DESC',    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportLevelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'level',    ),    11 =>     array (      0 => 'text',      1 => '/level',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    13 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_my_tickets' => array (  0 =>   array (    0 => 'type',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'creationDate',    'order' => 'DESC',    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportMyTicketsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/my/tickets/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    11 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_archives' => array (  0 =>   array (    0 => 'type',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'creationDate',    'order' => 'DESC',    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportArchivesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/archives/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    11 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comments_view' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentsViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments/view',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_interventions_view' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionsViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/interventions/view',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_delete' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_new_open' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminNewTicketOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/new/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_open' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_open_comments' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketOpenCommentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open/comments',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_open_interventions' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketOpenInterventionsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open/interventions',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_management_info' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketManagementInfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/management/info',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_start' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionStartAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/intervention/start',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_stop' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionStopAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/stop',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_type_change_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketTypeChangeFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/type/change/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_type_change' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketTypeChangeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/type/change',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comment_create_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comment_create' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comment_edit_form' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comment_edit' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_comment_delete' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketCommentDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_create_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/intervention/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_create' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/intervention/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_edit_form' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_edit' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_delete' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_status_edit_form' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionStatusEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/status/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_ticket_intervention_status_edit' => array (  0 =>   array (    0 => 'intervention',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminTicketInterventionStatusEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/status/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'intervention',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/ticket/intervention',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_edit_form' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_edit' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_type_delete' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportTypeDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_edit_form' => array (  0 =>   array (    0 => 'status',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_edit' => array (  0 =>   array (    0 => 'status',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_delete' => array (  0 =>   array (    0 => 'status',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_support_status_reorder' => array (  0 =>   array (    0 => 'status',    1 => 'nextStatusId',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::adminSupportStatusReorderAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextStatusId',    ),    1 =>     array (      0 => 'text',      1 => '/reorder/next',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    3 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/admin/support/status',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_support_plugin_configure_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::pluginConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/plugin/configure/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_support_plugin_configure' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\AdminSupportController::pluginConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/plugin/configure',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_support_index' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',    4 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'num',    'order' => 'DESC',    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::supportIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/support/index/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_edit_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_edit' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_edit_modal_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketEditModalFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/modal/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_edit_modal' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketEditModalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/modal',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_delete' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_open' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_comment_create_form' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketCommentCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_comment_create' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketCommentCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_comments_view' => array (  0 =>   array (    0 => 'ticket',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketCommentsViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments/view',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'ticket',    ),    2 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/ticket',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_from_issue_create_form' => array (  0 =>   array (    0 => 'user',    1 => 'exceptionClass',    2 => 'message',    3 => 'file',    4 => 'line',    5 => 'url',    6 => 'referer',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketFromIssueCreateFormAction',  ),  2 =>   array (    'file' => '.+',    'url' => '.+',    'referer' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/end_referer/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'referer',    ),    2 =>     array (      0 => 'text',      1 => '/end_url/referer',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'url',    ),    4 =>     array (      0 => 'text',      1 => '/url',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'line',    ),    6 =>     array (      0 => 'text',      1 => '/end_file/line',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'file',    ),    8 =>     array (      0 => 'text',      1 => '/file',    ),    9 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    10 =>     array (      0 => 'text',      1 => '/message',    ),    11 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exceptionClass',    ),    12 =>     array (      0 => 'text',      1 => '/ticket/from/issue',    ),    13 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    14 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_ticket_from_issue_create' => array (  0 =>   array (    0 => 'user',    1 => 'exceptionClass',    2 => 'message',    3 => 'file',    4 => 'line',    5 => 'url',    6 => 'referer',  ),  1 =>   array (    '_controller' => 'FormaLibre\\SupportBundle\\Controller\\SupportController::ticketFromIssueCreateAction',  ),  2 =>   array (    'file' => '.+',    'url' => '.+',    'referer' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/end_referer/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'referer',    ),    2 =>     array (      0 => 'text',      1 => '/end_url/referer',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'url',    ),    4 =>     array (      0 => 'text',      1 => '/url',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'line',    ),    6 =>     array (      0 => 'text',      1 => '/end_file/line',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'file',    ),    8 =>     array (      0 => 'text',      1 => '/file',    ),    9 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'message',    ),    10 =>     array (      0 => 'text',      1 => '/message',    ),    11 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exceptionClass',    ),    12 =>     array (      0 => 'text',      1 => '/ticket/from/issue',    ),    13 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    14 =>     array (      0 => 'text',      1 => '/formalibresupportbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_rss_config_update' => array (  0 =>   array (    0 => 'widget',  ),  1 =>   array (    '_controller' => 'Claroline\\RssReaderBundle\\Controller\\RssReaderController::updateSimpleTextWidgetConfig',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widget',    ),    1 =>     array (      0 => 'text',      1 => '/rss-reader/simple_text_update/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_resource_enable' => array (  0 =>   array (    0 => 'resourceId',    1 => 'resourceClass',  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\FollowerResourceController::enableResourceNotificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceClass',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_notification/enableResourceNotification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_resource_disable' => array (  0 =>   array (    0 => 'resourceId',    1 => 'resourceClass',  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\FollowerResourceController::disableResourceNotificationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceClass',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_notification/disableResourceNotification',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_view' => array (  0 =>   array (    0 => 'page',    1 => 'markViewed',  ),  1 =>   array (    'page' => 1,    'markViewed' => 0,    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationController::listAction',  ),  2 =>   array (    'page' => '\\d+',    'markViewed' => '0|1',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '0|1',      3 => 'markViewed',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/icap_notification/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_rss' => array (  0 =>   array (    0 => 'rssId',  ),  1 =>   array (    '_format' => 'xml',    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationController::rssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rssId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_notification/rss',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_configuration' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationPluginConfigurationController::getAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_notification/configuration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_configuration_save' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationPluginConfigurationController::postAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_notification/configuration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_user_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationUserParametersController::getAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_notification/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_save_user_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationUserParametersController::postAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_notification/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notification_regenerate_rss_url' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\NotificationBundle\\Controller\\NotificationUserParametersController::regenerateRssUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_notification/regenerate_rss',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notifications' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Icap\\NotificationBundle\\Controller\\API\\NotificationController::getNotificationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/icap_notification/api/notifications',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_notifications_read' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Icap\\NotificationBundle\\Controller\\API\\NotificationController::getNotificationsReadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/icap_notification/api/notifications/read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_index' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    1 =>     array (      0 => 'text',      1 => '/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_parameters' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyEditionMainMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/parameters',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_parameters_edit_form' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyParametersEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/parameters/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_parameters_edit' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyParametersEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/parameters/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_management' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_display' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_publish' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyPublishAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_close' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyCloseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/close',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_questions_management' => array (  0 =>   array (    0 => 'survey',    1 => 'orderedBy',    2 => 'order',    3 => 'page',    4 => 'max',  ),  1 =>   array (    'ordered' => 'title',    'order' => 'ASC',    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    5 =>     array (      0 => 'text',      1 => '/order',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    7 =>     array (      0 => 'text',      1 => '/questions/management/ordered/by',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    9 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_models_management' => array (  0 =>   array (    0 => 'survey',    1 => 'orderedBy',    2 => 'order',  ),  1 =>   array (    'ordered' => 'title',    'order' => 'ASC',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::modelsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/models/management/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    5 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_model_delete' => array (  0 =>   array (    0 => 'survey',    1 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::modelDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/model',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_questions_list' => array (  0 =>   array (    0 => 'survey',    1 => 'orderedBy',    2 => 'order',    3 => 'page',    4 => 'max',  ),  1 =>   array (    'ordered' => 'title',    'order' => 'ASC',    'page' => 1,    'max' => 20,    'orderedBy' => 'title',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    5 =>     array (      0 => 'text',      1 => '/order',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    7 =>     array (      0 => 'text',      1 => '/questions/list/ordered/by',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    9 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_create_form' => array (  0 =>   array (    0 => 'survey',    1 => 'source',  ),  1 =>   array (    'source' => 'question',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/question/create/form/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    3 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_create' => array (  0 =>   array (    0 => 'survey',    1 => 'source',  ),  1 =>   array (    'source' => 'question',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/question/create/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    3 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_edit_form' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'source',  ),  1 =>   array (    'source' => 'question',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/edit/form/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    3 =>     array (      0 => 'text',      1 => '/question',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    5 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_edit' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'source',  ),  1 =>   array (    'source' => 'question',    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/edit/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    3 =>     array (      0 => 'text',      1 => '/question',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    5 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_delete' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_title_create_form' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionTitleCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/question/title/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_title_create' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionTitleCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/question/title/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_title_edit_form' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionTitleEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/title/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_title_edit' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionTitleEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/title/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_title_delete' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionTitleDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/title/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_add_question' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAddQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    1 =>     array (      0 => 'text',      1 => '/add/question',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    3 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_remove_question' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyRemoveQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    1 =>     array (      0 => 'text',      1 => '/remove/question',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    3 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_typed_question_display' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::typedQuestionDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/typed/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_typed_question_create_form' => array (  0 =>   array (    0 => 'survey',    1 => 'questionType',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::typedQuestionCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'questionType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_typed_question_edit_form' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'questionType',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::typedQuestionEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'questionType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    4 =>     array (      0 => 'text',      1 => '/question',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    6 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_relation_mandatory_switch' => array (  0 =>   array (    0 => 'relation',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyQuestionRelationMandatorySwitchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/switch',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'relation',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey/question/relation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_answer_form' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAnswerFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answer/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_answer' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAnswerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_results_show' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'page',    3 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyResultsShowAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    5 =>     array (      0 => 'text',      1 => '/results/show/question',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    7 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_results_show_comments' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'page',    3 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::showCommentsForQuestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/comments/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    5 =>     array (      0 => 'text',      1 => '/results/show/question',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    7 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_results_show_other_answers' => array (  0 =>   array (    0 => 'survey',    1 => 'question',    2 => 'choice',    3 => 'page',    4 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::showOtherAnswersForChoiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/other/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'choice',    ),    5 =>     array (      0 => 'text',      1 => '/choice',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    7 =>     array (      0 => 'text',      1 => '/results/show/question',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    9 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_retrieve_model_details' => array (  0 =>   array (    0 => 'survey',    1 => 'model',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::retrieveModelDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/details/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'model',    ),    2 =>     array (      0 => 'text',      1 => '/model',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_update_question_order' => array (  0 =>   array (    0 => 'survey',    1 => 'relation',    2 => 'otherRelation',    3 => 'mode',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::updateQuestionOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/mode',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'otherRelation',    ),    3 =>     array (      0 => 'text',      1 => '/with',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'relation',    ),    5 =>     array (      0 => 'text',      1 => '/question/order/update/relation',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    7 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_results_export' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::resultsExcelExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/results/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_question_results_export' => array (  0 =>   array (    0 => 'survey',    1 => 'question',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::questionResultsExcelExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/results/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'question',    ),    2 =>     array (      0 => 'text',      1 => '/question',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    4 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_answers_export' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAnswersExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_answers_management' => array (  0 =>   array (    0 => 'survey',    1 => 'page',    2 => 'max',  ),  1 =>   array (    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAnswersManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    1 =>     array (      0 => 'text',      1 => '/max',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/answers/management/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    5 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_all_answers_delete' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::allSurveyAnswersDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/all/answers/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_survey_answers_delete' => array (  0 =>   array (    0 => 'survey',  ),  1 =>   array (    '_controller' => 'Claroline\\SurveyBundle\\Controller\\SurveyController::surveyAnswersDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/answers/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'survey',    ),    2 =>     array (      0 => 'text',      1 => '/survey/survey',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcements_list' => array (  0 =>   array (    0 => 'aggregateId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementsListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'aggregateId',    ),    3 =>     array (      0 => 'text',      1 => '/announcement/announcement/list/aggregate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_create_form' => array (  0 =>   array (    0 => 'aggregateId',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::createFormAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'aggregateId',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/aggregate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_create' => array (  0 =>   array (    0 => 'aggregateId',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'aggregateId',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/aggregate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_edit_form' => array (  0 =>   array (    0 => 'announcementId',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementEditFormAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'announcementId',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/announcement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_edit' => array (  0 =>   array (    0 => 'announcementId',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementEditAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'announcementId',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/announcement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_delete' => array (  0 =>   array (    0 => 'announcementId',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementDeleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'announcementId',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/announcement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_widget' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementsWidgetAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/announcement/announcement/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_widget_pager' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementsWidgetPagerAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    3 =>     array (      0 => 'text',      1 => '/announcement/announcement/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcements_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementsWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/announcements/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcements_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementsWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    1 =>     array (      0 => 'text',      1 => '/announcement/announcements/widget/configure/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_announcement_send_mail' => array (  0 =>   array (    0 => 'announcement',  ),  1 =>   array (    '_controller' => 'Claroline\\AnnouncementBundle\\Controller\\AnnouncementController::announcementSendMailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/send/mail',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'announcement',    ),    2 =>     array (      0 => 'text',      1 => '/announcement/announcement',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_scorm_12_resource' => array (  0 =>   array (    0 => 'scormId',    1 => 'mode',  ),  1 =>   array (    'mode' => 0,    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::renderScorm12ResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/mode',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scormId',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/render/scorm/12',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_scorm_12_sco' => array (  0 =>   array (    0 => 'scoId',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::renderScorm12ScoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scoId',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/12/render/sco',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_12_tracking_commit' => array (  0 =>   array (    0 => 'datasString',    1 => 'mode',    2 => 'scoId',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::commitScorm12Tracking',  ),  2 =>   array (    'datasString' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scoId',    ),    1 =>     array (      0 => 'text',      1 => '/sco',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    3 =>     array (      0 => 'text',      1 => '/mode',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'datasString',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/tracking/commit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_scorm_2004_resource' => array (  0 =>   array (    0 => 'scormId',    1 => 'mode',  ),  1 =>   array (    'mode' => 0,    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::renderScorm2004ResourceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/mode',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scormId',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/render/scorm/2004',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_render_scorm_2004_sco' => array (  0 =>   array (    0 => 'scoId',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::renderScorm2004ScoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scoId',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/2004/render/sco',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_2004_tracking_commit' => array (  0 =>   array (    0 => 'mode',    1 => 'scoId',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::commitScorm2004Tracking',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scoId',    ),    1 =>     array (      0 => 'text',      1 => '/sco',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/2004/tracking/commit/mode',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_12_configuration_edit_form' => array (  0 =>   array (    0 => 'scorm',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::scorm12ConfigurationEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configuration/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scorm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/12',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_12_configuration_edit' => array (  0 =>   array (    0 => 'scorm',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::scorm12ConfigurationEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configuration/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scorm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/12',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_2004_configuration_edit_form' => array (  0 =>   array (    0 => 'scorm',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::scorm2004ConfigurationEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configuration/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scorm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/2004',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_2004_configuration_edit' => array (  0 =>   array (    0 => 'scorm',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\ScormController::scorm2004ConfigurationEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configuration/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scorm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm/2004',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_results' => array (  0 =>   array (    0 => 'resourceNode',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\API\\ScormController::scormResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_scorm_get_tracking_details' => array (  0 =>   array (    0 => 'resourceNode',    1 => 'scoId',    2 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\ScormBundle\\Controller\\API\\ScormController::getScormTrackingDetailsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/details',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'scoId',    ),    4 =>     array (      0 => 'text',      1 => '/tracking/sco',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinescormbundle/scorm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_pdf' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'Claroline\\PdfPlayerBundle\\Controller\\PdfPlayerController::fileAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinepdfplayerbundle/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_tool_course_index' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'orderedBy',    3 => 'order',    4 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'title',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::cursusToolCourseIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/tool/course/index/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_edit_form' => array (  0 =>   array (    0 => 'cursusId',    1 => 'course',    2 => 'source',  ),  1 =>   array (    'source' => 0,    'cursusId' => -1,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/edit/form/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    3 =>     array (      0 => 'text',      1 => '/course',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusId',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_edit' => array (  0 =>   array (    0 => 'cursusId',    1 => 'course',    2 => 'source',  ),  1 =>   array (    'source' => 0,    'cursusId' => -1,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'source',    ),    1 =>     array (      0 => 'text',      1 => '/edit/source',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    3 =>     array (      0 => 'text',      1 => '/course',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusId',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_delete' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_display_description' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseDescriptionDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/description/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_management' => array (  0 =>   array (    0 => 'cursusId',    1 => 'course',  ),  1 =>   array (    'cursusId' => -1,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/course',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusId',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_create_form' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_create' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_edit_form' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_edit' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_delete' => array (  0 =>   array (    0 => 'session',    1 => 'mode',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionDeleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/delete/with/workspace',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_view_management' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionViewManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/view/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_registration_unregistered_users_list' => array (  0 =>   array (    0 => 'session',    1 => 'userType',    2 => 'page',    3 => 'max',    4 => 'orderedBy',    5 => 'order',    6 => 'search',  ),  1 =>   array (    'userType' => 0,    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'firstName',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionRegistrationUnregisteredUsersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/list/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    11 =>     array (      0 => 'text',      1 => '/registration/unregistered/users',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    13 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_register_user' => array (  0 =>   array (    0 => 'session',    1 => 'user',    2 => 'userType',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionUserRegisterAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/register/user',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_session_event_unregister_user' => array (  0 =>   array (    0 => 'sessionEventUser',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::sessionEventUserUnregisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEventUser',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/session/evnet/unregister/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_registration_unregistered_groups_list' => array (  0 =>   array (    0 => 'session',    1 => 'groupType',    2 => 'page',    3 => 'max',    4 => 'orderedBy',    5 => 'order',    6 => 'search',  ),  1 =>   array (    'groupType' => 0,    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'name',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionRegistrationUnregisteredGroupsListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/list/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupType',    ),    11 =>     array (      0 => 'text',      1 => '/registration/unregistered/groups',    ),    12 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    13 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_register_group' => array (  0 =>   array (    0 => 'session',    1 => 'group',    2 => 'groupType',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionGroupRegisterAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupType',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    3 =>     array (      0 => 'text',      1 => '/register/group',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_unregister_group' => array (  0 =>   array (    0 => 'sessionGroup',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionGroupUnregisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionGroup',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session/unregister/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_confirmation_mail_send' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionConfirmationMailSendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/confirmation/mail/send',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_user_confirmation_mail_send' => array (  0 =>   array (    0 => 'session',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionUserConfirmationMailSendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/confirmation/mail/send',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_user_registration_accept' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionUserRegistrationAcceptAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accept',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_user_registration_decline' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionUserRegistrationDeclineAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/decline',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_queued_user_transfer_form' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseQueuedUserTransferFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/transfer/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_queued_user_transfer' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseQueuedUserTransferAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/transfer',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_default_switch' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::courseSessionDefaultSwitchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/default/switch',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::coursesExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_import_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::coursesImportFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/import/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::coursesImportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'course_workspace_roles_translation_keys_retrieve' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CourseController::retrieveRolesTranslationKeysFromWorkspaceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve/roles/translation/keys',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_management_tool_menu' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusManagementToolMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/management/tool/menu',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_tool_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusToolIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/tool/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_create_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/create/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_edit_form' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_edit' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_view' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/view',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_view_hierarchy' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusViewHierarchyAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/view/hierarchy',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_delete' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_display_description' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusDescriptionDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/description/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_management' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_child_create_form' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusChildCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/child/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_child_create' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusChildCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/child/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_add_courses_users_list' => array (  0 =>   array (    0 => 'cursus',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'title',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusAddCoursesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/add/courses/list/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    11 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_associate_course' => array (  0 =>   array (    0 => 'cursus',    1 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseAssociateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    1 =>     array (      0 => 'text',      1 => '/associate/course',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_dissociate_course' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseDissociateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dissociate/course',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_add_course' => array (  0 =>   array (    0 => 'cursus',    1 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseAddAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    1 =>     array (      0 => 'text',      1 => '/add/course',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_add_courses' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCoursesAddAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/courses',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_remove_course' => array (  0 =>   array (    0 => 'cursus',    1 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseRemoveAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    1 =>     array (      0 => 'text',      1 => '/remove/course',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_remove_courses' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCoursesRemoveAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove/courses',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_into_cursus_create_form' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_into_cursus_create' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusCourseCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_update_order' => array (  0 =>   array (    0 => 'cursus',    1 => 'otherCursus',    2 => 'mode',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::updateCursusOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    1 =>     array (      0 => 'text',      1 => '/mode',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'otherCursus',    ),    3 =>     array (      0 => 'text',      1 => '/order/update/with/cursus',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_update_parent_and_order' => array (  0 =>   array (    0 => 'cursus',    1 => 'parent',    2 => 'nextCursusId',  ),  1 =>   array (    'nextCursusId' => -1,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::updateCursusParentAndOrderAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nextCursusId',    ),    1 =>     array (      0 => 'text',      1 => '/order/with/cursus',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    3 =>     array (      0 => 'text',      1 => '/update/parent',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_plugin_configure_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::pluginConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/plugin/configure/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_plugin_configure' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::pluginConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/plugin/configure',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_change_displayed_word' => array (  0 =>   array (    0 => 'key',    1 => 'value',  ),  1 =>   array (    'value' => '',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::displayedWordChangeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'value',    ),    1 =>     array (      0 => 'text',      1 => '/change',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/admin/displayed/word',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_registration_widget' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesRegistrationWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/registration/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_list_for_registration_widget' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 20,    'orderedBy' => 'title',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesListForRegistrationWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    11 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/list/registration/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_list_for_registration_widget_calendar' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'search',  ),  1 =>   array (    'search' => '',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesListForRegistrationWidgetCalendarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/calendar/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/list/registration/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_session_self_register' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::courseSessionSelfRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/self/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_session_event_self_register' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::sessionEventSelfRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/self/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_queue_register' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::courseQueueRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/queue/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_queue_cancel' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::courseQueueCancelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/queue/cancel',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_registration_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesRegistrationWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/registration/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_courses_registration_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesRegistrationWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/registration/widget/configure/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesRegistrationWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget/configure/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_widget' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_list_for_widget' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 20,    'orderedBy' => 'title',    'order' => 'ASC',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesListForWidgetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    11 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_list_for_widget_calendar' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'search',  ),  1 =>   array (    'search' => '',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesListForWidgetCalendarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/calendar/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_my_courses_list_for_widget_chronologic' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'search',  ),  1 =>   array (    'search' => '',    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::myCoursesListForWidgetChronologicAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/chronologic/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/my/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_courses_widget_session_informations' => array (  0 =>   array (    0 => 'widgetInstance',    1 => 'session',    2 => 'withWorkspace',    3 => 'withMail',    4 => 'type',  ),  1 =>   array (    'withWorkspace' => 1,    'withMail' => 1,    'type' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesWidgetSessionInformationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'withMail',    ),    3 =>     array (      0 => 'text',      1 => '/mail',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'withWorkspace',    ),    5 =>     array (      0 => 'text',      1 => '/informations/workspace',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    7 =>     array (      0 => 'text',      1 => '/session',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    9 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_courses_widget_session_event_informations' => array (  0 =>   array (    0 => 'sessionEvent',    1 => 'withMail',  ),  1 =>   array (    'withMail' => 1,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::coursesWidgetSessionEventInformationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'withMail',    ),    1 =>     array (      0 => 'text',      1 => '/informations/mail',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/courses/widget/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusExportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_import_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusImportFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/import/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::cursusImportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/cursus/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_event_comment' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::postSessionEventCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_session_event_comment_edit' => array (  0 =>   array (    0 => 'sessionEventComment',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::putSessionEventCommentEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEventComment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session/event/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_event_comment' => array (  0 =>   array (    0 => 'sessionEventComment',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusController::deleteSessionEventCommentAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEventComment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session/event/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_tool_registration_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::cursusToolRegistrationIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/tool/registration/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_user_sessions_management' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::userSessionsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/sessions/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_user_sessions_registration_management' => array (  0 =>   array (    0 => 'user',    1 => 'type',  ),  1 =>   array (    'page' => 1,    'max' => 50,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::userSessionsRegistrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/sessions/registration/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_group_sessions_management' => array (  0 =>   array (    0 => 'group',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::groupSessionsManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/sessions/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_group_sessions_registration_management' => array (  0 =>   array (    0 => 'group',    1 => 'type',  ),  1 =>   array (    'page' => 1,    'max' => 50,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::groupSessionsRegistrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/sessions/registration/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_sessions_datas_list' => array (  0 =>   array (    0 => 'page',    1 => 'max',    2 => 'search',  ),  1 =>   array (    'search' => '',    'page' => 1,    'max' => 20,    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::sessionsDatasListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    3 =>     array (      0 => 'text',      1 => '/max',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/sessions/datas/list/page',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_sessions_register' => array (  0 =>   array (    0 => 'user',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::sessionsRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/sessions/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_sessions_register_group' => array (  0 =>   array (    0 => 'group',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::sessionsRegisterGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/sessions/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_course_registration_queue_user_validate' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::courseRegistrationQueueUserValidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/validate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/course/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_session_registration_queue_user_validate' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::sessionRegistrationQueueUserValidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/validate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_session_events_registration_management' => array (  0 =>   array (    0 => 'session',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\CursusRegistrationController::sessionEventsRegistrationManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/management',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/events/registration/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_user_to_cursus' => array (  0 =>   array (    0 => 'user',    1 => 'cursus',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::addUserToCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/tos',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_user_from_cursus' => array (  0 =>   array (    0 => 'user',    1 => 'cursus',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::removeUserFromCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/froms',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_user_to_session' => array (  0 =>   array (    0 => 'user',    1 => 'session',    2 => 'type',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::addUserToSessionAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    3 =>     array (      0 => 'text',      1 => '/sessions',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    5 =>     array (      0 => 'text',      1 => '/tos',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_remove_user_from_session' => array (  0 =>   array (    0 => 'sessionUser',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::removeUserFromSessionAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/from/session/remove',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionUser',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_add_user_to_cursus_hierarchy' => array (  0 =>   array (    0 => 'user',    1 => 'cursus',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::addUserToCursusHierarchyAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/hierarchy/add',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/tos',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_all_root_cursus' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAllRootCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/all/root/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_root_cursus' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getRootCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/root/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_one_cursus' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getOneCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/ones',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_datas_for_cursus_registration' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getDatasForCursusRegistrationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/for/cursus/registration',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/datas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_users_for_cursus_registration' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getCursusUsersForCursusRegistrationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/users/for/cursus/registration',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_datas_for_searched_cursus_registration' => array (  0 =>   array (    0 => 'search',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getDatasForSearchedCursusRegistrationAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/for/searched/cursus/registration',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/datas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_datas_for_cursus_hierarchy' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getDatasForCursusHierarchyAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/for/cursus/hierarchy',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/datas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_group' => array (  0 =>   array (    0 => 'cursusGroup',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteCursusGroupAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/group',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusGroup',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_groups' => array (  0 =>   array (    0 => 'cursusGroupsIdsTxt',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteCursusGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/groups',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusGroupsIdsTxt',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_user' => array (  0 =>   array (    0 => 'cursusUser',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteCursusUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusUser',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_users' => array (  0 =>   array (    0 => 'cursus',    1 => 'usersIdsTxt',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteCursusUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'usersIdsTxt',    ),    2 =>     array (      0 => 'text',      1 => '/users',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_unregistered_cursus_groups' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getUnregisteredCursusGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/groups',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/unregistereds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_searched_unregistered_cursus_groups' => array (  0 =>   array (    0 => 'cursus',    1 => 'search',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSearchedUnregisteredCursusGroupsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/groups',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/unregistereds',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/searcheds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_unregistered_cursus_users' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getUnregisteredCursusUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/users',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/unregistereds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_searched_unregistered_cursus_users' => array (  0 =>   array (    0 => 'cursus',    1 => 'search',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSearchedUnregisteredCursusUsersAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/cursus/users',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/unregistereds',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/searcheds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_sessions_for_cursus_list' => array (  0 =>   array (    0 => 'cursusIdsTxt',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSessionsForCursusListAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/for/cursus/list',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusIdsTxt',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/sessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_group_register_to_multiple_cursus' => array (  0 =>   array (    0 => 'group',    1 => 'cursusIdsTxt',    2 => 'sessionsIdsTxt',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::postGroupRegisterToMultipleCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/multiples/cursuses',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionsIdsTxt',    ),    3 =>     array (      0 => 'text',      1 => '/tos',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusIdsTxt',    ),    5 =>     array (      0 => 'text',      1 => '/registers',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_users_register_to_multiple_cursus' => array (  0 =>   array (    0 => 'usersIdsTxt',    1 => 'cursusIdsTxt',    2 => 'sessionsIdsTxt',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::postUsersRegisterToMultipleCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/multiples/cursuses',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionsIdsTxt',    ),    3 =>     array (      0 => 'text',      1 => '/tos',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursusIdsTxt',    ),    5 =>     array (      0 => 'text',      1 => '/registers',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'usersIdsTxt',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_registration_queues_datas' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getRegistrationQueuesDatasAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/registration/queues/datas',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_registration_queues_datas_by_search' => array (  0 =>   array (    0 => 'search',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getRegistrationQueuesDatasBySearchAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/queues/datas/by/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/registrations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_course_queue_validate' => array (  0 =>   array (    0 => 'queue',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::putCourseQueueValidateAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/queue/validate',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_session_queue_validate' => array (  0 =>   array (    0 => 'queue',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::putSessionQueueValidateAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/queue/validate',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/sessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_course_queue' => array (  0 =>   array (    0 => 'queue',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteCourseQueueAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/queue',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_queue' => array (  0 =>   array (    0 => 'queue',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::deleteSessionQueueAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/queue',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/sessions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_available_sessions_by_course' => array (  0 =>   array (    0 => 'course',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAvailableSessionsByCourseAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/sessions/by/course',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/availables',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_course_queued_user_transfer' => array (  0 =>   array (    0 => 'queue',    1 => 'session',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::postCourseQueuedUserTransferAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/users/transfers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/queueds',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    5 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_all_courses' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAllCoursesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/all/courses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_all_unmapped_courses' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAllUnmappedCoursesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/all/unmapped/courses',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_sessions' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSessionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/sessions/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_sessions_by_course' => array (  0 =>   array (    0 => 'course',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSessionsByCourseAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/sessions',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_id_from_session' => array (  0 =>   array (    0 => 'session',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getWorkspaceIdFromSessionAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/workspace/id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_events_by_session' => array (  0 =>   array (    0 => 'session',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getSessionEventsBySessionAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/events',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_courses_profile_tab_option' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getCoursesProfileTabOptionAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/courses/profile/tab/option',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_closed_sessions_by_leaner' => array (  0 =>   array (    0 => 'user',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getClosedSessionsByLeanerAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/closed/sessions',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_all_cursus' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAllCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/all/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_all_cursus_hierarchy' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getAllCursusHierarchyAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/all/cursus/hierarchy',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus' => array (  0 =>   array (    0 => 'cursus',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getCursusAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_course' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\CursusController::getCourseAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_cursus_admin_management_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/admin/management/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCursusCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_child_creation' => array (  0 =>   array (    0 => 'parent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCursusChildCreationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/child/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'parent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_cursus_edition' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putCursusEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteCursusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCursusImportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_course_creation' => array (  0 =>   array (    0 => 'cursus',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCursusCourseCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/course/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_course_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCourseCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_course_add' => array (  0 =>   array (    0 => 'cursus',    1 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCursusCourseAddAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/course',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'cursus',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_course_edition' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putCourseEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_course' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteCourseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_courses_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postCoursesImportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/courses/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_course_by_id' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getCourseByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get/by/id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_by_code_without_id' => array (  0 =>   array (    0 => 'code',    1 => 'id',  ),  1 =>   array (    'id' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getCursusByCodeWithoutIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/without/id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'code',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/get/by/code',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_course_by_code_without_id' => array (  0 =>   array (    0 => 'code',    1 => 'id',  ),  1 =>   array (    'id' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getCourseByCodeWithoutIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/without/id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'code',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course/get/by/code',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_by_id' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get/by/id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_creation' => array (  0 =>   array (    0 => 'course',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/session/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_session_edition' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putSessionEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session' => array (  0 =>   array (    0 => 'session',    1 => 'mode',  ),  1 =>   array (    'mode' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'mode',    ),    2 =>     array (      0 => 'text',      1 => '/mode',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_session_default_reset' => array (  0 =>   array (    0 => 'course',    1 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::resetSessionsDefaultAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/default/reset',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/session',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'course',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/course',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_event_by_id' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionEventByIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get/by/id',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_event_creation' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionEventCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/event/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_session_event_edition' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putSessionEventEditionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_event' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_users_by_session_and_type' => array (  0 =>   array (    0 => 'session',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionUsersBySessionAndTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/user/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_users_by_session' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionUsersBySessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_groups_by_session' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionGroupsBySessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/groups',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_pending_users_by_session' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionPendingUsersBySessionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/pending/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_user' => array (  0 =>   array (    0 => 'sessionUser',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionUser',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_group' => array (  0 =>   array (    0 => 'sessionGroup',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionGroupAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionGroup',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_accept_session_registration_queue' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::acceptSessionRegistrationQueueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/accept',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_registration_queue' => array (  0 =>   array (    0 => 'queue',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionRegistrationQueueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'queue',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/registration/queue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_unregistered_users' => array (  0 =>   array (    0 => 'session',    1 => 'userType',  ),  1 =>   array (    'userType' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionUnregisteredUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    1 =>     array (      0 => 'text',      1 => '/unregistered/users/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_unregistered_groups' => array (  0 =>   array (    0 => 'session',    1 => 'groupType',  ),  1 =>   array (    'groupType' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionUnregisteredGroupsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupType',    ),    1 =>     array (      0 => 'text',      1 => '/unregistered/groups/type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_user_registration' => array (  0 =>   array (    0 => 'session',    1 => 'user',    2 => 'userType',  ),  1 =>   array (    'userType' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionUserRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    4 =>     array (      0 => 'text',      1 => '/user',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_group_registration' => array (  0 =>   array (    0 => 'session',    1 => 'group',    2 => 'groupType',  ),  1 =>   array (    'groupType' => 0,    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionGroupRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'groupType',    ),    2 =>     array (      0 => 'text',      1 => '/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'group',    ),    4 =>     array (      0 => 'text',      1 => '/group',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_event_unregistered_users' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionEventUnregisteredUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unregistered/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_event_user_registration' => array (  0 =>   array (    0 => 'sessionEvent',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionEventUserRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_event_users_by_session_event' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getSessionEventUsersBySessionEventAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_session_event_user' => array (  0 =>   array (    0 => 'sessionEventUser',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteSessionEventUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEventUser',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_validators_roles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getValidatorsRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/validators/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspaces' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getWorkspacesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/worskpaces',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_workspace_models' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getWorkspaceModelsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/worskpace/models',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_locations' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getLocationsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/locations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_reservation_resources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getReservationResourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/reservation/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_reservation_resources' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getCursusReservationResourcesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/reservation/resources',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_reservation_resources_tag' => array (  0 =>   array (    0 => 'resource',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postReservationResourceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/reservation/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_reservation_resources_tag' => array (  0 =>   array (    0 => 'resource',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteReservationResourceTagAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/tag/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resource',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/reservation/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_general_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getGeneralParametersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/general/parameters/retrieve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_general_parameters' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postGeneralParametersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/general/parameters/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_document_models' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getDocumentModelsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/models/retrieve',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_document_model' => array (  0 =>   array (    0 => 'documentModel',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getDocumentModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'documentModel',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_document_model_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postDocumentModelCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_cursus_document_model_edition' => array (  0 =>   array (    0 => 'documentModel',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putDocumentModelEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'documentModel',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_document_model' => array (  0 =>   array (    0 => 'documentModel',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteDocumentModelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'documentModel',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_document_models_by_type' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getDocumentModelsByTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/models/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_populated_document_models_by_type' => array (  0 =>   array (    0 => 'type',    1 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getPopulatedDocumentModelsByTypeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/source',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/populated/document/models/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_cursus_populated_document_models_by_type_for_user' => array (  0 =>   array (    0 => 'type',    1 => 'sourceId',    2 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::getPopulatedDocumentModelsByTypeForUserAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/for/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    4 =>     array (      0 => 'text',      1 => '/source',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/populated/document/models/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_event_repeat' => array (  0 =>   array (    0 => 'sessionEvent',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionEventRepeatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/repeat',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_location_creation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postLocationCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/location/create',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_cursus_location_edition' => array (  0 =>   array (    0 => 'location',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::putLocationEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'location',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_cursus_location' => array (  0 =>   array (    0 => 'location',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::deleteLocationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'location',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/location',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_session_message_send' => array (  0 =>   array (    0 => 'session',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postSessionMessageSendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/message/send',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_document_send' => array (  0 =>   array (    0 => 'documentModel',    1 => 'sourceId',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postDocumentSendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/send',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    2 =>     array (      0 => 'text',      1 => '/source',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'documentModel',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_cursus_document_for_user_send' => array (  0 =>   array (    0 => 'documentModel',    1 => 'sourceId',    2 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::postDocumentForUserSendAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/send',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/for/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sourceId',    ),    4 =>     array (      0 => 'text',      1 => '/source',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'documentModel',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/cursus/document/model',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_users_csv_export' => array (  0 =>   array (    0 => 'session',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::exportCsvSessionUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/csv/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/users/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_session_event_users_csv_export' => array (  0 =>   array (    0 => 'sessionEvent',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Claroline\\CursusBundle\\Controller\\API\\AdminManagementController::exportCsvSessionEventUsersAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/csv/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/users/type',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionEvent',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinecursusbundle/api/session/event',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_index' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/index',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_menu' => array (  0 =>   array (    0 => 'workspace',    1 => 'orderedBy',    2 => 'order',  ),  1 =>   array (    'orderedBy' => 'name',    'order' => 'ASC',    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/team/manager/menu/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    5 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_user_menu' => array (  0 =>   array (    0 => 'workspace',    1 => 'orderedBy',    2 => 'order',  ),  1 =>   array (    'orderedBy' => 'name',    'order' => 'ASC',    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::userMenuAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    3 =>     array (      0 => 'text',      1 => '/team/user/menu/ordered/by',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    5 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_create_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_create' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/team/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_edit_form' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_edit' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_delete' => array (  0 =>   array (    0 => 'team',    1 => 'withDirectory',  ),  1 =>   array (    'withDirectory' => 0,    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'withDirectory',    ),    1 =>     array (      0 => 'text',      1 => '/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    3 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_multiple_create_form' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::multipleTeamsCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/multiple/teams/create/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_multiple_create' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::multipleTeamCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/multiple/teams/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_register_user' => array (  0 =>   array (    0 => 'team',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerRegisterUserToTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    4 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_unregister_user' => array (  0 =>   array (    0 => 'team',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerUnregisterUserFromTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unregister',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    4 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_register_users' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerRegisterUsersToTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/register',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_unregister_users' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerUnregisterUsersFromTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/unregister',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_delete_teams' => array (  0 =>   array (    0 => 'workspace',    1 => 'withDirectory',  ),  1 =>   array (    'withDirectory' => 0,    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerDeleteTeamsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'withDirectory',    ),    1 =>     array (      0 => 'text',      1 => '/teams/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    3 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_empty_teams' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerEmtyTeamsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/teams/empty',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_fill_teams' => array (  0 =>   array (    0 => 'workspace',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerFillTeamsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/teams/fill',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspace',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_self_register_user' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::selfRegisterUserToTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/self/register/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_self_unregister_user' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::selfUnregisterUserToTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/self/unregister/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_parameters_edit_form' => array (  0 =>   array (    0 => 'params',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamParamsEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'params',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace/team/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_parameters_edit' => array (  0 =>   array (    0 => 'params',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamParamsEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'params',    ),    2 =>     array (      0 => 'text',      1 => '/team/workspace/team/parameters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_registration_users_list' => array (  0 =>   array (    0 => 'team',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'firstName',    'order' => 'ASC',    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::registrationUserslistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/registration/users/list/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    11 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_registration_unregistered_users_list' => array (  0 =>   array (    0 => 'team',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'firstName',    'order' => 'ASC',    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::registrationUnregisteredUserslistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/registration/unregistered/users/list/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    11 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_users_list' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamUserslistAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users/list',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_display_description' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::teamDescriptionDisplayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/description/display',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_team_index' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerTeamIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/manager/index',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_user_team_index' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::userTeamIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/user/index',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_register_manager' => array (  0 =>   array (    0 => 'team',    1 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerRegisterManagerToTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/manager',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/user',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    4 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_team_manager_unregister_manager' => array (  0 =>   array (    0 => 'team',  ),  1 =>   array (    '_controller' => 'Claroline\\TeamBundle\\Controller\\TeamController::managerUnregisterManagerFromTeamAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unregister/manager',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'team',    ),    2 =>     array (      0 => 'text',      1 => '/team/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_pdf_download' => array (  0 =>   array (    0 => 'pdf',  ),  1 =>   array (    '_controller' => 'Claroline\\PdfGeneratorBundle\\Controller\\PdfController::download',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'pdf',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinepdfgeneratorbundle/download',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_admin_tool_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminToolIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/admin/presence/tool/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_admin_add_school_year' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminAddSchoolYearAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/admin/presence/addSchoolYear/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_school_year_modif' => array (  0 =>   array (    0 => 'theSchoolYear',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::SchoolYearModifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'theSchoolYear',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/schoolYear_modif/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_school_year_supprimer' => array (  0 =>   array (    0 => 'theSchoolYear',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::SchoolYearSupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'theSchoolYear',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/schoolYear_supprimer/theSchoolYear',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_admin_right' => array (  0 =>   array (    0 => 'right',    1 => 'rightValue',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminRightAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'rightValue',    ),    1 =>     array (      0 => 'text',      1 => '/rightValue',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'right',    ),    3 =>     array (      0 => 'text',      1 => '/presence/admin/presence/right/right',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_horaire' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminHoraireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/admin/presence/horaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_modifier_horaire' => array (  0 =>   array (    0 => 'period',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminModifierHoraireAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'period',    ),    1 =>     array (      0 => 'text',      1 => '/presence/admin/presence/modifier_horaire/period',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_period_supprimer' => array (  0 =>   array (    0 => 'period',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminPeriodSupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'period',    ),    1 =>     array (      0 => 'text',      1 => '/presence/admin/period_supprimer/period',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_admin_listing_roles' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::adminListingRolesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/admin/listing/roles',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_status_modif' => array (  0 =>   array (    0 => 'theStatus',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::StatusModifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'theStatus',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/status_modif/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_status_supprimer' => array (  0 =>   array (    0 => 'theStatus',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::StatussupprimerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'theStatus',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/status_supprimerf/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_listingstatusbydefault' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\AdminPresenceController::ListingStatusByDefaultAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/presence/listingstatusbydefault',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_tool_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::ToolIndexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/presence/tool/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_choix_classe' => array (  0 =>   array (    0 => 'period',    1 => 'date',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::ChoixClasseAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'date',    ),    1 =>     array (      0 => 'text',      1 => '/date',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'period',    ),    3 =>     array (      0 => 'text',      1 => '/presence/presence/choix_classe/period',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_releve' => array (  0 =>   array (    0 => 'period',    1 => 'date',    2 => 'session',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::PresenceReleveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'session',    ),    1 =>     array (      0 => 'text',      1 => '/session',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'date',    ),    3 =>     array (      0 => 'text',      1 => '/date',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'period',    ),    5 =>     array (      0 => 'text',      1 => '/presence/presence/releve/period',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_archives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::ArchivesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/presence/archives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_modif' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::PresenceModifAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/presence_modif/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_supp' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::PresenceSuppAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/presence_supp/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_supp_validate' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::PresenceSuppValidateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/presence/presence/presence_supp_validate/id',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_listingstatus' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::ListingStatusAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/presence/listingstatus',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'formalibre_presence_listingstatusbydefaultnoadmin' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FormaLibre\\PresenceBundle\\Controller\\PresenceController::ListingStatusByDefaultnoAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/presence/presence/listingstatusbydefaultnoadmin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_video_track' => array (  0 =>   array (    0 => 'video',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::postTrackAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/track',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'video',    ),    3 =>     array (      0 => 'text',      1 => '/video-player/api/video',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_video_track' => array (  0 =>   array (    0 => 'track',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::putTrackAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'track',    ),    2 =>     array (      0 => 'text',      1 => '/video-player/api/video/track',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_video_tracks' => array (  0 =>   array (    0 => 'video',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::getTracksAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tracks',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'video',    ),    3 =>     array (      0 => 'text',      1 => '/video-player/api/video',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_delete_video_track' => array (  0 =>   array (    0 => 'track',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::deleteTrackAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'track',    ),    2 =>     array (      0 => 'text',      1 => '/video-player/api/video/track',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_video_track_stream' => array (  0 =>   array (    0 => 'track',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::streamTrackAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/stream',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'track',    ),    3 =>     array (      0 => 'text',      1 => '/video-player/api/video/track',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_video_stream' => array (  0 =>   array (    0 => 'video',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\VideoPlayerBundle\\Controller\\API\\VideoController::streamVideoAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/stream',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'video',    ),    3 =>     array (      0 => 'text',      1 => '/video-player/api/video',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_correct' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::correctAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/correct',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_correct_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::correctAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/correct',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_correct_comment' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::correctCommentAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/correct/comment',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_standard' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'backUserId',  ),  1 =>   array (    'backUserId' => '-1',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailCorrectionStandardAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit',    'backUserId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'backUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit',      3 => 'state',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail/correction/standard',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_comment' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'documentId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailCommentAction',  ),  2 =>   array (    'documentId' => '\\d+',    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/document',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    4 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    6 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'page',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailCommentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'page' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_comment' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailCorrectionCommentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/comment',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_add_comments_innova' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'documentId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailAddCommentsInnovaAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/add/comments/document',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_delete_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',    2 => 'backPage',  ),  1 =>   array (    'backPage' => 'default',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::deleteCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'backPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'text',      1 => '/delete/correction',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_revalidateCorrection' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',    2 => 'value',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    'value' => 'yes',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::RevalidateCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'value',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'correctionId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation/confirmation',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_validation' => array (  0 =>   array (    0 => 'resourceId',    1 => 'value',    2 => 'correctionId',  ),  1 =>   array (    'routeParam' => 'default',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::setCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'value' => 'no|yes',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'no|yes',      3 => 'value',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_validation_by_user' => array (  0 =>   array (    0 => 'resourceId',    1 => 'value',    2 => 'correctionId',  ),  1 =>   array (    'routeParam' => 'byUser',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::setCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'value' => 'no|yes',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'no|yes',      3 => 'value',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation/byUser',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_invalidate_all_corrections' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::invalidateAllCorrectionsAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/invalidate_all',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_deny_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::denyCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/drops/detail/correction/deny',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_recalculate_score' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::recalculateScoreAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/recalculate/score',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_examiner_corrections' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::correctionsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/examiners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_examiner_corrections_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',    2 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::correctionsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'text',      1 => '/examiners',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_examiners' => array (  0 =>   array (    0 => 'resourceId',    1 => 'withDropOnly',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::ExaminersByCorrectionMadeAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '(withDropOnly|all|withoutDrops)',      3 => 'withDropOnly',    ),    1 =>     array (      0 => 'text',      1 => '/examiners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_examiners_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'withDropOnly',    2 => 'page',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::ExaminersByCorrectionMadeAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '(withDropOnly|all|withoutDrops)',      3 => 'withDropOnly',    ),    2 =>     array (      0 => 'text',      1 => '/examiners',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_recalculate_drop_grade' => array (  0 =>   array (    0 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::recalculateScoreByDropAction',  ),  2 =>   array (    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/recalculateDropGrade',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_recalculate_dropzone_grades' => array (  0 =>   array (    0 => 'dropzone',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::recalculateScoreByDropzoneAction',  ),  2 =>   array (    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/recalculateDropzoneGrades',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dropzone',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_add_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailAddCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/correction',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_add_comments' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailAddCommentsAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail_correction_paginated_comments' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'page',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropsDetailAddCommentsAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'page' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_comment' => array (  0 =>   array (    0 => 'documentId',    1 => 'userId',    2 => 'dropzoneId',    3 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::AddCommentsInnovaAction',  ),  2 =>   array (    'documentId' => '\\d+',    'userId' => '\\d+',    'dropzoneId' => '\\d+',    'correctionId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropzoneId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    3 =>     array (      0 => 'text',      1 => '/add/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_more_comments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::ajaxDropzoneAddMoreCommentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/dropzone/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_more_comments_view' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::dropzoneAddMoreCommentsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/dropzone/comments/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_more_comment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::addMoreCommentsInnovaAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/add/more/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_comment_for_docs' => array (  0 =>   array (    0 => 'userId',    1 => 'dropzoneId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CorrectionController::addCommentForDocsInnovaAction',  ),  2 =>   array (    'userId' => '\\d+',    'dropzoneId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropzoneId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/add/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_add_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',    3 => 'collecticielOpenOrNot',  ),  1 =>   array (    'criterionId' => 0,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CriterionController::editAddCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',    'adminInnova' => '[0-1]',    'collecticielOpenOrNot' => '[0-1]',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[0-1]',      3 => 'collecticielOpenOrNot',    ),    1 =>     array (      0 => 'text',      1 => '/admin/adminInnova}/collecticiel',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    3 =>     array (      0 => 'text',      1 => '/criterion',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    5 =>     array (      0 => 'text',      1 => '/edit/addcriterion',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    7 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_create_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',  ),  1 =>   array (    'criterionId' => 0,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CriterionController::editCreateCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/edit/createcriterion',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_delete_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',    3 => 'number',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CriterionController::editDeleteCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',    'number' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'number',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/edit/deletecriterion',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_remove_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\CriterionController::editRemoveCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/edit/removecriterion',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_document' => array (  0 =>   array (    0 => 'resourceId',    1 => 'documentType',    2 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DocumentController::documentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'documentType' => 'url|file|resource|text',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'url|file|resource|text',      3 => 'documentType',    ),    2 =>     array (      0 => 'text',      1 => '/document',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_delete_document' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'documentId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DocumentController::deleteDocumentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/delete/document',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_open_resource' => array (  0 =>   array (    0 => 'resourceId',    1 => 'documentId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DocumentController::openResourceAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/open/resource',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_validate_document' => array (  0 =>   array (    0 => 'documentId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DocumentController::ajaxValidateDocumentAction',  ),  2 =>   array (    'documentId' => '\\d+',    'dropzoneId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/document',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_unvalidate_document' => array (  0 =>   array (    0 => 'documentId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DocumentController::ajaxUnvalidateDocumentAction',  ),  2 =>   array (    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/undocument',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drop_switch_admin' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/drop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drop_switch' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/drop/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drop' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drop',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_user' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_user_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_default' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/default',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_default_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/default',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_report' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/report',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_report_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/report',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_date' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByDateAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/date',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_by_date_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsByDateAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/date',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_awaiting' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsAwaitingAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/awaiting',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_awaiting_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsAwaitingAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/awaiting',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_delete' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'tab',    3 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsDeleteAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'tab' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tab',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/drops/delete',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drops_detail' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropsDetailAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_drop_detail_by_user' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::dropDetailAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/drop/detail',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_unlock_drop' => array (  0 =>   array (    0 => 'dropId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::unlockDropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/unlock/drop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_report_drop' => array (  0 =>   array (    0 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::reportDropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/report/drop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_remove_report' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'correctionId',    3 => 'invalidate',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::removeReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'correctionId' => '\\d+',    'invalidate' => '0|1',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '0|1',      3 => 'invalidate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/remove/report',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_auto_close_drops_confirmation' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::autoCloseDropsConfirmationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/autoclosedrops/confirm',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_auto_close_drops' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::autoCloseDropsAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/autoclosedrops',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_shared_spaces' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::sharedSpacesAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/shared/spaces',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_shared_spaces_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::sharedSpacesAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/shared/spaces',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_return_receipt' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::returnReceiptAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/drop/reception',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_back_link' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropController::backLinkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/back/link',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_common' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editCommonAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/common',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editAppreciationAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_appreciation' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editAppreciationAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/appreciation',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_criteria' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editCriteriaAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/criteria',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_criteria_innova' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editCriteriaAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/criteria',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_edit_criteria_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::editCriteriaAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/edit/criteria',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_open' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::openAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_update_dropzone' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\DropzoneController::updateAjaxDropzoneAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/add/update/dropzone',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_add_notation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\NotationController::addNotationForDocsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/add/notation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_collecticiel_validate_transmit_evaluation' => array (  0 =>   array (    0 => 'documentId',    1 => 'dropzoneId',  ),  1 =>   array (    '_controller' => 'Innova\\CollecticielBundle\\Controller\\NotationController::ajaxValidateTransmitEvaluationDocumentAction',  ),  2 =>   array (    'documentId' => '\\d+',    'dropzoneId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropzoneId',    ),    1 =>     array (      0 => 'text',      1 => '/dropzone',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    3 =>     array (      0 => 'text',      1 => '/innovacollecticielbundle/document',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_favourite_index' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\FavouriteBundle\\Controller\\FavouriteController::indexAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/favourite/node',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_add_favourite_form' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'HeVinci\\FavouriteBundle\\Controller\\FavouriteController::addFavouriteFormAction',  ),  2 =>   array (    'node' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/favourite/add/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_favourite_form' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'HeVinci\\FavouriteBundle\\Controller\\FavouriteController::deleteFavouriteFormAction',  ),  2 =>   array (    'node' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/favourite/delete/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_favourite' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'HeVinci\\FavouriteBundle\\Controller\\FavouriteController::deleteFavouriteAction',  ),  2 =>   array (    'node' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/favourite/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_activity_competencies' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::competenciesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_activity_link_ability' => array (  0 =>   array (    0 => 'id',    1 => 'abilityId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::linkAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/link',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'abilityId',    ),    2 =>     array (      0 => 'text',      1 => '/abilities',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_activity_link_competency' => array (  0 =>   array (    0 => 'id',    1 => 'competencyId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::linkCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/link',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'competencyId',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_activity_remove_ability' => array (  0 =>   array (    0 => 'id',    1 => 'abilityId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::removeAbilityLinkAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'abilityId',    ),    2 =>     array (      0 => 'text',      1 => '/abilities',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_activity_remove_competency' => array (  0 =>   array (    0 => 'id',    1 => 'competencyId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::removeCompetencyLinkAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'competencyId',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/activities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_activities' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::competencyActivitiesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/activities/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_ability_activities' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ActivityController::abilityActivitiesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/activities/abilities',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_pick_framework' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\PickerController::frameworksAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/picker/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_pick_competency' => array (  0 =>   array (    0 => 'id',    1 => 'loadAbilities',  ),  1 =>   array (    'loadAbilities' => 1,    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\PickerController::competenciesAction',  ),  2 =>   array (    'loadAbilities' => '[01]',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[01]',      3 => 'loadAbilities',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/picker/framework',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_pick_level' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\PickerController::levelsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/levels',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/picker/framework',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_suggest_user' => array (  0 =>   array (    0 => 'query',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\PickerController::suggestUserAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'query',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/picker/users/suggest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_suggest_group' => array (  0 =>   array (    0 => 'query',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\PickerController::suggestGroupAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'query',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/picker/groups/suggest',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competencies_widget' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\WidgetController::objectivesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives-widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objectives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::objectivesAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_new_objective' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::newObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_create_objective' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::createObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_objective' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::deleteObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objective_edit_form' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::objectiveEditionFormAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_objective' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::editObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objective_link_competency' => array (  0 =>   array (    0 => 'id',    1 => 'competencyId',    2 => 'levelId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::linkCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    'competencyId' => '\\d+',    'levelId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'levelId',    ),    1 =>     array (      0 => 'text',      1 => '/levels',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'competencyId',    ),    3 =>     array (      0 => 'text',      1 => '/competencies',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    5 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_objective_association' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::deleteCompetencyLinkAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives/link',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_load_objective_competencies' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::objectiveCompetenciesAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_load_user_objective_competencies' => array (  0 =>   array (    0 => 'id',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::userObjectiveCompetenciesAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'text',      1 => '/users',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objectives_users' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::usersAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objective_users' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::objectiveUsersAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objective_group_users' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::groupUsersAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/users',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objectives_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::groupsAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/objectives/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objective_groups' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::objectiveGroupsAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/groups',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objectives_assign_to_user' => array (  0 =>   array (    0 => 'objectiveId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::assignObjectiveToUserAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/users',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'objectiveId',    ),    3 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_objectives_assign_to_group' => array (  0 =>   array (    0 => 'objectiveId',    1 => 'groupId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::assignObjectiveToGroupAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'groupId',    ),    1 =>     array (      0 => 'text',      1 => '/groups',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'objectiveId',    ),    3 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_user_objectives' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::loadUserObjectivesAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/objectives/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_remove_user_objective' => array (  0 =>   array (    0 => 'objectiveId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::removeUserObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'text',      1 => '/users',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'objectiveId',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_remove_group_objective' => array (  0 =>   array (    0 => 'objectiveId',    1 => 'groupId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::removeGroupObjectiveAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/remove',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'groupId',    ),    2 =>     array (      0 => 'text',      1 => '/groups',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'objectiveId',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_group_objectives' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::loadGroupObjectivesAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/objectives/groups',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_user_history' => array (  0 =>   array (    0 => 'userId',    1 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ObjectiveController::competencyUserHistoryAction',  ),  2 =>   array (    'id' => '\\d+',    'userId' => '\\d+',    'groupId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/history',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    4 =>     array (      0 => 'text',      1 => '/competencies/objectives/users',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_my_objectives_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\MyObjectiveController::objectivesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/my-objectives/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_load_my_objective_competencies' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\MyObjectiveController::userObjectiveCompetenciesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/my-objectives',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_my_history' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\MyObjectiveController::competencyUserHistoryAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/history',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/my-objectives/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_frameworks' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::frameworksAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_new_framework' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::newFrameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/frameworks/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_create_framework' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::createFrameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_import_framework_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::importFrameworkFormAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/frameworks/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_import_framework' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::importFrameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/frameworks/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_export_framework' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::exportFrameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_framework' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::frameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_framework_activities' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::activitiesAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/activities',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_framework_form' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::frameworkEditionFormAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_framework' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::editFrameworkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_competency' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::deleteCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_new_competency' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::newSubCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sub',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_create_competency' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::createSubCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/sub',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::competencyAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_competency' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::editCompetencyAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_new_ability' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::newAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ability/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_create_ability' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::createAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ability',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_ability' => array (  0 =>   array (    0 => 'id',    1 => 'abilityId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::deleteAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'abilityId',    ),    2 =>     array (      0 => 'text',      1 => '/ability',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_ability' => array (  0 =>   array (    0 => 'id',    1 => 'abilityId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::abilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'abilityId',    ),    1 =>     array (      0 => 'text',      1 => '/ability',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_ability' => array (  0 =>   array (    0 => 'id',    1 => 'abilityId',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::editAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'abilityId',    ),    1 =>     array (      0 => 'text',      1 => '/ability',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_add_ability_form' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::addAbilityFormAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ability/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_add_ability' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::addAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/ability/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_suggest_ability' => array (  0 =>   array (    0 => 'id',    1 => 'query',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\CompetencyController::suggestAbilityAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'query',    ),    1 =>     array (      0 => 'text',      1 => '/ability/suggest',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/competencies',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_new_scale' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::newScaleAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/scales/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_create_scale' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::createScaleAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/scales/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_scales' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::scalesAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/competencies/scales/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_scale' => array (  0 =>   array (    0 => 'id',    1 => 'edit',  ),  1 =>   array (    'edit' => 0,    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::scaleAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/competencies/scales',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_edit_scale' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'edit' => 0,    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::editScaleAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/scales',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_delete_scale' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ScaleController::deleteScaleAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/competencies/scales/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_api_frameworks' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ApiController::frameworksAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_api_framework' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ApiController::frameworkAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_competency_api_createframework' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HeVinci\\CompetencyBundle\\Controller\\ApiController::createFrameworkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/competencies/frameworks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hevinci_url_change' => array (  0 =>   array (    0 => 'node',  ),  1 =>   array (    '_controller' => 'HeVinci\\UrlBundle\\Controller\\UrlController::changeUrlAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'node',    ),    1 =>     array (      0 => 'text',      1 => '/hevinciurlbundle/change',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_analytics_views' => array (  0 =>   array (    0 => 'id',    1 => 'startDate',    2 => 'endDate',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\AnalyticsController::getViewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'endDate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'startDate',    ),    2 =>     array (      0 => 'text',      1 => '/views',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/internal/portfolio/analytics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_comments_get' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\CommentController::getAllAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_comment_post' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\CommentController::postAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolios' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioController::getAllAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioController::getAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_put' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioController::putAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_put_comments' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioController::putCommentsAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/portfolio/comments',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_widget_get' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioWidgetController::getAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_widget_post' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioWidgetController::postAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_widget_put' => array (  0 =>   array (    0 => 'id',    1 => 'type',    2 => 'portfolioWidgetId',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioWidgetController::putAction',  ),  2 =>   array (    'id' => '\\d+',    'portfolioWidgetId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'portfolioWidgetId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_portfolio_widget_delete' => array (  0 =>   array (    0 => 'id',    1 => 'type',    2 => 'portfolioWidgetId',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\PortfolioWidgetController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',    'portfolioWidgetId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'portfolioWidgetId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/internal/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_widget_get' => array (  0 =>   array (    0 => 'type',    1 => 'action',  ),  1 =>   array (    'action' => 'empty',    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\WidgetController::getAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'action',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_widget' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\WidgetController::getAllAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/internal/portfolio/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_widget_delete' => array (  0 =>   array (    0 => 'type',    1 => 'widgetId',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\WidgetController::deleteAction',  ),  2 =>   array (    'widgetId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'widgetId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_widget_post' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\WidgetController::postAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/internal/portfolio/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_internal_widget_put' => array (  0 =>   array (    0 => 'type',    1 => 'widgetId',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\Internal\\WidgetController::putAction',  ),  2 =>   array (    'widgetId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'widgetId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    2 =>     array (      0 => 'text',      1 => '/internal/portfolio/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_index' => array (  0 =>   array (    0 => 'page',    1 => 'guidedPage',    2 => 'portfolioSlug',  ),  1 =>   array (    'page' => 1,    'guidedPage' => 1,    'portfolioSlug' => NULL,    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::indexAction',  ),  2 =>   array (    'page' => '\\d+',    'guidedPage' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'portfolioSlug',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'guidedPage',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/portfolio/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_rename' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::renameAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/rename',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::deleteAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_update_visibility' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::updateVisibilityAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/visibility',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_update_guides' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::manageGuidesAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/guides',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_export' => array (  0 =>   array (    0 => 'portfolioSlug',    1 => 'format',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'portfolioSlug',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_import' => array (  0 =>   array (    0 => 'format',  ),  1 =>   array (    'format' => NULL,    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::importFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_import_preview' => array (  0 =>   array (    0 => 'format',    1 => 'previewId',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::importPreviewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'previewId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'format',    ),    2 =>     array (      0 => 'text',      1 => '/portfolio/import',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_portfolio_view' => array (  0 =>   array (    0 => 'portfolioSlug',  ),  1 =>   array (    '_controller' => 'Icap\\PortfolioBundle\\Controller\\PortfolioController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'portfolioSlug',    ),    1 =>     array (      0 => 'text',      1 => '/portfolio',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges' => array (  0 =>   array (    0 => 'badgePage',    1 => 'claimPage',    2 => 'userPage',  ),  1 =>   array (    'badgePage' => 1,    'claimPage' => 1,    'userPage' => 1,    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::listAction',  ),  2 =>   array (    'badgePage' => '\\d+',    'userPage' => '\\d+',    'claimPage' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'claimPage',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'badgePage',    ),    3 =>     array (      0 => 'text',      1 => '/admin/badges',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_add' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/badges/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_edit' => array (  0 =>   array (    0 => 'slug',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/admin/badges/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_delete' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/admin/badges/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_award' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::awardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/admin/badges/award',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_unaward' => array (  0 =>   array (    0 => 'slug',    1 => 'username',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::unawardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/admin/badges/unaward',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_manage_claim' => array (  0 =>   array (    0 => 'id',    1 => 'validate',  ),  1 =>   array (    'validate' => false,    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::manageClaimAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'validate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/admin/badges/claim/manage',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_statistics' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::statisticsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/badges/statistics',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_admin_badges_recalculate' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::recalculateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/admin/badges/recalculate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_export_csv' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\AdministrationController::exportCSVAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/badges/export',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_api_badge_all' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'icap_badge.api.badge:allAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/badges/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_api_badge_get' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'icap_badge.api.badge:getAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/badges',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_picker' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\BadgeController::badgePickerAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/badges',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_share_view' => array (  0 =>   array (    0 => 'username',    1 => 'badgeSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\BadgeController::shareViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'badgeSlug',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    2 =>     array (      0 => 'text',      1 => '/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_collection_share_view' => array (  0 =>   array (    0 => 'slug',    1 => 'locale',  ),  1 =>   array (    'locale' => 'fr',    '_controller' => 'Icap\\BadgeBundle\\Controller\\CollectionController::shareViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'locale',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/badge/collection',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_view_badge' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\FrontController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_collection_add' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Icap\\BadgeBundle\\Controller\\Internal\\CollectionController::addAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/internal/badge_collection/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_collection_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Icap\\BadgeBundle\\Controller\\Internal\\CollectionController::editAction',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/badge_collection',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_collection_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Icap\\BadgeBundle\\Controller\\Internal\\CollectionController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/badge_collection',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_user_badge_edit' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'id' => NULL,    '_format' => 'json',    '_controller' => 'Icap\\BadgeBundle\\Controller\\Internal\\UserBadgeController::editAction',  ),  2 =>   array (    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/internal/user_badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_claim_badge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\ProfileController::claimAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/badge/claim',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_profile_view_badge' => array (  0 =>   array (    0 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\ProfileController::badgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/profile/badge',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_profile_view_badges' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\ProfileController::badgesAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/badge/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_my_badges' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'badgePage',  ),  1 =>   array (    'badgePage' => 1,    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\MyWorkspaceController::listAction',  ),  2 =>   array (    'badgePage' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'badgePage',    ),    1 =>     array (      0 => 'text',      1 => '/my_badges',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_claim_badge' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'badge_id',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\MyWorkspaceController::claimAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'badge_id',    ),    1 =>     array (      0 => 'text',      1 => '/my_badges/claim',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_view_my_badge' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\MyWorkspaceController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/my_badge',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'badgePage',    2 => 'claimPage',    3 => 'userPage',  ),  1 =>   array (    'badgePage' => 1,    'claimPage' => 1,    'userPage' => 1,    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::listAction',  ),  2 =>   array (    'badgePage' => '\\d+',    'claimPage' => '\\d+',    'userPage' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'claimPage',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'badgePage',    ),    3 =>     array (      0 => 'text',      1 => '/badges',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    5 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_add' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::addAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/badges/add',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_edit' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'slug',    2 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    2 =>     array (      0 => 'text',      1 => '/badges/edit',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    4 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_delete' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::deleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/badges/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_award' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::awardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/badges/award',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_unaward' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'id',    2 => 'username',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::unawardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/badges/unaward',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    4 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_manage_claim' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'id',    2 => 'validate',  ),  1 =>   array (    'validate' => false,    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::manageClaimAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'validate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/badges/claim/manage',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    4 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_statistics' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::statisticsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/badges/statistics',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_tool_badges_recalculate' => array (  0 =>   array (    0 => 'workspaceId',    1 => 'slug',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::recalculateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'slug',    ),    1 =>     array (      0 => 'text',      1 => '/badges/recalculate',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    3 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_workspace_export_csv' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Tool\\WorkspaceController::exportCSVAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/badges/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/workspace',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_badge_badge_usage_update_config' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Icap\\BadgeBundle\\Controller\\Widget\\BadgeController::updateAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/widget/badge/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblog' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogoptions' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogOptionsAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblogoptions' => array (  0 =>   array (  ),  1 =>   array (    'options' => NULL,    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogOptionsAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogtags' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogTagsAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogauthors' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAuthorsAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogarchives' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogArchivesAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogpost' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostAction',  ),  2 =>   array (    'blog' => '\\d+',    'postId' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostsAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogtagsposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogTagsPostsAction',  ),  2 =>   array (    'blog' => '\\d+',    'tagId' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogauthorsposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAuthorsPostsAction',  ),  2 =>   array (    'blog' => '\\d+',    'author' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogdaysposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogDaysPostsAction',  ),  2 =>   array (    'blog' => '\\d+',    'day' => '\\d{2}-\\d{2}-\\d{4}',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogmonthsposts' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogMonthsPostsAction',  ),  2 =>   array (    'blog' => '\\d+',    'month' => '\\d{2}-\\d{4}',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_postblogpost' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogPostAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblogpost' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblogpostvisibility' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostVisibilityAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_deleteblogpost' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogPostAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogposttags' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostTagsAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogpostcomments' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostCommentsAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_postblogpostcomment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogPostCommentAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblogpostcomment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostCommentAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_deleteblogpostcomment' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogPostCommentAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    'comment' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_putblogpostcommentvisibility' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostCommentVisibilityAction',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    'comment' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_postblogbanner' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogBannerAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_deleteblogbanners' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogBannersAction',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getblogsearch' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogSearchAction',  ),  2 =>   array (    'blog' => '\\d+',    'search' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_api_getarchivedata' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getArchiveData',  ),  2 =>   array (    'blog' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_blog/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_view' => array (  0 =>   array (    0 => 'blogId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    'filter' => NULL,    '_controller' => 'Icap\\BlogBundle\\Controller\\BlogController::viewAction',  ),  2 =>   array (    'blogId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_view_filter' => array (  0 =>   array (    0 => 'blogId',    1 => 'filter',    2 => 'page',  ),  1 =>   array (    'page' => 1,    'filter' => NULL,    '_controller' => 'Icap\\BlogBundle\\Controller\\BlogController::viewAction',  ),  2 =>   array (    'blogId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'filter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_view_pdf' => array (  0 =>   array (    0 => 'blogId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\BlogController::viewPdfAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_blog/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_rss' => array (  0 =>   array (    0 => 'blogId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\BlogController::rssAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_blog/rss',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_calendar_datas' => array (  0 =>   array (    0 => 'blogId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\BlogController::calendarDatas',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_blog/calendar',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_comment_delete' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',    2 => 'commentId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\CommentController::deleteAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    1 =>     array (      0 => 'text',      1 => '/comment/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_comment_publish' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',    2 => 'commentId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\CommentController::publishAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    1 =>     array (      0 => 'text',      1 => '/comment/publish',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_comment_unpublish' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',    2 => 'commentId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\CommentController::unpublishAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    1 =>     array (      0 => 'text',      1 => '/comment/unpublish',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_comment_edit' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',    2 => 'commentId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\CommentController::editAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'commentId',    ),    1 =>     array (      0 => 'text',      1 => '/comment/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_view' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::viewAction',  ),  2 =>   array (    'id' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    1 =>     array (      0 => 'text',      1 => '/post/view',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_new' => array (  0 =>   array (    0 => 'blogId',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::newAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/post/new',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_edit' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::editAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    1 =>     array (      0 => 'text',      1 => '/post/edit',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_delete' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::deleteAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    1 =>     array (      0 => 'text',      1 => '/post/delete',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_publish' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::publishAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    1 =>     array (      0 => 'text',      1 => '/post/publish',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_post_unpublish' => array (  0 =>   array (    0 => 'blogId',    1 => 'postSlug',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\PostController::unpublishAction',  ),  2 =>   array (    'blogId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'postSlug',    ),    1 =>     array (      0 => 'text',      1 => '/post/unpublish',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blogId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_widget_list_configure' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\WidgetController::updateWidgetBlogList',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog/icap_blog/widget/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_widget_blog_configure' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\WidgetController::updateWidgetBlog',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog/icap_blog/widget/blog',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_widget_tag_list_blog_configure' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\WidgetController::updateWidgetTagListBlog',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog/icap_blog/widget/tags',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_order_panels' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::orderPanelsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/order',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/panels',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    2 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_options' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogOptionsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/options',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog_options' => array (  0 =>   array (    0 => 'blog',    1 => 'options',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogOptionsAction',    'options' => NULL,    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'options',    ),    2 =>     array (      0 => 'text',      1 => '/options',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_tags' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogTagsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_authors' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAuthorsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/authors',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_archives' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogArchivesAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/archives',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_post' => array (  0 =>   array (    0 => 'blog',    1 => 'postId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'postId' => '.+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'postId',    ),    2 =>     array (      0 => 'text',      1 => '/posts',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_posts' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_tags_posts' => array (  0 =>   array (    0 => 'blog',    1 => 'tagId',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogTagsPostsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'tagId' => '.+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'tagId',    ),    3 =>     array (      0 => 'text',      1 => '/tags',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_authors_posts' => array (  0 =>   array (    0 => 'blog',    1 => 'author',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogAuthorsPostsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'author' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'author',    ),    3 =>     array (      0 => 'text',      1 => '/authors',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_days_posts' => array (  0 =>   array (    0 => 'blog',    1 => 'day',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogDaysPostsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'day' => '\\d{2}-\\d{2}-\\d{4}',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d{2}-\\d{2}-\\d{4}',      3 => 'day',    ),    3 =>     array (      0 => 'text',      1 => '/days',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_months_posts' => array (  0 =>   array (    0 => 'blog',    1 => 'month',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogMonthsPostsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'month' => '\\d{2}-\\d{4}',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d{2}-\\d{4}',      3 => 'month',    ),    3 =>     array (      0 => 'text',      1 => '/months',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_post_blog_post' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogPostAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/posts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog_post' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'post',    ),    2 =>     array (      0 => 'text',      1 => '/posts',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog_post_visibility' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostVisibilityAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/visibility',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    3 =>     array (      0 => 'text',      1 => '/posts',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_delete_blog_post' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogPostAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'post',    ),    2 =>     array (      0 => 'text',      1 => '/posts',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_post_tags' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostTagsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/tags',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    3 =>     array (      0 => 'text',      1 => '/posts',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_post_comments' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogPostCommentsAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    3 =>     array (      0 => 'text',      1 => '/posts',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_post_blog_post_comment' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogPostCommentAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/comments',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    3 =>     array (      0 => 'text',      1 => '/posts',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    5 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog_post_comment' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => 'comment',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostCommentAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    4 =>     array (      0 => 'text',      1 => '/posts',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    6 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_delete_blog_post_comment' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => 'comment',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogPostCommentAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    'comment' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/comments',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    4 =>     array (      0 => 'text',      1 => '/posts',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    6 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_put_blog_post_comment_visibility' => array (  0 =>   array (    0 => 'blog',    1 => 'post',    2 => 'comment',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::putBlogPostCommentVisibilityAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'post' => '\\d+',    'comment' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/visibility',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'comment',    ),    3 =>     array (      0 => 'text',      1 => '/comments',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'post',    ),    5 =>     array (      0 => 'text',      1 => '/posts',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    7 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_post_blog_banner' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::postBlogBannerAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/banners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_delete_blog_banners' => array (  0 =>   array (    0 => 'blog',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::deleteBlogBannersAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/banners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    3 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_blog_api_get_blog_search' => array (  0 =>   array (    0 => 'blog',    1 => 'search',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\BlogBundle\\Controller\\API\\ApiController::getBlogSearchAction',    '_format' => 'json',  ),  2 =>   array (    'blog' => '\\d+',    'search' => '.+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'search',    ),    2 =>     array (      0 => 'text',      1 => '/searches',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'blog',    ),    4 =>     array (      0 => 'text',      1 => '/icap_blog/api/blogs',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_correct' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::correctAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/correct',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_correct_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::correctAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/correct',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_correct_comment' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::correctCommentAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/correct/comment',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction_standard' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'backUserId',  ),  1 =>   array (    'backUserId' => '-1',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::dropsDetailCorrectionStandardAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit',    'backUserId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'backUserId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit',      3 => 'state',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail/correction/standard',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::dropsDetailCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',    3 => 'page',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::dropsDetailCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'page' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    3 =>     array (      0 => 'text',      1 => '/drops/detail/correction',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction_comment' => array (  0 =>   array (    0 => 'resourceId',    1 => 'state',    2 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::dropsDetailCorrectionCommentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'state' => 'show|edit|preview',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'show|edit|preview',      3 => 'state',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/comment',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_add_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::dropsDetailAddCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/add/correction',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_delete_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',    2 => 'backPage',  ),  1 =>   array (    'backPage' => 'default',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::deleteCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'backPage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'text',      1 => '/delete/correction',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_revalidateCorrection' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',    2 => 'value',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    'value' => 'yes',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::RevalidateCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'value',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'correctionId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation/confirmation',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction_validation' => array (  0 =>   array (    0 => 'resourceId',    1 => 'value',    2 => 'correctionId',  ),  1 =>   array (    'routeParam' => 'default',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::setCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'value' => 'no|yes',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'no|yes',      3 => 'value',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_correction_validation_by_user' => array (  0 =>   array (    0 => 'resourceId',    1 => 'value',    2 => 'correctionId',  ),  1 =>   array (    'routeParam' => 'byUser',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::setCorrectionValidationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',    'value' => 'no|yes',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'no|yes',      3 => 'value',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail/correction/validation/byUser',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail_invalidate_all_corrections' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::invalidateAllCorrectionsAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/invalidate_all',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_deny_correction' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::denyCorrectionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/drops/detail/correction/deny',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_recalculate_score' => array (  0 =>   array (    0 => 'resourceId',    1 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::recalculateScoreAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/recalculate/score',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_examiner_corrections' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::correctionsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/examiners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_examiner_corrections_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',    2 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::correctionsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    2 =>     array (      0 => 'text',      1 => '/examiners',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_examiners' => array (  0 =>   array (    0 => 'resourceId',    1 => 'withDropOnly',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::ExaminersByCorrectionMadeAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '(withDropOnly|all|withoutDrops)',      3 => 'withDropOnly',    ),    1 =>     array (      0 => 'text',      1 => '/examiners',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_examiners_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'withDropOnly',    2 => 'page',  ),  1 =>   array (    'page' => 1,    'withDropOnly' => 'all',    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::ExaminersByCorrectionMadeAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'withDropOnly' => '(withDropOnly|all|withoutDrops)',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '(withDropOnly|all|withoutDrops)',      3 => 'withDropOnly',    ),    2 =>     array (      0 => 'text',      1 => '/examiners',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_recalculate_drop_grade' => array (  0 =>   array (    0 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::recalculateScoreByDropAction',  ),  2 =>   array (    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/recalculateDropGrade',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_recalculate_dropzone_grades' => array (  0 =>   array (    0 => 'dropzone',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CorrectionController::recalculateScoreByDropzoneAction',  ),  2 =>   array (    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/recalculateDropzoneGrades',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dropzone',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_add_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',  ),  1 =>   array (    'criterionId' => 0,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CriterionController::editAddCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/edit/addcriterion',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_create_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',  ),  1 =>   array (    'criterionId' => 0,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CriterionController::editCreateCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/edit/createcriterion',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_delete_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',    3 => 'number',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CriterionController::editDeleteCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',    'number' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'number',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    3 =>     array (      0 => 'text',      1 => '/edit/deletecriterion',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_remove_criterion' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',    2 => 'criterionId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\CriterionController::editRemoveCriterionAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'criterionId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'criterionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/edit/removecriterion',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_document' => array (  0 =>   array (    0 => 'resourceId',    1 => 'documentType',    2 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DocumentController::documentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'documentType' => 'url|file|resource|text',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => 'url|file|resource|text',      3 => 'documentType',    ),    2 =>     array (      0 => 'text',      1 => '/document',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_delete_document' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'documentId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DocumentController::deleteDocumentAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    2 =>     array (      0 => 'text',      1 => '/delete/document',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    4 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_open_resource' => array (  0 =>   array (    0 => 'resourceId',    1 => 'documentId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DocumentController::openResourceAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'documentId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'documentId',    ),    1 =>     array (      0 => 'text',      1 => '/open/resource',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drop' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drop',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_user' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/user',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_user_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByUserAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_unlock_user' => array (  0 =>   array (    0 => 'resourceId',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::unlockUser',  ),  2 =>   array (    'resourceId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/unlock',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_unlock_all_user' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::unlockUsers',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unlock/all',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_unlock_cancel' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::unlockUsersCancel',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unlock/cancel',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_default' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/default',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_default_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByDefaultAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/default',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_report' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/report',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_report_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/report',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_date' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByDateAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/by/date',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_by_date_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsByDateAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/by/date',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_awaiting' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsAwaitingAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/awaiting',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_awaiting_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsAwaitingAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/awaiting',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_unfinished' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsUnfinishedAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/drops/unfinished',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_unfinished_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsUnfinishedAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/drops/unfinished',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_delete' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'tab',    3 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsDeleteAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'tab' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'tab',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/drops/delete',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drops_detail' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropsDetailAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/drops/detail',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_drop_detail_by_user' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::dropDetailAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/drop/detail',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_unlock_drop' => array (  0 =>   array (    0 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::unlockDropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/icapdropzonebundle/unlock/drop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_report_drop' => array (  0 =>   array (    0 => 'correctionId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::reportDropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'correctionId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    1 =>     array (      0 => 'text',      1 => '/icapdropzonebundle/report/drop',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_remove_report' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'correctionId',    3 => 'invalidate',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::removeReportAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'correctionId' => '\\d+',    'invalidate' => '0|1',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '0|1',      3 => 'invalidate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'correctionId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/remove/report',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_auto_close_drops_confirmation' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::autoCloseDropsConfirmationAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/autoclosedrops/confirm',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_auto_close_drops' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::autoCloseDropsAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/autoclosedrops',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_close_drop' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::closeDropAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    1 =>     array (      0 => 'text',      1 => '/close',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_remind_drop' => array (  0 =>   array (    0 => 'resourceId',    1 => 'dropId',    2 => 'userId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropController::sendReminderAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'dropId' => '\\d+',    'userId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'dropId',    ),    3 =>     array (      0 => 'text',      1 => '/remind',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    5 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::editCommonAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_common' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::editCommonAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/common',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_criteria' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::editCriteriaAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/criteria',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_edit_criteria_paginated' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => 1,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::editCriteriaAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'page' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/edit/criteria',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    3 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_open' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::openAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_download_copies_by_date' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::downloadCopiesBetweenDatesAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/download/byDates',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_dropzone_download_copies' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'beginDate' => NULL,    'endDate' => NULL,    '_controller' => 'Icap\\DropzoneBundle\\Controller\\DropzoneController::donwloadCopiesAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/download',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icapdropzonebundle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_comments_view' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\CommentActionController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/comments/resource',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_comment_form' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\CommentActionController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/comment/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_comment' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\CommentActionController::commentAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_commentlist' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => '1',    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\CommentActionController::commentListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_socialmedia/comment/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_comment_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\CommentActionController::deleteWallItemAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/comment/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_like_form' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\LikeActionController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/like/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_like' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\LikeActionController::likeAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_socialmedia/like',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_unlike' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\LikeActionController::unlikeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_socialmedia/unlike',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_likelist' => array (  0 =>   array (    0 => 'page',  ),  1 =>   array (    'page' => '1',    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\LikeActionController::likeListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/like/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_note_form' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\NoteActionController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/note/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_note' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\NoteActionController::noteAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/note',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_notelist' => array (  0 =>   array (    0 => 'resourceId',    1 => 'page',  ),  1 =>   array (    'page' => '1',    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\NoteActionController::noteListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_socialmedia/note/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_note_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\NoteActionController::deleteWallItemAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/note/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_share_form' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\ShareActionController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/share/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_share' => array (  0 =>   array (  ),  1 =>   array (    'user' => NULL,    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\ShareActionController::shareAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_socialmedia/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_wall_view' => array (  0 =>   array (    0 => 'publicUrl',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\WallController::viewAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'publicUrl',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/wall',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_walllist' => array (  0 =>   array (    0 => 'page',    1 => 'userId',  ),  1 =>   array (    'page' => '1',    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\WallController::itemListAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    2 =>     array (      0 => 'text',      1 => '/icap_socialmedia/wall/list',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_socialmedia_wall_item_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Icap\\SocialmediaBundle\\Controller\\WallController::deleteWallItemAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/icap_socialmedia/wall/item',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_patchwiki' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiAction',  ),  2 =>   array (    'wiki' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_patchwikisection' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiSectionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_putwikisection' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::putWikiSectionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_deletewikisection' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::deleteWikiSectionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_move_wiki_section' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::moveWikiSectionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    1 =>     array (      0 => 'text',      1 => '/sections',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    3 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_getwikisectioncontribution' => array (  0 =>   array (  ),  1 =>   array (    'contribution' => 'null',    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::getWikiSectionContributionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    'contribution' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_postwikisectioncontribution' => array (  0 =>   array (  ),  1 =>   array (    'section' => NULL,    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::postWikiSectionContributionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_api_patchwikisectioncontribution' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiSectionContributionAction',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    'contribution' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_wiki/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_get_wiki_section_contribution_diff' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => 'oldContributionId',    3 => 'newContributionId',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::getWikiSectionContributionDiff',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    'oldContributionId' => '\\d+',    'newContribution  ' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'newContributionId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'oldContributionId',    ),    2 =>     array (      0 => 'text',      1 => '/contributions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    4 =>     array (      0 => 'text',      1 => '/sections',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    6 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_view' => array (  0 =>   array (    0 => 'wikiId',    1 => '_format',  ),  1 =>   array (    '_format' => 'html',    '_controller' => 'Icap\\WikiBundle\\Controller\\WikiController::viewAction',  ),  2 =>   array (    'wikiId' => '\\d+',    '_format' => 'html|pdf',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'html|pdf',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wikiId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_wiki',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_move_wiki_sectionicap_wiki_api_move_wiki_section' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::moveWikiSectionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    2 =>     array (      0 => 'text',      1 => '/sections',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    4 =>     array (      0 => 'text',      1 => '/icap_wiki/api/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_patch_wiki' => array (  0 =>   array (    0 => 'wiki',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    2 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_patch_wiki_section' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiSectionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    2 =>     array (      0 => 'text',      1 => '/sections',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    4 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_put_wiki_section' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::putWikiSectionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    2 =>     array (      0 => 'text',      1 => '/sections',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    4 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_delete_wiki_section' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::deleteWikiSectionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    2 =>     array (      0 => 'text',      1 => '/sections',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    4 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_get_wiki_section_contribution' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => 'contribution',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::getWikiSectionContributionAction',    'contribution' => 'null',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    'contribution' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'contribution',    ),    2 =>     array (      0 => 'text',      1 => '/contributions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    4 =>     array (      0 => 'text',      1 => '/sections',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    6 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_post_wiki_section_contribution' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::postWikiSectionContributionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/contributions',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    3 =>     array (      0 => 'text',      1 => '/sections',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    5 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_wiki_api_patch_wiki_section_contribution' => array (  0 =>   array (    0 => 'wiki',    1 => 'section',    2 => 'contribution',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\WikiBundle\\Controller\\API\\ApiController::patchWikiSectionContributionAction',    '_format' => 'json',  ),  2 =>   array (    'wiki' => '\\d+',    'section' => '\\d+',    'contribution' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'contribution',    ),    2 =>     array (      0 => 'text',      1 => '/contributions',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'section',    ),    4 =>     array (      0 => 'text',      1 => '/sections',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'wiki',    ),    6 =>     array (      0 => 'text',      1 => '/icap_wiki/api/wikis',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_form' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\OauthController::formAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/admin/parameters/oauth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_admin_oauth_form_submit' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\OauthController::submitFormAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/submit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    2 =>     array (      0 => 'text',      1 => '/admin/parameters/oauth',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_check_connexion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::checkConnexionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/check_connection',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/register',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_create_account' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::createAccountAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/create_account',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_link_account' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::linkAccountAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/link_account',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_oauth_link_account_mail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Icap\\OAuthBundle\\Controller\\ConnexionController::linkAccountByMailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/icap_oauth/link_account_mail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::connectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect_service' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::connectServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/connect/service',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_connect_registration' => array (  0 =>   array (    0 => 'key',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::registrationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'key',    ),    1 =>     array (      0 => 'text',      1 => '/connect/registration',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'hwi_oauth_service_redirect' => array (  0 =>   array (    0 => 'service',  ),  1 =>   array (    '_controller' => 'HWI\\Bundle\\OAuthBundle\\Controller\\ConnectController::redirectToServiceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'service',    ),    1 =>     array (      0 => 'text',      1 => '/connect',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'facebook_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-facebook',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'twitter_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-twitter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'google_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-google',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'linkedin_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-linkedin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'windows_live_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-windows',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'office_365_login' => array (  0 =>   array (  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login/check-o365',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_open_result' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Claroline\\ResultBundle\\Controller\\ResultController::resultAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/results',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_create_mark' => array (  0 =>   array (    0 => 'id',    1 => 'userId',  ),  1 =>   array (    '_controller' => 'Claroline\\ResultBundle\\Controller\\ResultController::createMarkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'userId',    ),    1 =>     array (      0 => 'text',      1 => '/users',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/results',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_delete_mark' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Claroline\\ResultBundle\\Controller\\ResultController::deleteMarkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/results/marks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_edit_mark' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'Claroline\\ResultBundle\\Controller\\ResultController::editMarkAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/results/marks',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_import_marks' => array (  0 =>   array (    0 => 'id',    1 => 'type',  ),  1 =>   array (    'type' => 'fullname',    '_controller' => 'Claroline\\ResultBundle\\Controller\\ResultController::importAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/marks/import',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    3 =>     array (      0 => 'text',      1 => '/results',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_manage_results' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.manageresults:displayStepUnlockAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/manage/userpath',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_publish' => array (  0 =>   array (    0 => 'id',    1 => 'redirect',  ),  1 =>   array (    'redirect' => false,    '_controller' => 'innova_path.controller.path:publishAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET|PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'redirect',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/innova_path/publish',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_template_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_template:indexAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/template',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_template_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_template:addAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/template/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_template_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_template:editAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/template',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_template_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_template:deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/template/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_groups' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:listGroupsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/condition/group',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_user_groups' => array (  0 =>   array (  ),  1 =>   array (    'user' => NULL,    '_controller' => 'innova_path.controller.step_condition:listUserGroupsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/condition/group/current_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_activity_statuses' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:listActivityStatusesAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/condition/activity/statuses',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_evaluation' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:getActivityEvaluation',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/condition/activity/evaluation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_user_teams' => array (  0 =>   array (  ),  1 =>   array (    'user' => NULL,    '_controller' => 'innova_path.controller.step_condition:listUserTeamsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/innova_path/condition/team/current_user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_criteria_teams' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:listTeamsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/condition/team',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_step_callforunlock' => array (  0 =>   array (    0 => 'step',  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:callForUnlock',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'step',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/condition/stepunlock',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_unlock_step' => array (  0 =>   array (    0 => 'step',    1 => 'user',  ),  1 =>   array (    '_controller' => 'innova_path.controller.step_condition:unlockStep',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    1 =>     array (      0 => 'text',      1 => '/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'step',    ),    3 =>     array (      0 => 'text',      1 => '/innova_path/conditionunlockstep',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_progression_create' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.user_progression:createAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/progression',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/innova_path/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_progression_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.user_progression:updateAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/progression',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/innova_path/step',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_widget_config' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_widget:updateConfigAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_editor_wizard' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_editor:displayAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/editor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_editor_wizard_save' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_editor:saveAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/editor',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_load_activity' => array (  0 =>   array (    0 => 'nodeId',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_editor:loadActivityAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'nodeId',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/editor/load_activity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_show_activity' => array (  0 =>   array (    0 => 'activityId',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_editor:showActivityAction',  ),  2 =>   array (    'id' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'activityId',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/editor/show_activity',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'innova_path_player_wizard' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'innova_path.controller.path_player:displayAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/innova_path/player',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_view' => array (  0 =>   array (    0 => 'websiteId',  ),  1 =>   array (    'view' => false,    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsiteController::viewAction',  ),  2 =>   array (    'websiteId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_force_view' => array (  0 =>   array (    0 => 'websiteId',  ),  1 =>   array (    'view' => true,    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsiteController::viewAction',  ),  2 =>   array (    'websiteId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_website/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_options_update' => array (  0 =>   array (    0 => 'websiteId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsiteOptionsController::putAction',  ),  2 =>   array (    'websiteId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/options',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_options_image_upload' => array (  0 =>   array (    0 => 'websiteId',    1 => 'imageStr',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsiteOptionsController::uploadImageFileAction',  ),  2 =>   array (    'websiteId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'imageStr',    ),    1 =>     array (      0 => 'text',      1 => '/options/upload',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_options_image_update' => array (  0 =>   array (    0 => 'websiteId',    1 => 'imageStr',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsiteOptionsController::updateImagePathAction',  ),  2 =>   array (    'websiteId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'imageStr',    ),    1 =>     array (      0 => 'text',      1 => '/options/update-image',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_view' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::viewAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_get' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::getAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_post' => array (  0 =>   array (    0 => 'websiteId',    1 => 'parentPageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::postAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'parentPageId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'parentPageId',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_put' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::putAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_set_homepage' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::setHomepageAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/setHomepage',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    2 =>     array (      0 => 'text',      1 => '/page',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    4 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_move' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',    2 => 'newParentId',    3 => 'previousSiblingId',  ),  1 =>   array (    'previousSiblingId' => 0,    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::moveAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    'newParentId' => '\\d+',    'previousSiblingId' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'previousSiblingId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'newParentId',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    3 =>     array (      0 => 'text',      1 => '/page',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    5 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_website_page_delete' => array (  0 =>   array (    0 => 'websiteId',    1 => 'pageId',  ),  1 =>   array (    '_controller' => 'Icap\\WebsiteBundle\\Controller\\WebsitePageController::deleteAction',  ),  2 =>   array (    'websiteId' => '\\d+',    'pageId' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'pageId',    ),    1 =>     array (      0 => 'text',      1 => '/page',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'websiteId',    ),    3 =>     array (      0 => 'text',      1 => '/icap_website',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_open_flashcard' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\DeckController::deckAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_get_all_themes' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\DeckController::getAllThemesAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/flashcards/deck/get_all_themes',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_edit_default_param' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\DeckController::editDefaultParamAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/deck/edit/default_param',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_edit_user_param' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\DeckController::editUserParamAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/deck/edit/user_param',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_get_user_pref' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\DeckController::getUserPreference',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/get_user_pref',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    2 =>     array (      0 => 'text',      1 => '/flashcards/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_edit_note_type' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteTypeController::editNoteTypeAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/flashcards/note_type/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_get_note_type' => array (  0 =>   array (    0 => 'noteTypeId',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteTypeController::findNoteTypeAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'noteTypeId',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/note_type/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_getall_note_type' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteTypeController::allNoteTypesAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/flashcards/note_type/all',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_create_note' => array (  0 =>   array (    0 => 'deck',    1 => 'noteType',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteController::createNoteAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'noteType',    ),    1 =>     array (      0 => 'text',      1 => '/note_type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    3 =>     array (      0 => 'text',      1 => '/flashcards/note/create/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_edit_note' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteController::editNoteAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/note/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_get_note' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteController::findNoteAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/note/get',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_list_notes' => array (  0 =>   array (    0 => 'deck',    1 => 'noteType',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteController::listNotesAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'noteType',    ),    1 =>     array (      0 => 'text',      1 => '/note_type',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    3 =>     array (      0 => 'text',      1 => '/flashcards/note/list/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_delete_note' => array (  0 =>   array (    0 => 'note',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\NoteController::deleteNoteAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'note',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/note/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_count_cards' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::countCardsAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/card/count/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_new_card_to_learn' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::newCardToLearnAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/card/new_card_to_learn/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_card_to_review' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::cardToReviewAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/card/card_to_review/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_study_card' => array (  0 =>   array (    0 => 'deck',    1 => 'sessionId',    2 => 'card',    3 => 'result',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::studyCardAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'result',    ),    1 =>     array (      0 => 'text',      1 => '/result',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'card',    ),    3 =>     array (      0 => 'text',      1 => '/card',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionId',    ),    5 =>     array (      0 => 'text',      1 => '/session',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    7 =>     array (      0 => 'text',      1 => '/flashcards/study_card/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_cancel_last_study' => array (  0 =>   array (    0 => 'deck',    1 => 'sessionId',    2 => 'card',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::cancelStudyCardAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'card',    ),    1 =>     array (      0 => 'text',      1 => '/card',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'sessionId',    ),    3 =>     array (      0 => 'text',      1 => '/session',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    5 =>     array (      0 => 'text',      1 => '/flashcards/cancel_last_study/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_reset_card' => array (  0 =>   array (    0 => 'card',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::resetCardAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/reset',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'card',    ),    2 =>     array (      0 => 'text',      1 => '/flashcards/card',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_suspend_card' => array (  0 =>   array (    0 => 'card',    1 => 'suspend',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardController::suspendCardAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'suspend',    ),    1 =>     array (      0 => 'text',      1 => '/suspend',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'card',    ),    3 =>     array (      0 => 'text',      1 => '/flashcards/card',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_getall_card_learning' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardLearningController::allCardLearningAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/card_learning/all/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_count_card_learning' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\CardLearningController::countCardLearningAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/card_learning/count/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claroline_create_session' => array (  0 =>   array (    0 => 'deck',  ),  1 =>   array (    '_controller' => 'Claroline\\FlashCardBundle\\Controller\\SessionController::createSessionAction',  ),  2 =>   array (    'id' => '\\d+',    'abilityId' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'deck',    ),    1 =>     array (      0 => 'text',      1 => '/flashcards/session/create/deck',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_bank' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Tool\\QuestionBankController::openAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ujm_exercise_open' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'UJM\\ExoBundle\\Controller\\Resource\\ExerciseController::openAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ujm_exercise_docimology' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Resource\\ExerciseController::docimologyAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/docimology',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_get' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\ExerciseController::getAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\ExerciseController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\ExerciseController::publishAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_unpublish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\ExerciseController::unpublishAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/unpublish',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_papers' => array (  0 =>   array (    0 => 'exerciseId',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\PaperController::listAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/papers',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_export_paper' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\PaperController::getAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/papers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    3 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ujm_exercise_delete_papers' => array (  0 =>   array (    0 => 'exerciseId',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\PaperController::deleteAllAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/papers',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ujm_exercise_delete_paper' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\PaperController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/papers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    3 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_papers_export' => array (  0 =>   array (    0 => 'exerciseId',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\PaperController::exportCsvAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/papers/export',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\QuestionController::searchAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/questions/search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\QuestionController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\QuestionController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\QuestionController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_category_list' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\CategoryController::listAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_category_create' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\CategoryController::createAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_category_update' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\CategoryController::updateAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_category_delete' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\CategoryController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/categories',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_attempt_start' => array (  0 =>   array (    0 => 'exerciseId',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\AttemptController::startAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/attempts',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_attempt_submit' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'id',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\AttemptController::submitAnswersAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/attempts',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    3 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_attempt_finish' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'id',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\AttemptController::finishAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/end',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    2 =>     array (      0 => 'text',      1 => '/attempts',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    4 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_attempt_hint_show' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'id',    2 => 'questionId',    3 => 'hintId',  ),  1 =>   array (    'user' => NULL,    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\AttemptController::useHintAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'hintId',    ),    1 =>     array (      0 => 'text',      1 => '/hints',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'questionId',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    4 =>     array (      0 => 'text',      1 => '/attempts',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    6 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_correction_questions' => array (  0 =>   array (    0 => 'exerciseId',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\CorrectionController::listQuestionsToCorrectAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/correction',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    2 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_correction_save' => array (  0 =>   array (    0 => 'exerciseId',    1 => 'questionId',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\CorrectionController::saveAction',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'questionId',    ),    1 =>     array (      0 => 'text',      1 => '/correction',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'exerciseId',    ),    3 =>     array (      0 => 'text',      1 => '/api/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questions_share' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\ShareController::shareAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/questions/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_share_update' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\ShareController::updateAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/questions/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_share_delete' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\ShareController::deleteAction',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/questions/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'questions_share_users' => array (  0 =>   array (    0 => 'search',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\Question\\ShareController::searchUsers',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/api/questions/share',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_qti_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\QTIController::importAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/qti',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exercise_qti_export' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\QTIController::exportExerciseAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/api/qti/exercises',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'question_qti_export' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'UJM\\ExoBundle\\Controller\\Api\\QTIController::exportQuestionsAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/api/qti/questions',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_getdefaultchapter' => array (  0 =>   array (    0 => 'lesson',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getDefaultChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/defaultChapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_gettree' => array (  0 =>   array (    0 => 'lesson',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getTreeAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/tree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_getchapterlist' => array (  0 =>   array (    0 => 'lesson',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getChapterListAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/chapterlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_viewchapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::viewChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_createchapter' => array (  0 =>   array (    0 => 'lesson',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::createChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_duplicatechapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::duplicateChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/duplicate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    3 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_editchapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::editChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_movechapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::moveChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_api_deletechapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::deleteChapterAction',  ),  2 =>   array (    'lesson' => '\\d+',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::viewLessonAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_pdf' => array (  0 =>   array (    0 => 'resourceId',    1 => '_format',  ),  1 =>   array (    '_format' => 'pdf',    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::viewLessonPdfAction',  ),  2 =>   array (    'resourceId' => '\\d+',    '_format' => 'pdf',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'pdf',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/view/pdf',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::viewChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/view',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_edit_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::editChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_update_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::updateChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/update',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_confirm_delete_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::confirmDeleteChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/confirm-delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_delete_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::deleteChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/delete',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_new_chapter_without_parent' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    'parentChapterId' => 0,    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::newChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_new_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'parentChapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::newChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'parentChapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'parentChapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_add_chapter' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::addChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_add_ng_chapter' => array (  0 =>   array (    0 => 'resourceId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::addNgChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    1 =>     array (      0 => 'text',      1 => '/icap_lesson/api/add',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_choice_move_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::choiceMoveChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/choice-move',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_move_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::moveChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/move',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_duplicate_form_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::duplicateFormChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/duplicate_form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_duplicate_chapter' => array (  0 =>   array (    0 => 'resourceId',    1 => 'chapterId',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\LessonController::duplicateChapterAction',  ),  2 =>   array (    'resourceId' => '\\d+',    'chapterId' => '\\d+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'chapterId',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'resourceId',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/duplicate',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_view_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::viewChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    3 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_create_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::createChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_duplicate_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::duplicateChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/duplicate',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chapter',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    4 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_edit_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::editChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    3 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_move_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::moveChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PATCH',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    3 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_get_default_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getDefaultChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/api/defaultChapter',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_get_tree' => array (  0 =>   array (    0 => 'lesson',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getTreeAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/api/tree',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_get_chapter_list' => array (  0 =>   array (    0 => 'lesson',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::getChapterListAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    2 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapterlist',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'icap_lesson_api_delete_chapter' => array (  0 =>   array (    0 => 'lesson',    1 => 'chapter',    2 => '_format',  ),  1 =>   array (    '_controller' => 'Icap\\LessonBundle\\Controller\\API\\ApiController::deleteChapterAction',    '_format' => 'json',  ),  2 =>   array (    'lesson' => '\\d+',    '_format' => 'json|xml|csv|xls|html',    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'chapter',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '\\d+',      3 => 'lesson',    ),    3 =>     array (      0 => 'text',      1 => '/icap_lesson/api/chapters',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_user' => array (  0 =>   array (    0 => 'user',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::userChatAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chat',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_open' => array (  0 =>   array (    0 => 'chatRoom',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_message_register' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'username',    2 => 'fullName',    3 => 'message',  ),  1 =>   array (    'message' => '',    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomMessageRegisterAction',  ),  2 =>   array (    'message' => '.+',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '.+',      3 => 'message',    ),    1 =>     array (      0 => 'text',      1 => '/message',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fullName',    ),    3 =>     array (      0 => 'text',      1 => '/full',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    5 =>     array (      0 => 'text',      1 => '/user',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_presence_register' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'username',    2 => 'fullName',    3 => 'status',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomPresenceRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    1 =>     array (      0 => 'text',      1 => '/presence/status',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fullName',    ),    3 =>     array (      0 => 'text',      1 => '/full',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    5 =>     array (      0 => 'text',      1 => '/user',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_status_register' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'username',    2 => 'fullName',    3 => 'status',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomStatusRegisterAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'status',    ),    1 =>     array (      0 => 'text',      1 => '/status/status',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fullName',    ),    3 =>     array (      0 => 'text',      1 => '/full',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    5 =>     array (      0 => 'text',      1 => '/user',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_configure_form' => array (  0 =>   array (    0 => 'chatRoom',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_configure' => array (  0 =>   array (    0 => 'chatRoom',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_room_status_edit' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'roomStatus',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\ChatController::chatRoomStatusEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'roomStatus',    ),    2 =>     array (      0 => 'text',      1 => '/status',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    4 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/chat/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_admin_management' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::adminChatManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_admin_configure_form' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::adminChatConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/configure/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_admin_configure' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::adminChatConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/configure',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_admin_reset' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::resetConfigurationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_users_admin_management' => array (  0 =>   array (    0 => 'show',    1 => 'page',    2 => 'max',    3 => 'orderedBy',    4 => 'order',    5 => 'search',  ),  1 =>   array (    'show' => 0,    'page' => 1,    'search' => '',    'max' => 50,    'orderedBy' => 'username',    'order' => 'ASC',    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::adminChatUsersManagementAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'search',    ),    1 =>     array (      0 => 'text',      1 => '/search',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'order',    ),    3 =>     array (      0 => 'text',      1 => '/order',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'orderedBy',    ),    5 =>     array (      0 => 'text',      1 => '/ordered/by',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'max',    ),    7 =>     array (      0 => 'text',      1 => '/max',    ),    8 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'page',    ),    9 =>     array (      0 => 'text',      1 => '/page',    ),    10 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'show',    ),    11 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/users/management',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_users_list' => array (  0 =>   array (    0 => 'type',  ),  1 =>   array (    'type' => 'none',    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::chatUsersListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'type',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/users/list/type',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_user_create' => array (  0 =>   array (    0 => 'user',    1 => 'username',    2 => 'password',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::chatUsersCreateFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'password',    ),    2 =>     array (      0 => 'text',      1 => '/password',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    4 =>     array (      0 => 'text',      1 => '/username',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'user',    ),    6 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_user_edit_form' => array (  0 =>   array (    0 => 'chatUser',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::chatUserEditFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatUser',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_chat_user_edit' => array (  0 =>   array (    0 => 'chatUser',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\AdminChatController::chatUserEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatUser',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/admin/chat/user',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_xmpp_options' => array (  0 =>   array (    0 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::getXmppOptionsAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/xmpp/options',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_chat_room_user' => array (  0 =>   array (    0 => 'chatRoom',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::getChatRoomUserAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/room/user',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/chats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_chat_room_presence_register' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'username',    2 => 'fullName',    3 => 'status',    4 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::postChatRoomPresenceRegisterAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'status',    ),    2 =>     array (      0 => 'text',      1 => '/registers',    ),    3 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fullName',    ),    4 =>     array (      0 => 'text',      1 => '/presences',    ),    5 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    6 =>     array (      0 => 'text',      1 => '/rooms',    ),    7 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    8 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/chats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_chat_room_message_register' => array (  0 =>   array (    0 => 'chatRoom',    1 => 'username',    2 => 'fullName',    3 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::postChatRoomMessageRegisterAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/registers',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'fullName',    ),    3 =>     array (      0 => 'text',      1 => '/messages',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'username',    ),    5 =>     array (      0 => 'text',      1 => '/rooms',    ),    6 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    7 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/chats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_post_chat_users_infos' => array (  0 =>   array (    0 => 'chatRoom',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::postChatUsersInfosAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/users/infos',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/chats',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_get_registered_messages' => array (  0 =>   array (    0 => 'chatRoom',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::getRegisteredMessagesAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'text',      1 => '/messages',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'chatRoom',    ),    3 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/registereds',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'api_put_chat_room' => array (  0 =>   array (    0 => 'chatRoom',    1 => '_format',  ),  1 =>   array (    '_controller' => 'Claroline\\ChatBundle\\Controller\\API\\ChatController::putChatRoomAction',    '_format' => 'json',  ),  2 =>   array (    '_format' => 'json|xml|csv|xls|html',    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'json|xml|csv|xls|html',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'chatRoom',    ),    2 =>     array (      0 => 'text',      1 => '/clarolinechatbundle/api/room',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'create_dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::createDashboard',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/api/new',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'update_dashboard' => array (  0 =>   array (    0 => 'dashboardId',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::updateDashboard',  ),  2 =>   array (    '_method' => 'PUT',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dashboardId',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/api/put',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dashboards' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::getAll',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_nb_dashboards' => array (  0 =>   array (  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::getNbDashboard',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards/count',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dashboard_spent_times' => array (  0 =>   array (    0 => 'dashboardId',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::getDashboardWorkspaceSpentTimes',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/times',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dashboardId',    ),    2 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dashboard_spent_times_by_workspace' => array (  0 =>   array (    0 => 'workspaceId',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::getDashboardWorkspaceSpentTimesByWorkspace',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/times',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'workspaceId',    ),    2 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards/preview',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'delete_dashboard' => array (  0 =>   array (    0 => 'dashboardId',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::deleteDashboard',  ),  2 =>   array (    '_method' => 'DELETE',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dashboardId',    ),    2 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'get_dashboard' => array (  0 =>   array (    0 => 'dashboardId',  ),  1 =>   array (    '_format' => 'json',    '_controller' => 'Claroline\\DashboardBundle\\Controller\\Api\\DashboardsController::getOne',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'dashboardId',    ),    1 =>     array (      0 => 'text',      1 => '/dashboard/api/dashboards',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_open' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::clacoFormOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_configuration_edit' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::clacoFormConfigurationEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/config/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_template_edit' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::clacoFormTemplateEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/template/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_field_create' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::fieldCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/field/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_field_edit' => array (  0 =>   array (    0 => 'field',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::fieldEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'field',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_field_delete' => array (  0 =>   array (    0 => 'field',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::fieldDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'field',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_get_field_by_name_excluding_id' => array (  0 =>   array (    0 => 'clacoForm',    1 => 'name',    2 => 'id',  ),  1 =>   array (    'id' => 0,    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::getFieldByNameExcludingIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/excluding/id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'text',      1 => '/field/get/by/name',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    5 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_field_choices_categories_retrieve' => array (  0 =>   array (    0 => 'field',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::fieldChoicesCategoriesRetrieveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/choices/categories/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'field',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/field',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_category_create' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::categoryCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/category/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_category_edit' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::categoryEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_category_delete' => array (  0 =>   array (    0 => 'category',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::categoryDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'category',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/category',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_keyword_create' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::keywordCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/keyword/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_keyword_edit' => array (  0 =>   array (    0 => 'keyword',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::keywordEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'keyword',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/keyword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_keyword_delete' => array (  0 =>   array (    0 => 'keyword',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::keywordDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'keyword',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/keyword',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_get_keyword_by_name_excluding_id' => array (  0 =>   array (    0 => 'clacoForm',    1 => 'name',    2 => 'id',  ),  1 =>   array (    'id' => 0,    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::getKeywordByNameExcludingIdAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/excluding/id',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    3 =>     array (      0 => 'text',      1 => '/keyword/get/by/name',    ),    4 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    5 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_random' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryRandomAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entry/random',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entries_list' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entriesListAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entries/list',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_create' => array (  0 =>   array (    0 => 'clacoForm',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/entry/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'clacoForm',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_edit' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_delete' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_retrieve' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryRetrieveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_status_change' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryStatusChangeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/status/change',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comments_retrieve' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::entryCommentsRetrieveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comments/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comment_create' => array (  0 =>   array (    0 => 'entry',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::commentCreateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/comment/create',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'entry',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comment_edit' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::commentEditAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/edit',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comment_delete' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::commentDeleteAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/delete',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comment_activate' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::commentActivateAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/activate',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_entry_comment_block' => array (  0 =>   array (    0 => 'comment',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormController::commentBlockAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/block',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'comment',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/entry/comment',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_widget_open' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormWidgetController::clacoFormWidgetOpenAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/open',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_widget_configure_form' => array (  0 =>   array (    0 => 'widgetInstance',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormWidgetController::clacoFormWidgetConfigureFormAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure/form',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'widgetInstance',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/widget',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_widget_configure' => array (  0 =>   array (    0 => 'config',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormWidgetController::clacoFormWidgetConfigureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/configure',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'config',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/widget/config',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'claro_claco_form_non_confidential_fields_retrieve' => array (  0 =>   array (    0 => 'resourceNode',  ),  1 =>   array (    '_controller' => 'Claroline\\ClacoFormBundle\\Controller\\ClacoFormWidgetController::clacoFormNonConfidentialFieldsRetrieveAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/fields/retrieve',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'resourceNode',    ),    2 =>     array (      0 => 'text',      1 => '/clarolineclacoformbundle/claco/form/resource/node',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'zenstruck_ajax_entity' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'zenstruck_form.ajax_entity_controller:findAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_entity_find',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'bazinga_jstranslation_js' => array (  0 =>   array (    0 => 'domain',    1 => '_format',  ),  1 =>   array (    '_controller' => 'bazinga.jstranslation.controller:getTranslationsAction',    'domain' => 'messages',    '_format' => 'js',  ),  2 =>   array (    '_format' => 'js|json',    'domain' => '[\\w]+',    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => 'js|json',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[\\w]+',      3 => 'domain',    ),    2 =>     array (      0 => 'text',      1 => '/translations',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exporter_api_norewrite' => array (  0 =>   array (  ),  1 =>   array (    'entityReference' => 'null',    '_format' => 'xml',    '_controller' => 'IDCI\\Bundle\\ExporterBundle\\Controller\\ApiController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exporter/api/query',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'exporter_api' => array (  0 =>   array (    0 => 'entityReference',    1 => '_format',  ),  1 =>   array (    '_format' => 'xml',    '_controller' => 'IDCI\\Bundle\\ExporterBundle\\Controller\\ApiController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => '_format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'entityReference',    ),    2 =>     array (      0 => 'text',      1 => '/exporter/api',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_oauth_server_token' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'fos_oauth_server.controller.token:tokenAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/oauth/v2/token',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );
        }
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
