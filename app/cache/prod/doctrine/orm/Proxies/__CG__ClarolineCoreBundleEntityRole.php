<?php

namespace Proxies\__CG__\Claroline\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Role extends \Claroline\CoreBundle\Entity\Role implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'translationKey', 'isReadOnly', 'users', 'facets', 'panelFacetsRole', 'generalFacetPreference', 'adminTools', 'groups', 'type', 'resourceRights', 'workspace', 'maxUsers', 'toolRights', 'pwsToolConfig', 'pwsRightsManagementAccess', 'personalWorkspaceCreationEnabled', 'profileProperties'];
        }

        return ['__isInitialized__', 'id', 'name', 'translationKey', 'isReadOnly', 'users', 'facets', 'panelFacetsRole', 'generalFacetPreference', 'adminTools', 'groups', 'type', 'resourceRights', 'workspace', 'maxUsers', 'toolRights', 'pwsToolConfig', 'pwsRightsManagementAccess', 'personalWorkspaceCreationEnabled', 'profileProperties'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Role $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTranslationKey($key)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTranslationKey', [$key]);

        return parent::setTranslationKey($key);
    }

    /**
     * {@inheritDoc}
     */
    public function getTranslationKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTranslationKey', []);

        return parent::getTranslationKey();
    }

    /**
     * {@inheritDoc}
     */
    public function isReadOnly()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isReadOnly', []);

        return parent::isReadOnly();
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', []);

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function preRemove()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'preRemove', []);

        return parent::preRemove();
    }

    /**
     * {@inheritDoc}
     */
    public function setReadOnly($value)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReadOnly', [$value]);

        return parent::setReadOnly($value);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function initUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'initUsers', []);

        return parent::initUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function addResourceRights(\Claroline\CoreBundle\Entity\Resource\ResourceRights $rc)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addResourceRights', [$rc]);

        return parent::addResourceRights($rc);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceRights()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceRights', []);

        return parent::getResourceRights();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkspace(\Claroline\CoreBundle\Entity\Workspace\Workspace $ws = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkspace', [$ws]);

        return parent::setWorkspace($ws);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkspace', []);

        return parent::getWorkspace();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxUsers($maxUsers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxUsers', [$maxUsers]);

        return parent::setMaxUsers($maxUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxUsers', []);

        return parent::getMaxUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addToolRights(\Claroline\CoreBundle\Entity\Tool\ToolRights $tr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addToolRights', [$tr]);

        return parent::addToolRights($tr);
    }

    /**
     * {@inheritDoc}
     */
    public function getToolRights()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToolRights', []);

        return parent::getToolRights();
    }

    /**
     * {@inheritDoc}
     */
    public function addPwsToolConfig(\Claroline\CoreBundle\Entity\Tool\PwsToolConfig $tr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPwsToolConfig', [$tr]);

        return parent::addPwsToolConfig($tr);
    }

    /**
     * {@inheritDoc}
     */
    public function getPwsToolConfig()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPwsToolConfig', []);

        return parent::getPwsToolConfig();
    }

    /**
     * {@inheritDoc}
     */
    public function getPersonalWorkspaceCreationEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersonalWorkspaceCreationEnabled', []);

        return parent::getPersonalWorkspaceCreationEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function isPersonalWorkspaceCreationEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersonalWorkspaceCreationEnabled', []);

        return parent::isPersonalWorkspaceCreationEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setPersonalWorkspaceCreationEnabled($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPersonalWorkspaceCreationEnabled', [$boolean]);

        return parent::setPersonalWorkspaceCreationEnabled($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function getProfileProperties()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProfileProperties', []);

        return parent::getProfileProperties();
    }

    /**
     * {@inheritDoc}
     */
    public function addProfileProperty(\Claroline\CoreBundle\Entity\ProfileProperty $property)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProfileProperty', [$property]);

        return parent::addProfileProperty($property);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function addPanelFacetRole(\Claroline\CoreBundle\Entity\Facet\PanelFacetRole $pfr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPanelFacetRole', [$pfr]);

        return parent::addPanelFacetRole($pfr);
    }

}
