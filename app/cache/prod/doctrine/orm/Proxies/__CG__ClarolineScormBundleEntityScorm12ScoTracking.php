<?php

namespace Proxies\__CG__\Claroline\ScormBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Scorm12ScoTracking extends \Claroline\ScormBundle\Entity\Scorm12ScoTracking implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'user', 'sco', 'scoreRaw', 'scoreMin', 'scoreMax', 'lessonStatus', 'sessionTime', 'totalTime', 'entry', 'suspendData', 'credit', 'exitMode', 'lessonLocation', 'lessonMode', 'bestScoreRaw', 'bestLessonStatus', 'isLocked'];
        }

        return ['__isInitialized__', 'id', 'user', 'sco', 'scoreRaw', 'scoreMin', 'scoreMax', 'lessonStatus', 'sessionTime', 'totalTime', 'entry', 'suspendData', 'credit', 'exitMode', 'lessonLocation', 'lessonMode', 'bestScoreRaw', 'bestLessonStatus', 'isLocked'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Scorm12ScoTracking $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getSco()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSco', []);

        return parent::getSco();
    }

    /**
     * {@inheritDoc}
     */
    public function setSco($sco)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSco', [$sco]);

        return parent::setSco($sco);
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreRaw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreRaw', []);

        return parent::getScoreRaw();
    }

    /**
     * {@inheritDoc}
     */
    public function setScoreRaw($scoreRaw)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScoreRaw', [$scoreRaw]);

        return parent::setScoreRaw($scoreRaw);
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreMin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreMin', []);

        return parent::getScoreMin();
    }

    /**
     * {@inheritDoc}
     */
    public function setScoreMin($scoreMin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScoreMin', [$scoreMin]);

        return parent::setScoreMin($scoreMin);
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreMax()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreMax', []);

        return parent::getScoreMax();
    }

    /**
     * {@inheritDoc}
     */
    public function setScoreMax($scoreMax)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setScoreMax', [$scoreMax]);

        return parent::setScoreMax($scoreMax);
    }

    /**
     * {@inheritDoc}
     */
    public function getLessonStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLessonStatus', []);

        return parent::getLessonStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setLessonStatus($lessonStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLessonStatus', [$lessonStatus]);

        return parent::setLessonStatus($lessonStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionTime', []);

        return parent::getSessionTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionTime($sessionTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionTime', [$sessionTime]);

        return parent::setSessionTime($sessionTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalTime', []);

        return parent::getTotalTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalTime($totalTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalTime', [$totalTime]);

        return parent::setTotalTime($totalTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntry', []);

        return parent::getEntry();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntry($entry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntry', [$entry]);

        return parent::setEntry($entry);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuspendData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuspendData', []);

        return parent::getSuspendData();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuspendData($suspendData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuspendData', [$suspendData]);

        return parent::setSuspendData($suspendData);
    }

    /**
     * {@inheritDoc}
     */
    public function getCredit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCredit', []);

        return parent::getCredit();
    }

    /**
     * {@inheritDoc}
     */
    public function setCredit($credit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCredit', [$credit]);

        return parent::setCredit($credit);
    }

    /**
     * {@inheritDoc}
     */
    public function getExitMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExitMode', []);

        return parent::getExitMode();
    }

    /**
     * {@inheritDoc}
     */
    public function setExitMode($exitMode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExitMode', [$exitMode]);

        return parent::setExitMode($exitMode);
    }

    /**
     * {@inheritDoc}
     */
    public function getLessonLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLessonLocation', []);

        return parent::getLessonLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLessonLocation($lessonLocation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLessonLocation', [$lessonLocation]);

        return parent::setLessonLocation($lessonLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getLessonMode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLessonMode', []);

        return parent::getLessonMode();
    }

    /**
     * {@inheritDoc}
     */
    public function setLessonMode($lessonMode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLessonMode', [$lessonMode]);

        return parent::setLessonMode($lessonMode);
    }

    /**
     * {@inheritDoc}
     */
    public function getBestScoreRaw()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBestScoreRaw', []);

        return parent::getBestScoreRaw();
    }

    /**
     * {@inheritDoc}
     */
    public function getBestLessonStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBestLessonStatus', []);

        return parent::getBestLessonStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsLocked', []);

        return parent::getIsLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function setBestScoreRaw($bestScoreRaw)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBestScoreRaw', [$bestScoreRaw]);

        return parent::setBestScoreRaw($bestScoreRaw);
    }

    /**
     * {@inheritDoc}
     */
    public function setBestLessonStatus($bestLessonStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBestLessonStatus', [$bestLessonStatus]);

        return parent::setBestLessonStatus($bestLessonStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLocked($isLocked)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLocked', [$isLocked]);

        return parent::setIsLocked($isLocked);
    }

    /**
     * {@inheritDoc}
     */
    public function getFormattedTotalTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFormattedTotalTime', []);

        return parent::getFormattedTotalTime();
    }

}
