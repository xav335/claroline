<?php

namespace Proxies\__CG__\FormaLibre\PresenceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Period extends \FormaLibre\PresenceBundle\Entity\Period implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'schoolYearId', 'numPeriod', 'name', 'day', 'dayName', 'beginHour', 'endHour', 'visibility'];
        }

        return ['__isInitialized__', 'id', 'schoolYearId', 'numPeriod', 'name', 'day', 'dayName', 'beginHour', 'endHour', 'visibility'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Period $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumPeriod()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumPeriod', []);

        return parent::getNumPeriod();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumPeriod($numPeriod)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumPeriod', [$numPeriod]);

        return parent::setNumPeriod($numPeriod);
    }

    /**
     * {@inheritDoc}
     */
    public function getDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDay', []);

        return parent::getDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setDay($day)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDay', [$day]);

        return parent::setDay($day);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayName', []);

        return parent::getDayName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayName($dayName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayName', [$dayName]);

        return parent::setDayName($dayName);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getBeginHour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBeginHour', []);

        return parent::getBeginHour();
    }

    /**
     * {@inheritDoc}
     */
    public function setBeginHour($beginHour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBeginHour', [$beginHour]);

        return parent::setBeginHour($beginHour);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndHour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndHour', []);

        return parent::getEndHour();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndHour($endHour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndHour', [$endHour]);

        return parent::setEndHour($endHour);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisibility()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisibility', []);

        return parent::getVisibility();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisibility($visibility)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisibility', [$visibility]);

        return parent::setVisibility($visibility);
    }

    /**
     * {@inheritDoc}
     */
    public function getSchoolYearId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSchoolYearId', []);

        return parent::getSchoolYearId();
    }

    /**
     * {@inheritDoc}
     */
    public function setSchoolYearId($schoolYearId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSchoolYearId', [$schoolYearId]);

        return parent::setSchoolYearId($schoolYearId);
    }

}
