<?php

namespace Proxies\__CG__\Icap\DropzoneBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Dropzone extends \Icap\DropzoneBundle\Entity\Dropzone implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'editionState', 'instruction', 'correctionInstruction', 'successMessage', 'failMessage', 'allowWorkspaceResource', 'allowUpload', 'allowUrl', 'allowRichText', 'peerReview', 'expectedTotalCorrection', 'displayNotationToLearners', 'displayNotationMessageToLearners', 'minimumScoreToPass', 'manualPlanning', 'manualState', 'startAllowDrop', 'endAllowDrop', 'startReview', 'endReview', 'allowCommentInCorrection', 'forceCommentInCorrection', 'diplayCorrectionsToLearners', 'allowCorrectionDeny', 'totalCriteriaColumn', 'drops', 'peerReviewCriteria', 'autoCloseOpenedDropsWhenTimeIsUp', 'autoCloseState', 'hiddenDirectory', 'notifyOnDrop', 'eventDrop', 'eventCorrection', 'id', 'resourceNode', 'name', 'mimeType'];
        }

        return ['__isInitialized__', 'editionState', 'instruction', 'correctionInstruction', 'successMessage', 'failMessage', 'allowWorkspaceResource', 'allowUpload', 'allowUrl', 'allowRichText', 'peerReview', 'expectedTotalCorrection', 'displayNotationToLearners', 'displayNotationMessageToLearners', 'minimumScoreToPass', 'manualPlanning', 'manualState', 'startAllowDrop', 'endAllowDrop', 'startReview', 'endReview', 'allowCommentInCorrection', 'forceCommentInCorrection', 'diplayCorrectionsToLearners', 'allowCorrectionDeny', 'totalCriteriaColumn', 'drops', 'peerReviewCriteria', 'autoCloseOpenedDropsWhenTimeIsUp', 'autoCloseState', 'hiddenDirectory', 'notifyOnDrop', 'eventDrop', 'eventCorrection', 'id', 'resourceNode', 'name', 'mimeType'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Dropzone $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setEventCorrection($eventCorrection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventCorrection', [$eventCorrection]);

        return parent::setEventCorrection($eventCorrection);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventCorrection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventCorrection', []);

        return parent::getEventCorrection();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventDrop($eventDrop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventDrop', [$eventDrop]);

        return parent::setEventDrop($eventDrop);
    }

    /**
     * {@inheritDoc}
     */
    public function getEventDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventDrop', []);

        return parent::getEventDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditionState($editionState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditionState', [$editionState]);

        return parent::setEditionState($editionState);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditionState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditionState', []);

        return parent::getEditionState();
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCriteriaColumn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCriteriaColumn', []);

        return parent::getTotalCriteriaColumn();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCriteriaColumn($totalCriteriaColumn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCriteriaColumn', [$totalCriteriaColumn]);

        return parent::setTotalCriteriaColumn($totalCriteriaColumn);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowCommentInCorrection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowCommentInCorrection', []);

        return parent::getAllowCommentInCorrection();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowCommentInCorrection($allowCommentInCorrection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowCommentInCorrection', [$allowCommentInCorrection]);

        return parent::setAllowCommentInCorrection($allowCommentInCorrection);
    }

    /**
     * {@inheritDoc}
     */
    public function setForceCommentInCorrection($forceCommentInCorrection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setForceCommentInCorrection', [$forceCommentInCorrection]);

        return parent::setForceCommentInCorrection($forceCommentInCorrection);
    }

    /**
     * {@inheritDoc}
     */
    public function getForceCommentInCorrection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getForceCommentInCorrection', []);

        return parent::getForceCommentInCorrection();
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowUpload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowUpload', []);

        return parent::getAllowUpload();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowUpload($allowUpload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowUpload', [$allowUpload]);

        return parent::setAllowUpload($allowUpload);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowUrl', []);

        return parent::getAllowUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowUrl($allowUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowUrl', [$allowUrl]);

        return parent::setAllowUrl($allowUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowWorkspaceResource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowWorkspaceResource', []);

        return parent::getAllowWorkspaceResource();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowWorkspaceResource($allowWorkspaceResource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowWorkspaceResource', [$allowWorkspaceResource]);

        return parent::setAllowWorkspaceResource($allowWorkspaceResource);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndAllowDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndAllowDrop', []);

        return parent::getEndAllowDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndAllowDrop($endAllowDrop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndAllowDrop', [$endAllowDrop]);

        return parent::setEndAllowDrop($endAllowDrop);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndReview', []);

        return parent::getEndReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndReview($endReview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndReview', [$endReview]);

        return parent::setEndReview($endReview);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpectedTotalCorrection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpectedTotalCorrection', []);

        return parent::getExpectedTotalCorrection();
    }

    /**
     * {@inheritDoc}
     */
    public function setExpectedTotalCorrection($expectedTotalCorrection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpectedTotalCorrection', [$expectedTotalCorrection]);

        return parent::setExpectedTotalCorrection($expectedTotalCorrection);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstruction', []);

        return parent::getInstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstruction($instruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstruction', [$instruction]);

        return parent::setInstruction($instruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorrectionInstruction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorrectionInstruction', []);

        return parent::getCorrectionInstruction();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorrectionInstruction($instruction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorrectionInstruction', [$instruction]);

        return parent::setCorrectionInstruction($instruction);
    }

    /**
     * {@inheritDoc}
     */
    public function getSuccessMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSuccessMessage', []);

        return parent::getSuccessMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setSuccessMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSuccessMessage', [$message]);

        return parent::setSuccessMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getFailMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFailMessage', []);

        return parent::getFailMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setFailMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFailMessage', [$message]);

        return parent::setFailMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getManualPlanning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManualPlanning', []);

        return parent::getManualPlanning();
    }

    /**
     * {@inheritDoc}
     */
    public function setManualPlanning($manualPlanning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManualPlanning', [$manualPlanning]);

        return parent::setManualPlanning($manualPlanning);
    }

    /**
     * {@inheritDoc}
     */
    public function getManualState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManualState', []);

        return parent::getManualState();
    }

    /**
     * {@inheritDoc}
     */
    public function setManualState($manualState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setManualState', [$manualState]);

        return parent::setManualState($manualState);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeerReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeerReview', []);

        return parent::getPeerReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeerReview($peerReview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeerReview', [$peerReview]);

        return parent::setPeerReview($peerReview);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartAllowDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartAllowDrop', []);

        return parent::getStartAllowDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartAllowDrop($startAllowDrop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartAllowDrop', [$startAllowDrop]);

        return parent::setStartAllowDrop($startAllowDrop);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrops()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrops', []);

        return parent::getDrops();
    }

    /**
     * {@inheritDoc}
     */
    public function setDrops($drops)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDrops', [$drops]);

        return parent::setDrops($drops);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeerReviewCriteria()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeerReviewCriteria', []);

        return parent::getPeerReviewCriteria();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeerReviewCriteria($peerReviewCriteria)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeerReviewCriteria', [$peerReviewCriteria]);

        return parent::setPeerReviewCriteria($peerReviewCriteria);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayNotationMessageToLearners()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayNotationMessageToLearners', []);

        return parent::getDisplayNotationMessageToLearners();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayNotationMessageToLearners($displayNotationMessageToLearners)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayNotationMessageToLearners', [$displayNotationMessageToLearners]);

        return parent::setDisplayNotationMessageToLearners($displayNotationMessageToLearners);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayNotationToLearners()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayNotationToLearners', []);

        return parent::getDisplayNotationToLearners();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayNotationToLearners($displayNotationToLearners)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayNotationToLearners', [$displayNotationToLearners]);

        return parent::setDisplayNotationToLearners($displayNotationToLearners);
    }

    /**
     * {@inheritDoc}
     */
    public function getDiplayCorrectionsToLearners()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDiplayCorrectionsToLearners', []);

        return parent::getDiplayCorrectionsToLearners();
    }

    /**
     * {@inheritDoc}
     */
    public function setDiplayCorrectionsToLearners($diplayCorrectionsToLearners)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDiplayCorrectionsToLearners', [$diplayCorrectionsToLearners]);

        return parent::setDiplayCorrectionsToLearners($diplayCorrectionsToLearners);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowCorrectionDeny()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowCorrectionDeny', []);

        return parent::getAllowCorrectionDeny();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowCorrectionDeny($allowCorrectionDeny)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowCorrectionDeny', [$allowCorrectionDeny]);

        return parent::setAllowCorrectionDeny($allowCorrectionDeny);
    }

    /**
     * {@inheritDoc}
     */
    public function getMinimumScoreToPass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinimumScoreToPass', []);

        return parent::getMinimumScoreToPass();
    }

    /**
     * {@inheritDoc}
     */
    public function setMinimumScoreToPass($minimumScoreToPass)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMinimumScoreToPass', [$minimumScoreToPass]);

        return parent::setMinimumScoreToPass($minimumScoreToPass);
    }

    /**
     * {@inheritDoc}
     */
    public function setStartReview($startReview)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartReview', [$startReview]);

        return parent::setStartReview($startReview);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartReview', []);

        return parent::getStartReview();
    }

    /**
     * {@inheritDoc}
     */
    public function setAllowRichText($allowRichText)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAllowRichText', [$allowRichText]);

        return parent::setAllowRichText($allowRichText);
    }

    /**
     * {@inheritDoc}
     */
    public function getAllowRichText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAllowRichText', []);

        return parent::getAllowRichText();
    }

    /**
     * {@inheritDoc}
     */
    public function setHiddenDirectory($hiddenDirectory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHiddenDirectory', [$hiddenDirectory]);

        return parent::setHiddenDirectory($hiddenDirectory);
    }

    /**
     * {@inheritDoc}
     */
    public function getHiddenDirectory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHiddenDirectory', []);

        return parent::getHiddenDirectory();
    }

    /**
     * {@inheritDoc}
     */
    public function isNotStarted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isNotStarted', []);

        return parent::isNotStarted();
    }

    /**
     * {@inheritDoc}
     */
    public function isAllowDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAllowDrop', []);

        return parent::isAllowDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function isPeerReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPeerReview', []);

        return parent::isPeerReview();
    }

    /**
     * {@inheritDoc}
     */
    public function isFinished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFinished', []);

        return parent::isFinished();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeRemaining($reference)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeRemaining', [$reference]);

        return parent::getTimeRemaining($reference);
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeRemainingBeforeStartAllowDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeRemainingBeforeStartAllowDrop', []);

        return parent::getTimeRemainingBeforeStartAllowDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeRemainingBeforeEndAllowDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeRemainingBeforeEndAllowDrop', []);

        return parent::getTimeRemainingBeforeEndAllowDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeRemainingBeforeStartReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeRemainingBeforeStartReview', []);

        return parent::getTimeRemainingBeforeStartReview();
    }

    /**
     * {@inheritDoc}
     */
    public function getTimeRemainingBeforeEndReview()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTimeRemainingBeforeEndReview', []);

        return parent::getTimeRemainingBeforeEndReview();
    }

    /**
     * {@inheritDoc}
     */
    public function hasCriteria()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCriteria', []);

        return parent::hasCriteria();
    }

    /**
     * {@inheritDoc}
     */
    public function addCriterion(\Icap\DropzoneBundle\Entity\Criterion $criterion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCriterion', [$criterion]);

        return parent::addCriterion($criterion);
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoCloseOpenedDropsWhenTimeIsUp($autoCloseOpenedDropsWhenTimeIsUp)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoCloseOpenedDropsWhenTimeIsUp', [$autoCloseOpenedDropsWhenTimeIsUp]);

        return parent::setAutoCloseOpenedDropsWhenTimeIsUp($autoCloseOpenedDropsWhenTimeIsUp);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoCloseOpenedDropsWhenTimeIsUp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoCloseOpenedDropsWhenTimeIsUp', []);

        return parent::getAutoCloseOpenedDropsWhenTimeIsUp();
    }

    /**
     * {@inheritDoc}
     */
    public function setAutoCloseState($autoCloseState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAutoCloseState', [$autoCloseState]);

        return parent::setAutoCloseState($autoCloseState);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoCloseState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoCloseState', []);

        return parent::getAutoCloseState();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotifyOnDrop($notifyOnDrop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotifyOnDrop', [$notifyOnDrop]);

        return parent::setNotifyOnDrop($notifyOnDrop);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifyOnDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifyOnDrop', []);

        return parent::getNotifyOnDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setResourceNode(\Claroline\CoreBundle\Entity\Resource\ResourceNode $resourceNode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResourceNode', [$resourceNode]);

        return parent::setResourceNode($resourceNode);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceNode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceNode', []);

        return parent::getResourceNode();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getMimeType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMimeType', []);

        return parent::getMimeType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMimeType($mimeType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMimeType', [$mimeType]);

        return parent::setMimeType($mimeType);
    }

}
