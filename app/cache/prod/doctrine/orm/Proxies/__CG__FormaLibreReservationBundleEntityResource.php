<?php

namespace Proxies\__CG__\FormaLibre\ReservationBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Resource extends \FormaLibre\ReservationBundle\Entity\Resource implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'name', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'maxTimeReservation', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'resourceType', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'description', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'localisation', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'quantity', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'resourceRights', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'reservations', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'color'];
        }

        return ['__isInitialized__', 'id', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'name', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'maxTimeReservation', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'resourceType', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'description', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'localisation', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'quantity', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'resourceRights', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'reservations', '' . "\0" . 'FormaLibre\\ReservationBundle\\Entity\\Resource' . "\0" . 'color'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Resource $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxTimeReservation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxTimeReservation', []);

        return parent::getMaxTimeReservation();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxTimeReservation($maxTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxTimeReservation', [$maxTime]);

        return parent::setMaxTimeReservation($maxTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceType', []);

        return parent::getResourceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setResourceType(\FormaLibre\ReservationBundle\Entity\ResourceType $resourceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResourceType', [$resourceType]);

        return parent::setResourceType($resourceType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocalisation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocalisation', []);

        return parent::getLocalisation();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocalisation($localisation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocalisation', [$localisation]);

        return parent::setLocalisation($localisation);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuantity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuantity', []);

        return parent::getQuantity();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuantity($quantity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuantity', [$quantity]);

        return parent::setQuantity($quantity);
    }

    /**
     * {@inheritDoc}
     */
    public function addResourceRight(\FormaLibre\ReservationBundle\Entity\ResourceRights $resourceRight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addResourceRight', [$resourceRight]);

        return parent::addResourceRight($resourceRight);
    }

    /**
     * {@inheritDoc}
     */
    public function removeResourceRight(\FormaLibre\ReservationBundle\Entity\ResourceRights $resourceRight)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeResourceRight', [$resourceRight]);

        return parent::removeResourceRight($resourceRight);
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceRights()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceRights', []);

        return parent::getResourceRights();
    }

    /**
     * {@inheritDoc}
     */
    public function addReservation(\FormaLibre\ReservationBundle\Entity\Reservation $reservation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReservation', [$reservation]);

        return parent::addReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReservation(\FormaLibre\ReservationBundle\Entity\Reservation $reservation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReservation', [$reservation]);

        return parent::removeReservation($reservation);
    }

    /**
     * {@inheritDoc}
     */
    public function getReservations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReservations', []);

        return parent::getReservations();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', [$color]);

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', []);

        return parent::getColor();
    }

}
