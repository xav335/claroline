<?php

namespace Proxies\__CG__\Claroline\CursusBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Course extends \Claroline\CursusBundle\Entity\Course implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'code', 'title', 'description', 'publicRegistration', 'publicUnregistration', 'registrationValidation', 'workspaceModel', 'tutorRoleName', 'learnerRoleName', 'sessions', 'icon', 'workspace', 'userValidation', 'organizationValidation', 'maxUsers', 'validators', 'defaultSessionDuration', '' . "\0" . 'Claroline\\CursusBundle\\Entity\\Course' . "\0" . 'withSessionEvent', 'organizations', 'displayOrder'];
        }

        return ['__isInitialized__', 'id', 'code', 'title', 'description', 'publicRegistration', 'publicUnregistration', 'registrationValidation', 'workspaceModel', 'tutorRoleName', 'learnerRoleName', 'sessions', 'icon', 'workspace', 'userValidation', 'organizationValidation', 'maxUsers', 'validators', 'defaultSessionDuration', '' . "\0" . 'Claroline\\CursusBundle\\Entity\\Course' . "\0" . 'withSessionEvent', 'organizations', 'displayOrder'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Course $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicRegistration', []);

        return parent::getPublicRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicRegistration($publicRegistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicRegistration', [$publicRegistration]);

        return parent::setPublicRegistration($publicRegistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicUnregistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicUnregistration', []);

        return parent::getPublicUnregistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicUnregistration($publicUnregistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicUnregistration', [$publicUnregistration]);

        return parent::setPublicUnregistration($publicUnregistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationValidation', []);

        return parent::getRegistrationValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationValidation($registrationValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationValidation', [$registrationValidation]);

        return parent::setRegistrationValidation($registrationValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspaceModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkspaceModel', []);

        return parent::getWorkspaceModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkspaceModel(\Claroline\CoreBundle\Entity\Model\WorkspaceModel $workspaceModel = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkspaceModel', [$workspaceModel]);

        return parent::setWorkspaceModel($workspaceModel);
    }

    /**
     * {@inheritDoc}
     */
    public function getTutorRoleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTutorRoleName', []);

        return parent::getTutorRoleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setTutorRoleName($tutorRoleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTutorRoleName', [$tutorRoleName]);

        return parent::setTutorRoleName($tutorRoleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLearnerRoleName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLearnerRoleName', []);

        return parent::getLearnerRoleName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLearnerRoleName($learnerRoleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLearnerRoleName', [$learnerRoleName]);

        return parent::setLearnerRoleName($learnerRoleName);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessions', []);

        return parent::getSessions();
    }

    /**
     * {@inheritDoc}
     */
    public function getIcon()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcon', []);

        return parent::getIcon();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcon($icon)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcon', [$icon]);

        return parent::setIcon($icon);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkspace', []);

        return parent::getWorkspace();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkspace(\Claroline\CoreBundle\Entity\Workspace\Workspace $workspace = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkspace', [$workspace]);

        return parent::setWorkspace($workspace);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserValidation', []);

        return parent::getUserValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserValidation($userValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserValidation', [$userValidation]);

        return parent::setUserValidation($userValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationValidation', []);

        return parent::getOrganizationValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationValidation($organizationValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationValidation', [$organizationValidation]);

        return parent::setOrganizationValidation($organizationValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxUsers', []);

        return parent::getMaxUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxUsers($maxUsers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxUsers', [$maxUsers]);

        return parent::setMaxUsers($maxUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidators', []);

        return parent::getValidators();
    }

    /**
     * {@inheritDoc}
     */
    public function addValidator(\Claroline\CoreBundle\Entity\User $validator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValidator', [$validator]);

        return parent::addValidator($validator);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValidator(\Claroline\CoreBundle\Entity\User $validator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValidator', [$validator]);

        return parent::removeValidator($validator);
    }

    /**
     * {@inheritDoc}
     */
    public function emptyValidators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'emptyValidators', []);

        return parent::emptyValidators();
    }

    /**
     * {@inheritDoc}
     */
    public function hasValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasValidation', []);

        return parent::hasValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultSessionDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultSessionDuration', []);

        return parent::getDefaultSessionDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSessionDuration($defaultSessionDuration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSessionDuration', [$defaultSessionDuration]);

        return parent::setDefaultSessionDuration($defaultSessionDuration);
    }

    /**
     * {@inheritDoc}
     */
    public function getWithSessionEvent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWithSessionEvent', []);

        return parent::getWithSessionEvent();
    }

    /**
     * {@inheritDoc}
     */
    public function setWithSessionEvent($withSessionEvent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWithSessionEvent', [$withSessionEvent]);

        return parent::setWithSessionEvent($withSessionEvent);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizations', []);

        return parent::getOrganizations();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrganization(\Claroline\CoreBundle\Entity\Organization\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrganization', [$organization]);

        return parent::addOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrganization(\Claroline\CoreBundle\Entity\Organization\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrganization', [$organization]);

        return parent::removeOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayOrder', []);

        return parent::getDisplayOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayOrder($displayOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayOrder', [$displayOrder]);

        return parent::setDisplayOrder($displayOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
