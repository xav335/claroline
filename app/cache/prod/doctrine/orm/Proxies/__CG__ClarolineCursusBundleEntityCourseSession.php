<?php

namespace Proxies\__CG__\Claroline\CursusBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class CourseSession extends \Claroline\CursusBundle\Entity\CourseSession implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'course', 'description', 'workspace', 'learnerRole', 'tutorRole', 'cursus', 'sessionStatus', 'defaultSession', 'creationDate', 'publicRegistration', 'publicUnregistration', 'registrationValidation', 'startDate', 'endDate', 'sessionUsers', 'sessionGroups', 'extra', 'userValidation', 'organizationValidation', 'maxUsers', 'validators', 'type', 'events', 'eventRegistrationType', 'displayOrder', 'details'];
        }

        return ['__isInitialized__', 'id', 'name', 'course', 'description', 'workspace', 'learnerRole', 'tutorRole', 'cursus', 'sessionStatus', 'defaultSession', 'creationDate', 'publicRegistration', 'publicUnregistration', 'registrationValidation', 'startDate', 'endDate', 'sessionUsers', 'sessionGroups', 'extra', 'userValidation', 'organizationValidation', 'maxUsers', 'validators', 'type', 'events', 'eventRegistrationType', 'displayOrder', 'details'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (CourseSession $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getCourse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourse', []);

        return parent::getCourse();
    }

    /**
     * {@inheritDoc}
     */
    public function setCourse(\Claroline\CursusBundle\Entity\Course $course)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCourse', [$course]);

        return parent::setCourse($course);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkspace', []);

        return parent::getWorkspace();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkspace(\Claroline\CoreBundle\Entity\Workspace\Workspace $workspace = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkspace', [$workspace]);

        return parent::setWorkspace($workspace);
    }

    /**
     * {@inheritDoc}
     */
    public function getCursus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCursus', []);

        return parent::getCursus();
    }

    /**
     * {@inheritDoc}
     */
    public function addCursu(\Claroline\CursusBundle\Entity\Cursus $cursus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCursu', [$cursus]);

        return parent::addCursu($cursus);
    }

    /**
     * {@inheritDoc}
     */
    public function addCursus(\Claroline\CursusBundle\Entity\Cursus $cursus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addCursus', [$cursus]);

        return parent::addCursus($cursus);
    }

    /**
     * {@inheritDoc}
     */
    public function removeCursu(\Claroline\CursusBundle\Entity\Cursus $cursus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeCursu', [$cursus]);

        return parent::removeCursu($cursus);
    }

    /**
     * {@inheritDoc}
     */
    public function emptyCursus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'emptyCursus', []);

        return parent::emptyCursus();
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionStatus', []);

        return parent::getSessionStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setSessionStatus($sessionStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSessionStatus', [$sessionStatus]);

        return parent::setSessionStatus($sessionStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getLearnerRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLearnerRole', []);

        return parent::getLearnerRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setLearnerRole(\Claroline\CoreBundle\Entity\Role $learnerRole = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLearnerRole', [$learnerRole]);

        return parent::setLearnerRole($learnerRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getTutorRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTutorRole', []);

        return parent::getTutorRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setTutorRole(\Claroline\CoreBundle\Entity\Role $tutorRole = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTutorRole', [$tutorRole]);

        return parent::setTutorRole($tutorRole);
    }

    /**
     * {@inheritDoc}
     */
    public function isDefaultSession()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDefaultSession', []);

        return parent::isDefaultSession();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultSession($defaultSession)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultSession', [$defaultSession]);

        return parent::setDefaultSession($defaultSession);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicRegistration', []);

        return parent::getPublicRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicRegistration($publicRegistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicRegistration', [$publicRegistration]);

        return parent::setPublicRegistration($publicRegistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicUnregistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicUnregistration', []);

        return parent::getPublicUnregistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicUnregistration($publicUnregistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicUnregistration', [$publicUnregistration]);

        return parent::setPublicUnregistration($publicUnregistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationValidation', []);

        return parent::getRegistrationValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationValidation($registrationValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationValidation', [$registrationValidation]);

        return parent::setRegistrationValidation($registrationValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionUsers', []);

        return parent::getSessionUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getSessionGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSessionGroups', []);

        return parent::getSessionGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getCourseTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCourseTitle', []);

        return parent::getCourseTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getFullNameWithCourse()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullNameWithCourse', []);

        return parent::getFullNameWithCourse();
    }

    /**
     * {@inheritDoc}
     */
    public function getShortNameWithCourse($courseLength = 25)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortNameWithCourse', [$courseLength]);

        return parent::getShortNameWithCourse($courseLength);
    }

    /**
     * {@inheritDoc}
     */
    public function setExtra(array $extra)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExtra', [$extra]);

        return parent::setExtra($extra);
    }

    /**
     * {@inheritDoc}
     */
    public function getExtra()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExtra', []);

        return parent::getExtra();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserValidation', []);

        return parent::getUserValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserValidation($userValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserValidation', [$userValidation]);

        return parent::setUserValidation($userValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationValidation', []);

        return parent::getOrganizationValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizationValidation($organizationValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizationValidation', [$organizationValidation]);

        return parent::setOrganizationValidation($organizationValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxUsers', []);

        return parent::getMaxUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxUsers($maxUsers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxUsers', [$maxUsers]);

        return parent::setMaxUsers($maxUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function getValidators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValidators', []);

        return parent::getValidators();
    }

    /**
     * {@inheritDoc}
     */
    public function addValidator(\Claroline\CoreBundle\Entity\User $validator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addValidator', [$validator]);

        return parent::addValidator($validator);
    }

    /**
     * {@inheritDoc}
     */
    public function removeValidator(\Claroline\CoreBundle\Entity\User $validator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeValidator', [$validator]);

        return parent::removeValidator($validator);
    }

    /**
     * {@inheritDoc}
     */
    public function emptyValidators()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'emptyValidators', []);

        return parent::emptyValidators();
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function hasValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasValidation', []);

        return parent::hasValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function getEvents()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvents', []);

        return parent::getEvents();
    }

    /**
     * {@inheritDoc}
     */
    public function getEventRegistrationType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEventRegistrationType', []);

        return parent::getEventRegistrationType();
    }

    /**
     * {@inheritDoc}
     */
    public function setEventRegistrationType($eventRegistrationType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEventRegistrationType', [$eventRegistrationType]);

        return parent::setEventRegistrationType($eventRegistrationType);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayOrder', []);

        return parent::getDisplayOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayOrder($displayOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayOrder', [$displayOrder]);

        return parent::setDisplayOrder($displayOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getDetails()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDetails', []);

        return parent::getDetails();
    }

    /**
     * {@inheritDoc}
     */
    public function setDetails($details)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDetails', [$details]);

        return parent::setDetails($details);
    }

    /**
     * {@inheritDoc}
     */
    public function getColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getColor', []);

        return parent::getColor();
    }

    /**
     * {@inheritDoc}
     */
    public function setColor($color)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setColor', [$color]);

        return parent::setColor($color);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotal', []);

        return parent::getTotal();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotal($total)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotal', [$total]);

        return parent::setTotal($total);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

}
