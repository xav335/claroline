<?php

namespace Proxies\__CG__\Claroline\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Claroline\CoreBundle\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'firstName', 'lastName', 'username', 'password', 'locale', 'salt', 'plainPassword', 'phone', 'mail', 'guid', 'administrativeCode', 'groups', 'roles', 'resourceNodes', 'personalWorkspace', 'created', 'initDate', 'orderedTools', 'resetPasswordHash', 'hashTime', 'picture', 'pictureFile', 'description', 'hasAcceptedTerms', 'isEnabled', 'isRemoved', 'isMailNotified', 'isMailValidated', 'hideMailWarning', 'lastUri', 'publicUrl', 'hasTunedPublicUrl', 'expirationDate', 'fieldsFacetValue', 'models', 'authentication', 'options', 'emailValidationHash', 'organizations', 'events', 'administratedOrganizations', 'rolesStringAsArray'];
        }

        return ['__isInitialized__', 'id', 'firstName', 'lastName', 'username', 'password', 'locale', 'salt', 'plainPassword', 'phone', 'mail', 'guid', 'administrativeCode', 'groups', 'roles', 'resourceNodes', 'personalWorkspace', 'created', 'initDate', 'orderedTools', 'resetPasswordHash', 'hashTime', 'picture', 'pictureFile', 'description', 'hasAcceptedTerms', 'isEnabled', 'isRemoved', 'isMailNotified', 'isMailValidated', 'hideMailWarning', 'lastUri', 'publicUrl', 'hasTunedPublicUrl', 'expirationDate', 'fieldsFacetValue', 'models', 'authentication', 'options', 'emailValidationHash', 'organizations', 'events', 'administratedOrganizations', 'rolesStringAsArray'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', []);

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', []);

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getPlainPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlainPassword', []);

        return parent::getPlainPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', []);

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function setSalt($salt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSalt', [$salt]);

        return parent::setSalt($salt);
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', [$firstName]);

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', [$lastName]);

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function setUsername($username)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUsername', [$username]);

        return parent::setUsername($username);
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', [$locale]);

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlainPassword($plainPassword)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlainPassword', [$plainPassword]);

        return parent::setPlainPassword($plainPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroups()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroups', []);

        return parent::getGroups();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles($areGroupsIncluded = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', [$areGroupsIncluded]);

        return parent::getRoles($areGroupsIncluded);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntityRoles($areGroupsIncluded = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntityRoles', [$areGroupsIncluded]);

        return parent::getEntityRoles($areGroupsIncluded);
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function isEqualTo(\Symfony\Component\Security\Core\User\UserInterface $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEqualTo', [$user]);

        return parent::isEqualTo($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhone', []);

        return parent::getPhone();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhone($phone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhone', [$phone]);

        return parent::setPhone($phone);
    }

    /**
     * {@inheritDoc}
     */
    public function getMail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMail', []);

        return parent::getMail();
    }

    /**
     * {@inheritDoc}
     */
    public function setMail($mail)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMail', [$mail]);

        return parent::setMail($mail);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministrativeCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministrativeCode', []);

        return parent::getAdministrativeCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdministrativeCode($administrativeCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdministrativeCode', [$administrativeCode]);

        return parent::setAdministrativeCode($administrativeCode);
    }

    /**
     * {@inheritDoc}
     */
    public function serialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serialize', []);

        return parent::serialize();
    }

    /**
     * {@inheritDoc}
     */
    public function unserialize($serialized)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'unserialize', [$serialized]);

        return parent::unserialize($serialized);
    }

    /**
     * {@inheritDoc}
     */
    public function setPersonalWorkspace($workspace)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPersonalWorkspace', [$workspace]);

        return parent::setPersonalWorkspace($workspace);
    }

    /**
     * {@inheritDoc}
     */
    public function getPersonalWorkspace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersonalWorkspace', []);

        return parent::getPersonalWorkspace();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', []);

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate(\DateTime $date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$date]);

        return parent::setCreationDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlatformRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlatformRole', []);

        return parent::getPlatformRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlatformRole($platformRole)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlatformRole', [$platformRole]);

        return parent::setPlatformRole($platformRole);
    }

    /**
     * {@inheritDoc}
     */
    public function setPlatformRoles($platformRoles)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlatformRoles', [$platformRoles]);

        return parent::setPlatformRoles($platformRoles);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderedTools()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderedTools', []);

        return parent::getOrderedTools();
    }

    /**
     * {@inheritDoc}
     */
    public function getResetPasswordHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResetPasswordHash', []);

        return parent::getResetPasswordHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setResetPasswordHash($resetPasswordHash)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResetPasswordHash', [$resetPasswordHash]);

        return parent::setResetPasswordHash($resetPasswordHash);
    }

    /**
     * {@inheritDoc}
     */
    public function getHashTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHashTime', []);

        return parent::getHashTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setHashTime($hashTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHashTime', [$hashTime]);

        return parent::setHashTime($hashTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getPictureFile()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPictureFile', []);

        return parent::getPictureFile();
    }

    /**
     * {@inheritDoc}
     */
    public function setPictureFile(\Symfony\Component\HttpFoundation\File\UploadedFile $pictureFile)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPictureFile', [$pictureFile]);

        return parent::setPictureFile($pictureFile);
    }

    /**
     * {@inheritDoc}
     */
    public function setPicture($picture)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPicture', [$picture]);

        return parent::setPicture($picture);
    }

    /**
     * {@inheritDoc}
     */
    public function getPicture()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPicture', []);

        return parent::getPicture();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function hasAcceptedTerms()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasAcceptedTerms', []);

        return parent::hasAcceptedTerms();
    }

    /**
     * {@inheritDoc}
     */
    public function setAcceptedTerms($boolean)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAcceptedTerms', [$boolean]);

        return parent::setAcceptedTerms($boolean);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderableFields()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderableFields', []);

        return parent::getOrderableFields();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonExpired', []);

        return parent::isAccountNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isAccountNonLocked()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isAccountNonLocked', []);

        return parent::isAccountNonLocked();
    }

    /**
     * {@inheritDoc}
     */
    public function isCredentialsNonExpired()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCredentialsNonExpired', []);

        return parent::isCredentialsNonExpired();
    }

    /**
     * {@inheritDoc}
     */
    public function isEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnabled', []);

        return parent::isEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsEnabled($isEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsEnabled', [$isEnabled]);

        return parent::setIsEnabled($isEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsMailNotified($isMailNotified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsMailNotified', [$isMailNotified]);

        return parent::setIsMailNotified($isMailNotified);
    }

    /**
     * {@inheritDoc}
     */
    public function isMailNotified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMailNotified', []);

        return parent::isMailNotified();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastUri($lastUri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastUri', [$lastUri]);

        return parent::setLastUri($lastUri);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastUri', []);

        return parent::getLastUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublicUrl($publicUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublicUrl', [$publicUrl]);

        return parent::setPublicUrl($publicUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublicUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublicUrl', []);

        return parent::getPublicUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasTunedPublicUrl($hasTunedPublicUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasTunedPublicUrl', [$hasTunedPublicUrl]);

        return parent::setHasTunedPublicUrl($hasTunedPublicUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function hasTunedPublicUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasTunedPublicUrl', []);

        return parent::hasTunedPublicUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function isPublicUrlValid(\Symfony\Component\Validator\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPublicUrlValid', [$context]);

        return parent::isPublicUrlValid($context);
    }

    /**
     * {@inheritDoc}
     */
    public function setExpirationDate($expirationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExpirationDate', [$expirationDate]);

        return parent::setExpirationDate($expirationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getExpirationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExpirationDate', []);

        return parent::getExpirationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function getFieldsFacetValue()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFieldsFacetValue', []);

        return parent::getFieldsFacetValue();
    }

    /**
     * {@inheritDoc}
     */
    public function addFieldFacet(\Claroline\CoreBundle\Entity\Facet\FieldFacetValue $fieldFacetValue)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFieldFacet', [$fieldFacetValue]);

        return parent::addFieldFacet($fieldFacetValue);
    }

    /**
     * {@inheritDoc}
     */
    public function setInitDate($initDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitDate', [$initDate]);

        return parent::setInitDate($initDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitDate', []);

        return parent::getInitDate();
    }

    /**
     * {@inheritDoc}
     */
    public function addModel(\Claroline\CoreBundle\Entity\Model\WorkspaceModel $model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addModel', [$model]);

        return parent::addModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function removeModel(\Claroline\CoreBundle\Entity\Model\WorkspaceModel $model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeModel', [$model]);

        return parent::removeModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthentication($authentication)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthentication', [$authentication]);

        return parent::setAuthentication($authentication);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthentication()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthentication', []);

        return parent::getAuthentication();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', []);

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions(\Claroline\CoreBundle\Entity\UserOptions $options)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', [$options]);

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setGuid($guid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuid', [$guid]);

        return parent::setGuid($guid);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuid', []);

        return parent::getGuid();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsMailValidated($isMailValidated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsMailValidated', [$isMailValidated]);

        return parent::setIsMailValidated($isMailValidated);
    }

    /**
     * {@inheritDoc}
     */
    public function isMailValidated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isMailValidated', []);

        return parent::isMailValidated();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmailValidationHash($hash)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmailValidationHash', [$hash]);

        return parent::setEmailValidationHash($hash);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmailValidationHash()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmailValidationHash', []);

        return parent::getEmailValidationHash();
    }

    /**
     * {@inheritDoc}
     */
    public function setHideMailWarning($hideMailWarning)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHideMailWarning', [$hideMailWarning]);

        return parent::setHideMailWarning($hideMailWarning);
    }

    /**
     * {@inheritDoc}
     */
    public function getHideMailWarning()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHideMailWarning', []);

        return parent::getHideMailWarning();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizations($includeGroups = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizations', [$includeGroups]);

        return parent::getOrganizations($includeGroups);
    }

    /**
     * {@inheritDoc}
     */
    public function addOrganization(\Claroline\CoreBundle\Entity\Organization\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrganization', [$organization]);

        return parent::addOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function setOrganizations($organizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrganizations', [$organizations]);

        return parent::setOrganizations($organizations);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdministratedOrganizations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdministratedOrganizations', []);

        return parent::getAdministratedOrganizations();
    }

    /**
     * {@inheritDoc}
     */
    public function addAdministratedOrganization(\Claroline\CoreBundle\Entity\Organization\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addAdministratedOrganization', [$organization]);

        return parent::addAdministratedOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function removeAdministratedOrganization(\Claroline\CoreBundle\Entity\Organization\Organization $organization)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeAdministratedOrganization', [$organization]);

        return parent::removeAdministratedOrganization($organization);
    }

    /**
     * {@inheritDoc}
     */
    public function setAdministratedOrganizations($organizations)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdministratedOrganizations', [$organizations]);

        return parent::setAdministratedOrganizations($organizations);
    }

    /**
     * {@inheritDoc}
     */
    public function setIsRemoved($isRemoved)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsRemoved', [$isRemoved]);

        return parent::setIsRemoved($isRemoved);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsRemoved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsRemoved', []);

        return parent::getIsRemoved();
    }

    /**
     * {@inheritDoc}
     */
    public function isRemoved()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isRemoved', []);

        return parent::isRemoved();
    }

    /**
     * {@inheritDoc}
     */
    public function enable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'enable', []);

        return parent::enable();
    }

    /**
     * {@inheritDoc}
     */
    public function disable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'disable', []);

        return parent::disable();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Claroline\CoreBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\Claroline\CoreBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function hasRole($roleName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasRole', [$roleName]);

        return parent::hasRole($roleName);
    }

}
