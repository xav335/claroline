<?php

namespace Proxies\__CG__\Claroline\CoreBundle\Entity\Workspace;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Workspace extends \Claroline\CoreBundle\Entity\Workspace\Workspace implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'name', 'description', 'code', 'maxStorageSize', 'maxUploadResources', 'maxUsers', 'displayable', 'resources', 'models', 'orderedTools', 'roles', 'creator', 'guid', 'selfRegistration', 'registrationValidation', 'selfUnregistration', 'creationDate', 'isPersonal', 'startDate', 'endDate', 'isAccessDate', 'workspaceType', 'options', 'events', 'personalUser'];
        }

        return ['__isInitialized__', 'id', 'name', 'description', 'code', 'maxStorageSize', 'maxUploadResources', 'maxUsers', 'displayable', 'resources', 'models', 'orderedTools', 'roles', 'creator', 'guid', 'selfRegistration', 'registrationValidation', 'selfUnregistration', 'creationDate', 'isPersonal', 'startDate', 'endDate', 'isAccessDate', 'workspaceType', 'options', 'events', 'personalUser'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Workspace $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getResources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResources', []);

        return parent::getResources();
    }

    /**
     * {@inheritDoc}
     */
    public function setCode($code)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCode', [$code]);

        return parent::setCode($code);
    }

    /**
     * {@inheritDoc}
     */
    public function getCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCode', []);

        return parent::getCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderedTools()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderedTools', []);

        return parent::getOrderedTools();
    }

    /**
     * {@inheritDoc}
     */
    public function addOrderedTool(\Claroline\CoreBundle\Entity\Tool\OrderedTool $tool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addOrderedTool', [$tool]);

        return parent::addOrderedTool($tool);
    }

    /**
     * {@inheritDoc}
     */
    public function removeOrderedTool(\Claroline\CoreBundle\Entity\Tool\OrderedTool $tool)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeOrderedTool', [$tool]);

        return parent::removeOrderedTool($tool);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Claroline\CoreBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', [$role]);

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRole(\Claroline\CoreBundle\Entity\Role $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRole', [$role]);

        return parent::removeRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreator()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreator', []);

        return parent::getCreator();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreator($creator)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreator', [$creator]);

        return parent::setCreator($creator);
    }

    /**
     * {@inheritDoc}
     */
    public function setGuid($guid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGuid', [$guid]);

        return parent::setGuid($guid);
    }

    /**
     * {@inheritDoc}
     */
    public function getGuid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGuid', []);

        return parent::getGuid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayable($displayable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayable', [$displayable]);

        return parent::setDisplayable($displayable);
    }

    /**
     * {@inheritDoc}
     */
    public function isDisplayable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDisplayable', []);

        return parent::isDisplayable();
    }

    /**
     * {@inheritDoc}
     */
    public function setSelfRegistration($selfRegistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelfRegistration', [$selfRegistration]);

        return parent::setSelfRegistration($selfRegistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelfRegistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelfRegistration', []);

        return parent::getSelfRegistration();
    }

    /**
     * {@inheritDoc}
     */
    public function getRegistrationValidation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegistrationValidation', []);

        return parent::getRegistrationValidation();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegistrationValidation($registrationValidation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegistrationValidation', [$registrationValidation]);

        return parent::setRegistrationValidation($registrationValidation);
    }

    /**
     * {@inheritDoc}
     */
    public function setSelfUnregistration($selfUnregistration)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSelfUnregistration', [$selfUnregistration]);

        return parent::setSelfUnregistration($selfUnregistration);
    }

    /**
     * {@inheritDoc}
     */
    public function getSelfUnregistration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSelfUnregistration', []);

        return parent::getSelfUnregistration();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreationDate($creationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreationDate', [$creationDate]);

        return parent::setCreationDate($creationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreationDate', []);

        return parent::getCreationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxStorageSize($maxSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxStorageSize', [$maxSize]);

        return parent::setMaxStorageSize($maxSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxStorageSize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxStorageSize', []);

        return parent::getMaxStorageSize();
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxUploadResources($maxSize)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxUploadResources', [$maxSize]);

        return parent::setMaxUploadResources($maxSize);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxUploadResources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxUploadResources', []);

        return parent::getMaxUploadResources();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsPersonal($isPersonal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsPersonal', [$isPersonal]);

        return parent::setIsPersonal($isPersonal);
    }

    /**
     * {@inheritDoc}
     */
    public function isPersonal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isPersonal', []);

        return parent::isPersonal();
    }

    /**
     * {@inheritDoc}
     */
    public function serializeForWidgetPicker()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'serializeForWidgetPicker', []);

        return parent::serializeForWidgetPicker();
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate(\DateTime $startDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate(\DateTime $endDate = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsAccessDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsAccessDate', []);

        return parent::getIsAccessDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsAccessDate($isAccessDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsAccessDate', [$isAccessDate]);

        return parent::setIsAccessDate($isAccessDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkspaceType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkspaceType', []);

        return parent::getWorkspaceType();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkspaceType($workspaceType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkspaceType', [$workspaceType]);

        return parent::setWorkspaceType($workspaceType);
    }

    /**
     * {@inheritDoc}
     */
    public function setMaxUsers($maxUsers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMaxUsers', [$maxUsers]);

        return parent::setMaxUsers($maxUsers);
    }

    /**
     * {@inheritDoc}
     */
    public function getMaxUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMaxUsers', []);

        return parent::getMaxUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function getNameAndCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameAndCode', []);

        return parent::getNameAndCode();
    }

    /**
     * {@inheritDoc}
     */
    public function getOptions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOptions', []);

        return parent::getOptions();
    }

    /**
     * {@inheritDoc}
     */
    public function setOptions(\Claroline\CoreBundle\Entity\Workspace\WorkspaceOptions $options = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOptions', [$options]);

        return parent::setOptions($options);
    }

    /**
     * {@inheritDoc}
     */
    public function getBackgroundColor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBackgroundColor', []);

        return parent::getBackgroundColor();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function getManagerRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getManagerRole', []);

        return parent::getManagerRole();
    }

    /**
     * {@inheritDoc}
     */
    public function getPersonalUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPersonalUser', []);

        return parent::getPersonalUser();
    }

}
