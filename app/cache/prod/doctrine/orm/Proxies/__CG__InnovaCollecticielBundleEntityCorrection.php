<?php

namespace Proxies\__CG__\Innova\CollecticielBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Correction extends \Innova\CollecticielBundle\Entity\Correction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'totalGrade', 'comment', 'valid', 'startDate', 'lastOpenDate', 'endDate', 'finished', 'editable', 'reporter', 'reportComment', 'correctionDenied', 'correctionDeniedComment', 'grades', 'user', 'drop', 'dropzone'];
        }

        return ['__isInitialized__', 'id', 'totalGrade', 'comment', 'valid', 'startDate', 'lastOpenDate', 'endDate', 'finished', 'editable', 'reporter', 'reportComment', 'correctionDenied', 'correctionDeniedComment', 'grades', 'user', 'drop', 'dropzone'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Correction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setComment($comment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComment', [$comment]);

        return parent::setComment($comment);
    }

    /**
     * {@inheritDoc}
     */
    public function getComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComment', []);

        return parent::getComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndDate($endDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndDate', [$endDate]);

        return parent::setEndDate($endDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndDate', []);

        return parent::getEndDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinished($finished)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinished', [$finished]);

        return parent::setFinished($finished);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinished()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinished', []);

        return parent::getFinished();
    }

    /**
     * {@inheritDoc}
     */
    public function setGrades($grades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGrades', [$grades]);

        return parent::setGrades($grades);
    }

    /**
     * {@inheritDoc}
     */
    public function getGrades()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGrades', []);

        return parent::getGrades();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStartDate($startDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStartDate', [$startDate]);

        return parent::setStartDate($startDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartDate', []);

        return parent::getStartDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalGrade($totalGrade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalGrade', [$totalGrade]);

        return parent::setTotalGrade($totalGrade);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalGrade()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalGrade', []);

        return parent::getTotalGrade();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setValid($valid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setValid', [$valid]);

        return parent::setValid($valid);
    }

    /**
     * {@inheritDoc}
     */
    public function getValid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getValid', []);

        return parent::getValid();
    }

    /**
     * {@inheritDoc}
     */
    public function setDrop($drop)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDrop', [$drop]);

        return parent::setDrop($drop);
    }

    /**
     * {@inheritDoc}
     */
    public function getDrop()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDrop', []);

        return parent::getDrop();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastOpenDate($lastOpenDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastOpenDate', [$lastOpenDate]);

        return parent::setLastOpenDate($lastOpenDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastOpenDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastOpenDate', []);

        return parent::getLastOpenDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setDropzone($dropzone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDropzone', [$dropzone]);

        return parent::setDropzone($dropzone);
    }

    /**
     * {@inheritDoc}
     */
    public function getDropzone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDropzone', []);

        return parent::getDropzone();
    }

    /**
     * {@inheritDoc}
     */
    public function setEditable($editable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEditable', [$editable]);

        return parent::setEditable($editable);
    }

    /**
     * {@inheritDoc}
     */
    public function getEditable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEditable', []);

        return parent::getEditable();
    }

    /**
     * {@inheritDoc}
     */
    public function setReporter($reporter)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReporter', [$reporter]);

        return parent::setReporter($reporter);
    }

    /**
     * {@inheritDoc}
     */
    public function getReporter()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReporter', []);

        return parent::getReporter();
    }

    /**
     * {@inheritDoc}
     */
    public function setReportComment($reportComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReportComment', [$reportComment]);

        return parent::setReportComment($reportComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getReportComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReportComment', []);

        return parent::getReportComment();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorrectionDenied($correctionDenied)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorrectionDenied', [$correctionDenied]);

        return parent::setCorrectionDenied($correctionDenied);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorrectionDenied()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorrectionDenied', []);

        return parent::getCorrectionDenied();
    }

    /**
     * {@inheritDoc}
     */
    public function setCorrectionDeniedComment($correctionDeniedComment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCorrectionDeniedComment', [$correctionDeniedComment]);

        return parent::setCorrectionDeniedComment($correctionDeniedComment);
    }

    /**
     * {@inheritDoc}
     */
    public function getCorrectionDeniedComment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCorrectionDeniedComment', []);

        return parent::getCorrectionDeniedComment();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray($hydrateUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', [$hydrateUser]);

        return parent::toArray($hydrateUser);
    }

    /**
     * {@inheritDoc}
     */
    public function addGrade(\Innova\CollecticielBundle\Entity\Grade $grades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addGrade', [$grades]);

        return parent::addGrade($grades);
    }

    /**
     * {@inheritDoc}
     */
    public function removeGrade(\Innova\CollecticielBundle\Entity\Grade $grades)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeGrade', [$grades]);

        return parent::removeGrade($grades);
    }

}
